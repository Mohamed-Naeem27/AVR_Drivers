
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000026b0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000026b0  00002724  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001fbc  00000000  00000000  0000272c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c3a  00000000  00000000  000046e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00005322  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00005462  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000055d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000721b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00008106  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00008eb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00009014  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  000092a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009a6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 eb       	ldi	r30, 0xB0	; 176
      68:	f6 e2       	ldi	r31, 0x26	; 38
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <main>
      7a:	0c 94 56 13 	jmp	0x26ac	; 0x26ac <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 1f 13 	jmp	0x263e	; 0x263e <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 3b 13 	jmp	0x2676	; 0x2676 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 2b 13 	jmp	0x2656	; 0x2656 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 47 13 	jmp	0x268e	; 0x268e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 2b 13 	jmp	0x2656	; 0x2656 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 47 13 	jmp	0x268e	; 0x268e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 1f 13 	jmp	0x263e	; 0x263e <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 3b 13 	jmp	0x2676	; 0x2676 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 2b 13 	jmp	0x2656	; 0x2656 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 47 13 	jmp	0x268e	; 0x268e <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 2b 13 	jmp	0x2656	; 0x2656 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 47 13 	jmp	0x268e	; 0x268e <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 2b 13 	jmp	0x2656	; 0x2656 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 47 13 	jmp	0x268e	; 0x268e <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 2f 13 	jmp	0x265e	; 0x265e <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 4b 13 	jmp	0x2696	; 0x2696 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_SetPortDirection>:
#include "../../LIB/STD_types.h"
#include "DIO_types.h"


void DIO_SetPortDirection(DIO_PORT_ID port_ID , DIO_Direction direction)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <DIO_SetPortDirection+0x6>
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <DIO_SetPortDirection+0x8>
     b3e:	00 d0       	rcall	.+0      	; 0xb40 <DIO_SetPortDirection+0xa>
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	89 83       	std	Y+1, r24	; 0x01
     b46:	6a 83       	std	Y+2, r22	; 0x02
    if (OUTPUT == direction)
     b48:	8a 81       	ldd	r24, Y+2	; 0x02
     b4a:	81 30       	cpi	r24, 0x01	; 1
     b4c:	99 f5       	brne	.+102    	; 0xbb4 <DIO_SetPortDirection+0x7e>
    {
    	switch(port_ID)
     b4e:	89 81       	ldd	r24, Y+1	; 0x01
     b50:	28 2f       	mov	r18, r24
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	3e 83       	std	Y+6, r19	; 0x06
     b56:	2d 83       	std	Y+5, r18	; 0x05
     b58:	8d 81       	ldd	r24, Y+5	; 0x05
     b5a:	9e 81       	ldd	r25, Y+6	; 0x06
     b5c:	81 30       	cpi	r24, 0x01	; 1
     b5e:	91 05       	cpc	r25, r1
     b60:	d1 f0       	breq	.+52     	; 0xb96 <DIO_SetPortDirection+0x60>
     b62:	2d 81       	ldd	r18, Y+5	; 0x05
     b64:	3e 81       	ldd	r19, Y+6	; 0x06
     b66:	22 30       	cpi	r18, 0x02	; 2
     b68:	31 05       	cpc	r19, r1
     b6a:	2c f4       	brge	.+10     	; 0xb76 <DIO_SetPortDirection+0x40>
     b6c:	8d 81       	ldd	r24, Y+5	; 0x05
     b6e:	9e 81       	ldd	r25, Y+6	; 0x06
     b70:	00 97       	sbiw	r24, 0x00	; 0
     b72:	61 f0       	breq	.+24     	; 0xb8c <DIO_SetPortDirection+0x56>
     b74:	54 c0       	rjmp	.+168    	; 0xc1e <DIO_SetPortDirection+0xe8>
     b76:	2d 81       	ldd	r18, Y+5	; 0x05
     b78:	3e 81       	ldd	r19, Y+6	; 0x06
     b7a:	22 30       	cpi	r18, 0x02	; 2
     b7c:	31 05       	cpc	r19, r1
     b7e:	81 f0       	breq	.+32     	; 0xba0 <DIO_SetPortDirection+0x6a>
     b80:	8d 81       	ldd	r24, Y+5	; 0x05
     b82:	9e 81       	ldd	r25, Y+6	; 0x06
     b84:	83 30       	cpi	r24, 0x03	; 3
     b86:	91 05       	cpc	r25, r1
     b88:	81 f0       	breq	.+32     	; 0xbaa <DIO_SetPortDirection+0x74>
     b8a:	49 c0       	rjmp	.+146    	; 0xc1e <DIO_SetPortDirection+0xe8>
    	{
    	case PORTA: DDRA_Reg = 0xFF ; break;
     b8c:	ea e3       	ldi	r30, 0x3A	; 58
     b8e:	f0 e0       	ldi	r31, 0x00	; 0
     b90:	8f ef       	ldi	r24, 0xFF	; 255
     b92:	80 83       	st	Z, r24
     b94:	44 c0       	rjmp	.+136    	; 0xc1e <DIO_SetPortDirection+0xe8>
    	case PORTB: DDRB_Reg = 0xFF ; break;
     b96:	e7 e3       	ldi	r30, 0x37	; 55
     b98:	f0 e0       	ldi	r31, 0x00	; 0
     b9a:	8f ef       	ldi	r24, 0xFF	; 255
     b9c:	80 83       	st	Z, r24
     b9e:	3f c0       	rjmp	.+126    	; 0xc1e <DIO_SetPortDirection+0xe8>
    	case PORTC: DDRC_Reg = 0xFF ; break;
     ba0:	e4 e3       	ldi	r30, 0x34	; 52
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	8f ef       	ldi	r24, 0xFF	; 255
     ba6:	80 83       	st	Z, r24
     ba8:	3a c0       	rjmp	.+116    	; 0xc1e <DIO_SetPortDirection+0xe8>
    	case PORTD: DDRD_Reg = 0xFF ; break;
     baa:	e1 e3       	ldi	r30, 0x31	; 49
     bac:	f0 e0       	ldi	r31, 0x00	; 0
     bae:	8f ef       	ldi	r24, 0xFF	; 255
     bb0:	80 83       	st	Z, r24
     bb2:	35 c0       	rjmp	.+106    	; 0xc1e <DIO_SetPortDirection+0xe8>
    	}
    }


    else if (INPUT == direction)
     bb4:	8a 81       	ldd	r24, Y+2	; 0x02
     bb6:	88 23       	and	r24, r24
     bb8:	91 f5       	brne	.+100    	; 0xc1e <DIO_SetPortDirection+0xe8>
    {
    	switch(port_ID)
     bba:	89 81       	ldd	r24, Y+1	; 0x01
     bbc:	28 2f       	mov	r18, r24
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	3c 83       	std	Y+4, r19	; 0x04
     bc2:	2b 83       	std	Y+3, r18	; 0x03
     bc4:	8b 81       	ldd	r24, Y+3	; 0x03
     bc6:	9c 81       	ldd	r25, Y+4	; 0x04
     bc8:	81 30       	cpi	r24, 0x01	; 1
     bca:	91 05       	cpc	r25, r1
     bcc:	d1 f0       	breq	.+52     	; 0xc02 <DIO_SetPortDirection+0xcc>
     bce:	2b 81       	ldd	r18, Y+3	; 0x03
     bd0:	3c 81       	ldd	r19, Y+4	; 0x04
     bd2:	22 30       	cpi	r18, 0x02	; 2
     bd4:	31 05       	cpc	r19, r1
     bd6:	2c f4       	brge	.+10     	; 0xbe2 <DIO_SetPortDirection+0xac>
     bd8:	8b 81       	ldd	r24, Y+3	; 0x03
     bda:	9c 81       	ldd	r25, Y+4	; 0x04
     bdc:	00 97       	sbiw	r24, 0x00	; 0
     bde:	61 f0       	breq	.+24     	; 0xbf8 <DIO_SetPortDirection+0xc2>
     be0:	1e c0       	rjmp	.+60     	; 0xc1e <DIO_SetPortDirection+0xe8>
     be2:	2b 81       	ldd	r18, Y+3	; 0x03
     be4:	3c 81       	ldd	r19, Y+4	; 0x04
     be6:	22 30       	cpi	r18, 0x02	; 2
     be8:	31 05       	cpc	r19, r1
     bea:	81 f0       	breq	.+32     	; 0xc0c <DIO_SetPortDirection+0xd6>
     bec:	8b 81       	ldd	r24, Y+3	; 0x03
     bee:	9c 81       	ldd	r25, Y+4	; 0x04
     bf0:	83 30       	cpi	r24, 0x03	; 3
     bf2:	91 05       	cpc	r25, r1
     bf4:	81 f0       	breq	.+32     	; 0xc16 <DIO_SetPortDirection+0xe0>
     bf6:	13 c0       	rjmp	.+38     	; 0xc1e <DIO_SetPortDirection+0xe8>
    	{
     	case PORTA: DDRA_Reg = 0xFF ; break;
     bf8:	ea e3       	ldi	r30, 0x3A	; 58
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	8f ef       	ldi	r24, 0xFF	; 255
     bfe:	80 83       	st	Z, r24
     c00:	0e c0       	rjmp	.+28     	; 0xc1e <DIO_SetPortDirection+0xe8>
    	case PORTB: DDRB_Reg = 0xFF ; break;
     c02:	e7 e3       	ldi	r30, 0x37	; 55
     c04:	f0 e0       	ldi	r31, 0x00	; 0
     c06:	8f ef       	ldi	r24, 0xFF	; 255
     c08:	80 83       	st	Z, r24
     c0a:	09 c0       	rjmp	.+18     	; 0xc1e <DIO_SetPortDirection+0xe8>
    	case PORTC: DDRC_Reg = 0xFF ; break;
     c0c:	e4 e3       	ldi	r30, 0x34	; 52
     c0e:	f0 e0       	ldi	r31, 0x00	; 0
     c10:	8f ef       	ldi	r24, 0xFF	; 255
     c12:	80 83       	st	Z, r24
     c14:	04 c0       	rjmp	.+8      	; 0xc1e <DIO_SetPortDirection+0xe8>
    	case PORTD: DDRD_Reg = 0xFF ; break;
     c16:	e1 e3       	ldi	r30, 0x31	; 49
     c18:	f0 e0       	ldi	r31, 0x00	; 0
     c1a:	8f ef       	ldi	r24, 0xFF	; 255
     c1c:	80 83       	st	Z, r24
    	}
    }
}
     c1e:	26 96       	adiw	r28, 0x06	; 6
     c20:	0f b6       	in	r0, 0x3f	; 63
     c22:	f8 94       	cli
     c24:	de bf       	out	0x3e, r29	; 62
     c26:	0f be       	out	0x3f, r0	; 63
     c28:	cd bf       	out	0x3d, r28	; 61
     c2a:	cf 91       	pop	r28
     c2c:	df 91       	pop	r29
     c2e:	08 95       	ret

00000c30 <DIO_SetPortValue>:

void DIO_SetPortValue(DIO_PORT_ID port_ID , u8 value )
{
     c30:	df 93       	push	r29
     c32:	cf 93       	push	r28
     c34:	00 d0       	rcall	.+0      	; 0xc36 <DIO_SetPortValue+0x6>
     c36:	00 d0       	rcall	.+0      	; 0xc38 <DIO_SetPortValue+0x8>
     c38:	cd b7       	in	r28, 0x3d	; 61
     c3a:	de b7       	in	r29, 0x3e	; 62
     c3c:	89 83       	std	Y+1, r24	; 0x01
     c3e:	6a 83       	std	Y+2, r22	; 0x02
   	switch (port_ID)
     c40:	89 81       	ldd	r24, Y+1	; 0x01
     c42:	28 2f       	mov	r18, r24
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	3c 83       	std	Y+4, r19	; 0x04
     c48:	2b 83       	std	Y+3, r18	; 0x03
     c4a:	8b 81       	ldd	r24, Y+3	; 0x03
     c4c:	9c 81       	ldd	r25, Y+4	; 0x04
     c4e:	81 30       	cpi	r24, 0x01	; 1
     c50:	91 05       	cpc	r25, r1
     c52:	d1 f0       	breq	.+52     	; 0xc88 <DIO_SetPortValue+0x58>
     c54:	2b 81       	ldd	r18, Y+3	; 0x03
     c56:	3c 81       	ldd	r19, Y+4	; 0x04
     c58:	22 30       	cpi	r18, 0x02	; 2
     c5a:	31 05       	cpc	r19, r1
     c5c:	2c f4       	brge	.+10     	; 0xc68 <DIO_SetPortValue+0x38>
     c5e:	8b 81       	ldd	r24, Y+3	; 0x03
     c60:	9c 81       	ldd	r25, Y+4	; 0x04
     c62:	00 97       	sbiw	r24, 0x00	; 0
     c64:	61 f0       	breq	.+24     	; 0xc7e <DIO_SetPortValue+0x4e>
     c66:	1e c0       	rjmp	.+60     	; 0xca4 <DIO_SetPortValue+0x74>
     c68:	2b 81       	ldd	r18, Y+3	; 0x03
     c6a:	3c 81       	ldd	r19, Y+4	; 0x04
     c6c:	22 30       	cpi	r18, 0x02	; 2
     c6e:	31 05       	cpc	r19, r1
     c70:	81 f0       	breq	.+32     	; 0xc92 <DIO_SetPortValue+0x62>
     c72:	8b 81       	ldd	r24, Y+3	; 0x03
     c74:	9c 81       	ldd	r25, Y+4	; 0x04
     c76:	83 30       	cpi	r24, 0x03	; 3
     c78:	91 05       	cpc	r25, r1
     c7a:	81 f0       	breq	.+32     	; 0xc9c <DIO_SetPortValue+0x6c>
     c7c:	13 c0       	rjmp	.+38     	; 0xca4 <DIO_SetPortValue+0x74>
   	{
   	   case PORTA: PORTA_Reg = value ;break;
     c7e:	eb e3       	ldi	r30, 0x3B	; 59
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	8a 81       	ldd	r24, Y+2	; 0x02
     c84:	80 83       	st	Z, r24
     c86:	0e c0       	rjmp	.+28     	; 0xca4 <DIO_SetPortValue+0x74>
   	   case PORTB: PORTB_Reg = value ;break;
     c88:	e8 e3       	ldi	r30, 0x38	; 56
     c8a:	f0 e0       	ldi	r31, 0x00	; 0
     c8c:	8a 81       	ldd	r24, Y+2	; 0x02
     c8e:	80 83       	st	Z, r24
     c90:	09 c0       	rjmp	.+18     	; 0xca4 <DIO_SetPortValue+0x74>
   	   case PORTC: PORTC_Reg = value ;break;
     c92:	e5 e3       	ldi	r30, 0x35	; 53
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	8a 81       	ldd	r24, Y+2	; 0x02
     c98:	80 83       	st	Z, r24
     c9a:	04 c0       	rjmp	.+8      	; 0xca4 <DIO_SetPortValue+0x74>
   	   case PORTD: PORTD_Reg = value ;break;
     c9c:	e2 e3       	ldi	r30, 0x32	; 50
     c9e:	f0 e0       	ldi	r31, 0x00	; 0
     ca0:	8a 81       	ldd	r24, Y+2	; 0x02
     ca2:	80 83       	st	Z, r24
   	}
}
     ca4:	0f 90       	pop	r0
     ca6:	0f 90       	pop	r0
     ca8:	0f 90       	pop	r0
     caa:	0f 90       	pop	r0
     cac:	cf 91       	pop	r28
     cae:	df 91       	pop	r29
     cb0:	08 95       	ret

00000cb2 <DIO_SetPinDirection>:

void DIO_SetPinDirection(DIO_PORT_ID port_ID , DIO_PIN_ID pin_ID , DIO_Direction direction)
{
     cb2:	df 93       	push	r29
     cb4:	cf 93       	push	r28
     cb6:	cd b7       	in	r28, 0x3d	; 61
     cb8:	de b7       	in	r29, 0x3e	; 62
     cba:	27 97       	sbiw	r28, 0x07	; 7
     cbc:	0f b6       	in	r0, 0x3f	; 63
     cbe:	f8 94       	cli
     cc0:	de bf       	out	0x3e, r29	; 62
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	cd bf       	out	0x3d, r28	; 61
     cc6:	89 83       	std	Y+1, r24	; 0x01
     cc8:	6a 83       	std	Y+2, r22	; 0x02
     cca:	4b 83       	std	Y+3, r20	; 0x03
   if (port_ID <= PORTD && pin_ID <= pin7)
     ccc:	89 81       	ldd	r24, Y+1	; 0x01
     cce:	84 30       	cpi	r24, 0x04	; 4
     cd0:	08 f0       	brcs	.+2      	; 0xcd4 <DIO_SetPinDirection+0x22>
     cd2:	ee c0       	rjmp	.+476    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
     cd4:	8a 81       	ldd	r24, Y+2	; 0x02
     cd6:	88 30       	cpi	r24, 0x08	; 8
     cd8:	08 f0       	brcs	.+2      	; 0xcdc <DIO_SetPinDirection+0x2a>
     cda:	ea c0       	rjmp	.+468    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
   {
	 if(OUTPUT == direction)
     cdc:	8b 81       	ldd	r24, Y+3	; 0x03
     cde:	81 30       	cpi	r24, 0x01	; 1
     ce0:	09 f0       	breq	.+2      	; 0xce4 <DIO_SetPinDirection+0x32>
     ce2:	6f c0       	rjmp	.+222    	; 0xdc2 <DIO_SetPinDirection+0x110>
	   {
		 switch(port_ID)
     ce4:	89 81       	ldd	r24, Y+1	; 0x01
     ce6:	28 2f       	mov	r18, r24
     ce8:	30 e0       	ldi	r19, 0x00	; 0
     cea:	3f 83       	std	Y+7, r19	; 0x07
     cec:	2e 83       	std	Y+6, r18	; 0x06
     cee:	8e 81       	ldd	r24, Y+6	; 0x06
     cf0:	9f 81       	ldd	r25, Y+7	; 0x07
     cf2:	81 30       	cpi	r24, 0x01	; 1
     cf4:	91 05       	cpc	r25, r1
     cf6:	49 f1       	breq	.+82     	; 0xd4a <DIO_SetPinDirection+0x98>
     cf8:	2e 81       	ldd	r18, Y+6	; 0x06
     cfa:	3f 81       	ldd	r19, Y+7	; 0x07
     cfc:	22 30       	cpi	r18, 0x02	; 2
     cfe:	31 05       	cpc	r19, r1
     d00:	2c f4       	brge	.+10     	; 0xd0c <DIO_SetPinDirection+0x5a>
     d02:	8e 81       	ldd	r24, Y+6	; 0x06
     d04:	9f 81       	ldd	r25, Y+7	; 0x07
     d06:	00 97       	sbiw	r24, 0x00	; 0
     d08:	61 f0       	breq	.+24     	; 0xd22 <DIO_SetPinDirection+0x70>
     d0a:	d2 c0       	rjmp	.+420    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
     d0c:	2e 81       	ldd	r18, Y+6	; 0x06
     d0e:	3f 81       	ldd	r19, Y+7	; 0x07
     d10:	22 30       	cpi	r18, 0x02	; 2
     d12:	31 05       	cpc	r19, r1
     d14:	71 f1       	breq	.+92     	; 0xd72 <DIO_SetPinDirection+0xc0>
     d16:	8e 81       	ldd	r24, Y+6	; 0x06
     d18:	9f 81       	ldd	r25, Y+7	; 0x07
     d1a:	83 30       	cpi	r24, 0x03	; 3
     d1c:	91 05       	cpc	r25, r1
     d1e:	e9 f1       	breq	.+122    	; 0xd9a <DIO_SetPinDirection+0xe8>
     d20:	c7 c0       	rjmp	.+398    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
		 {
		 case PORTA: SET_BIt(DDRA_Reg , pin_ID) ;break;
     d22:	aa e3       	ldi	r26, 0x3A	; 58
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	ea e3       	ldi	r30, 0x3A	; 58
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	80 81       	ld	r24, Z
     d2c:	48 2f       	mov	r20, r24
     d2e:	8a 81       	ldd	r24, Y+2	; 0x02
     d30:	28 2f       	mov	r18, r24
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	02 2e       	mov	r0, r18
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <DIO_SetPinDirection+0x8e>
     d3c:	88 0f       	add	r24, r24
     d3e:	99 1f       	adc	r25, r25
     d40:	0a 94       	dec	r0
     d42:	e2 f7       	brpl	.-8      	; 0xd3c <DIO_SetPinDirection+0x8a>
     d44:	84 2b       	or	r24, r20
     d46:	8c 93       	st	X, r24
     d48:	b3 c0       	rjmp	.+358    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
		 case PORTB: SET_BIt(DDRB_Reg , pin_ID) ;break;
     d4a:	a7 e3       	ldi	r26, 0x37	; 55
     d4c:	b0 e0       	ldi	r27, 0x00	; 0
     d4e:	e7 e3       	ldi	r30, 0x37	; 55
     d50:	f0 e0       	ldi	r31, 0x00	; 0
     d52:	80 81       	ld	r24, Z
     d54:	48 2f       	mov	r20, r24
     d56:	8a 81       	ldd	r24, Y+2	; 0x02
     d58:	28 2f       	mov	r18, r24
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	81 e0       	ldi	r24, 0x01	; 1
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	02 2e       	mov	r0, r18
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <DIO_SetPinDirection+0xb6>
     d64:	88 0f       	add	r24, r24
     d66:	99 1f       	adc	r25, r25
     d68:	0a 94       	dec	r0
     d6a:	e2 f7       	brpl	.-8      	; 0xd64 <DIO_SetPinDirection+0xb2>
     d6c:	84 2b       	or	r24, r20
     d6e:	8c 93       	st	X, r24
     d70:	9f c0       	rjmp	.+318    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
		 case PORTC: SET_BIt(DDRC_Reg , pin_ID) ;break;
     d72:	a4 e3       	ldi	r26, 0x34	; 52
     d74:	b0 e0       	ldi	r27, 0x00	; 0
     d76:	e4 e3       	ldi	r30, 0x34	; 52
     d78:	f0 e0       	ldi	r31, 0x00	; 0
     d7a:	80 81       	ld	r24, Z
     d7c:	48 2f       	mov	r20, r24
     d7e:	8a 81       	ldd	r24, Y+2	; 0x02
     d80:	28 2f       	mov	r18, r24
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	81 e0       	ldi	r24, 0x01	; 1
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	02 2e       	mov	r0, r18
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <DIO_SetPinDirection+0xde>
     d8c:	88 0f       	add	r24, r24
     d8e:	99 1f       	adc	r25, r25
     d90:	0a 94       	dec	r0
     d92:	e2 f7       	brpl	.-8      	; 0xd8c <DIO_SetPinDirection+0xda>
     d94:	84 2b       	or	r24, r20
     d96:	8c 93       	st	X, r24
     d98:	8b c0       	rjmp	.+278    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
		 case PORTD: SET_BIt(DDRD_Reg , pin_ID) ;break;
     d9a:	a1 e3       	ldi	r26, 0x31	; 49
     d9c:	b0 e0       	ldi	r27, 0x00	; 0
     d9e:	e1 e3       	ldi	r30, 0x31	; 49
     da0:	f0 e0       	ldi	r31, 0x00	; 0
     da2:	80 81       	ld	r24, Z
     da4:	48 2f       	mov	r20, r24
     da6:	8a 81       	ldd	r24, Y+2	; 0x02
     da8:	28 2f       	mov	r18, r24
     daa:	30 e0       	ldi	r19, 0x00	; 0
     dac:	81 e0       	ldi	r24, 0x01	; 1
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	02 2e       	mov	r0, r18
     db2:	02 c0       	rjmp	.+4      	; 0xdb8 <DIO_SetPinDirection+0x106>
     db4:	88 0f       	add	r24, r24
     db6:	99 1f       	adc	r25, r25
     db8:	0a 94       	dec	r0
     dba:	e2 f7       	brpl	.-8      	; 0xdb4 <DIO_SetPinDirection+0x102>
     dbc:	84 2b       	or	r24, r20
     dbe:	8c 93       	st	X, r24
     dc0:	77 c0       	rjmp	.+238    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
		 }

	   }
	 else if (INPUT == direction)
     dc2:	8b 81       	ldd	r24, Y+3	; 0x03
     dc4:	88 23       	and	r24, r24
     dc6:	09 f0       	breq	.+2      	; 0xdca <DIO_SetPinDirection+0x118>
     dc8:	73 c0       	rjmp	.+230    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
	 {
		switch(port_ID)
     dca:	89 81       	ldd	r24, Y+1	; 0x01
     dcc:	28 2f       	mov	r18, r24
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	3d 83       	std	Y+5, r19	; 0x05
     dd2:	2c 83       	std	Y+4, r18	; 0x04
     dd4:	8c 81       	ldd	r24, Y+4	; 0x04
     dd6:	9d 81       	ldd	r25, Y+5	; 0x05
     dd8:	81 30       	cpi	r24, 0x01	; 1
     dda:	91 05       	cpc	r25, r1
     ddc:	59 f1       	breq	.+86     	; 0xe34 <DIO_SetPinDirection+0x182>
     dde:	2c 81       	ldd	r18, Y+4	; 0x04
     de0:	3d 81       	ldd	r19, Y+5	; 0x05
     de2:	22 30       	cpi	r18, 0x02	; 2
     de4:	31 05       	cpc	r19, r1
     de6:	2c f4       	brge	.+10     	; 0xdf2 <DIO_SetPinDirection+0x140>
     de8:	8c 81       	ldd	r24, Y+4	; 0x04
     dea:	9d 81       	ldd	r25, Y+5	; 0x05
     dec:	00 97       	sbiw	r24, 0x00	; 0
     dee:	69 f0       	breq	.+26     	; 0xe0a <DIO_SetPinDirection+0x158>
     df0:	5f c0       	rjmp	.+190    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
     df2:	2c 81       	ldd	r18, Y+4	; 0x04
     df4:	3d 81       	ldd	r19, Y+5	; 0x05
     df6:	22 30       	cpi	r18, 0x02	; 2
     df8:	31 05       	cpc	r19, r1
     dfa:	89 f1       	breq	.+98     	; 0xe5e <DIO_SetPinDirection+0x1ac>
     dfc:	8c 81       	ldd	r24, Y+4	; 0x04
     dfe:	9d 81       	ldd	r25, Y+5	; 0x05
     e00:	83 30       	cpi	r24, 0x03	; 3
     e02:	91 05       	cpc	r25, r1
     e04:	09 f4       	brne	.+2      	; 0xe08 <DIO_SetPinDirection+0x156>
     e06:	40 c0       	rjmp	.+128    	; 0xe88 <DIO_SetPinDirection+0x1d6>
     e08:	53 c0       	rjmp	.+166    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
		 {
		 case PORTA: CLEAR_BIt(DDRA_Reg , pin_ID) ;break;
     e0a:	aa e3       	ldi	r26, 0x3A	; 58
     e0c:	b0 e0       	ldi	r27, 0x00	; 0
     e0e:	ea e3       	ldi	r30, 0x3A	; 58
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	80 81       	ld	r24, Z
     e14:	48 2f       	mov	r20, r24
     e16:	8a 81       	ldd	r24, Y+2	; 0x02
     e18:	28 2f       	mov	r18, r24
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	81 e0       	ldi	r24, 0x01	; 1
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	02 2e       	mov	r0, r18
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <DIO_SetPinDirection+0x176>
     e24:	88 0f       	add	r24, r24
     e26:	99 1f       	adc	r25, r25
     e28:	0a 94       	dec	r0
     e2a:	e2 f7       	brpl	.-8      	; 0xe24 <DIO_SetPinDirection+0x172>
     e2c:	80 95       	com	r24
     e2e:	84 23       	and	r24, r20
     e30:	8c 93       	st	X, r24
     e32:	3e c0       	rjmp	.+124    	; 0xeb0 <DIO_SetPinDirection+0x1fe>
		 case PORTB: CLEAR_BIt(DDRB_Reg , pin_ID) ;break;
     e34:	a7 e3       	ldi	r26, 0x37	; 55
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	e7 e3       	ldi	r30, 0x37	; 55
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	80 81       	ld	r24, Z
     e3e:	48 2f       	mov	r20, r24
     e40:	8a 81       	ldd	r24, Y+2	; 0x02
     e42:	28 2f       	mov	r18, r24
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	81 e0       	ldi	r24, 0x01	; 1
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	02 2e       	mov	r0, r18
     e4c:	02 c0       	rjmp	.+4      	; 0xe52 <DIO_SetPinDirection+0x1a0>
     e4e:	88 0f       	add	r24, r24
     e50:	99 1f       	adc	r25, r25
     e52:	0a 94       	dec	r0
     e54:	e2 f7       	brpl	.-8      	; 0xe4e <DIO_SetPinDirection+0x19c>
     e56:	80 95       	com	r24
     e58:	84 23       	and	r24, r20
     e5a:	8c 93       	st	X, r24
     e5c:	29 c0       	rjmp	.+82     	; 0xeb0 <DIO_SetPinDirection+0x1fe>
		 case PORTC: CLEAR_BIt(DDRC_Reg , pin_ID) ;break;
     e5e:	a4 e3       	ldi	r26, 0x34	; 52
     e60:	b0 e0       	ldi	r27, 0x00	; 0
     e62:	e4 e3       	ldi	r30, 0x34	; 52
     e64:	f0 e0       	ldi	r31, 0x00	; 0
     e66:	80 81       	ld	r24, Z
     e68:	48 2f       	mov	r20, r24
     e6a:	8a 81       	ldd	r24, Y+2	; 0x02
     e6c:	28 2f       	mov	r18, r24
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	81 e0       	ldi	r24, 0x01	; 1
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	02 2e       	mov	r0, r18
     e76:	02 c0       	rjmp	.+4      	; 0xe7c <DIO_SetPinDirection+0x1ca>
     e78:	88 0f       	add	r24, r24
     e7a:	99 1f       	adc	r25, r25
     e7c:	0a 94       	dec	r0
     e7e:	e2 f7       	brpl	.-8      	; 0xe78 <DIO_SetPinDirection+0x1c6>
     e80:	80 95       	com	r24
     e82:	84 23       	and	r24, r20
     e84:	8c 93       	st	X, r24
     e86:	14 c0       	rjmp	.+40     	; 0xeb0 <DIO_SetPinDirection+0x1fe>
		 case PORTD: CLEAR_BIt(DDRD_Reg , pin_ID) ;break;
     e88:	a1 e3       	ldi	r26, 0x31	; 49
     e8a:	b0 e0       	ldi	r27, 0x00	; 0
     e8c:	e1 e3       	ldi	r30, 0x31	; 49
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	80 81       	ld	r24, Z
     e92:	48 2f       	mov	r20, r24
     e94:	8a 81       	ldd	r24, Y+2	; 0x02
     e96:	28 2f       	mov	r18, r24
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	02 2e       	mov	r0, r18
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <DIO_SetPinDirection+0x1f4>
     ea2:	88 0f       	add	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	0a 94       	dec	r0
     ea8:	e2 f7       	brpl	.-8      	; 0xea2 <DIO_SetPinDirection+0x1f0>
     eaa:	80 95       	com	r24
     eac:	84 23       	and	r24, r20
     eae:	8c 93       	st	X, r24
		 }

	 }
   }
}
     eb0:	27 96       	adiw	r28, 0x07	; 7
     eb2:	0f b6       	in	r0, 0x3f	; 63
     eb4:	f8 94       	cli
     eb6:	de bf       	out	0x3e, r29	; 62
     eb8:	0f be       	out	0x3f, r0	; 63
     eba:	cd bf       	out	0x3d, r28	; 61
     ebc:	cf 91       	pop	r28
     ebe:	df 91       	pop	r29
     ec0:	08 95       	ret

00000ec2 <DIO_SetPinValue>:

void DIO_SetPinValue(DIO_PORT_ID port_ID , DIO_PIN_ID pin_ID , STD_level_Type value )
{
     ec2:	df 93       	push	r29
     ec4:	cf 93       	push	r28
     ec6:	cd b7       	in	r28, 0x3d	; 61
     ec8:	de b7       	in	r29, 0x3e	; 62
     eca:	27 97       	sbiw	r28, 0x07	; 7
     ecc:	0f b6       	in	r0, 0x3f	; 63
     ece:	f8 94       	cli
     ed0:	de bf       	out	0x3e, r29	; 62
     ed2:	0f be       	out	0x3f, r0	; 63
     ed4:	cd bf       	out	0x3d, r28	; 61
     ed6:	89 83       	std	Y+1, r24	; 0x01
     ed8:	6a 83       	std	Y+2, r22	; 0x02
     eda:	4b 83       	std	Y+3, r20	; 0x03
    if (port_ID <= PORTD && pin_ID <= pin7)
     edc:	89 81       	ldd	r24, Y+1	; 0x01
     ede:	84 30       	cpi	r24, 0x04	; 4
     ee0:	08 f0       	brcs	.+2      	; 0xee4 <DIO_SetPinValue+0x22>
     ee2:	ee c0       	rjmp	.+476    	; 0x10c0 <DIO_SetPinValue+0x1fe>
     ee4:	8a 81       	ldd	r24, Y+2	; 0x02
     ee6:	88 30       	cpi	r24, 0x08	; 8
     ee8:	08 f0       	brcs	.+2      	; 0xeec <DIO_SetPinValue+0x2a>
     eea:	ea c0       	rjmp	.+468    	; 0x10c0 <DIO_SetPinValue+0x1fe>
    {
    	if (value == HIGH)
     eec:	8b 81       	ldd	r24, Y+3	; 0x03
     eee:	81 30       	cpi	r24, 0x01	; 1
     ef0:	09 f0       	breq	.+2      	; 0xef4 <DIO_SetPinValue+0x32>
     ef2:	6f c0       	rjmp	.+222    	; 0xfd2 <DIO_SetPinValue+0x110>
    	{
    		switch (port_ID)
     ef4:	89 81       	ldd	r24, Y+1	; 0x01
     ef6:	28 2f       	mov	r18, r24
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	3f 83       	std	Y+7, r19	; 0x07
     efc:	2e 83       	std	Y+6, r18	; 0x06
     efe:	8e 81       	ldd	r24, Y+6	; 0x06
     f00:	9f 81       	ldd	r25, Y+7	; 0x07
     f02:	81 30       	cpi	r24, 0x01	; 1
     f04:	91 05       	cpc	r25, r1
     f06:	49 f1       	breq	.+82     	; 0xf5a <DIO_SetPinValue+0x98>
     f08:	2e 81       	ldd	r18, Y+6	; 0x06
     f0a:	3f 81       	ldd	r19, Y+7	; 0x07
     f0c:	22 30       	cpi	r18, 0x02	; 2
     f0e:	31 05       	cpc	r19, r1
     f10:	2c f4       	brge	.+10     	; 0xf1c <DIO_SetPinValue+0x5a>
     f12:	8e 81       	ldd	r24, Y+6	; 0x06
     f14:	9f 81       	ldd	r25, Y+7	; 0x07
     f16:	00 97       	sbiw	r24, 0x00	; 0
     f18:	61 f0       	breq	.+24     	; 0xf32 <DIO_SetPinValue+0x70>
     f1a:	d2 c0       	rjmp	.+420    	; 0x10c0 <DIO_SetPinValue+0x1fe>
     f1c:	2e 81       	ldd	r18, Y+6	; 0x06
     f1e:	3f 81       	ldd	r19, Y+7	; 0x07
     f20:	22 30       	cpi	r18, 0x02	; 2
     f22:	31 05       	cpc	r19, r1
     f24:	71 f1       	breq	.+92     	; 0xf82 <DIO_SetPinValue+0xc0>
     f26:	8e 81       	ldd	r24, Y+6	; 0x06
     f28:	9f 81       	ldd	r25, Y+7	; 0x07
     f2a:	83 30       	cpi	r24, 0x03	; 3
     f2c:	91 05       	cpc	r25, r1
     f2e:	e9 f1       	breq	.+122    	; 0xfaa <DIO_SetPinValue+0xe8>
     f30:	c7 c0       	rjmp	.+398    	; 0x10c0 <DIO_SetPinValue+0x1fe>
    		{
    		case PORTA : SET_BIt(PORTA_Reg, pin_ID) ; break;
     f32:	ab e3       	ldi	r26, 0x3B	; 59
     f34:	b0 e0       	ldi	r27, 0x00	; 0
     f36:	eb e3       	ldi	r30, 0x3B	; 59
     f38:	f0 e0       	ldi	r31, 0x00	; 0
     f3a:	80 81       	ld	r24, Z
     f3c:	48 2f       	mov	r20, r24
     f3e:	8a 81       	ldd	r24, Y+2	; 0x02
     f40:	28 2f       	mov	r18, r24
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	81 e0       	ldi	r24, 0x01	; 1
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	02 2e       	mov	r0, r18
     f4a:	02 c0       	rjmp	.+4      	; 0xf50 <DIO_SetPinValue+0x8e>
     f4c:	88 0f       	add	r24, r24
     f4e:	99 1f       	adc	r25, r25
     f50:	0a 94       	dec	r0
     f52:	e2 f7       	brpl	.-8      	; 0xf4c <DIO_SetPinValue+0x8a>
     f54:	84 2b       	or	r24, r20
     f56:	8c 93       	st	X, r24
     f58:	b3 c0       	rjmp	.+358    	; 0x10c0 <DIO_SetPinValue+0x1fe>
    		case PORTB : SET_BIt(PORTB_Reg, pin_ID) ; break;
     f5a:	a8 e3       	ldi	r26, 0x38	; 56
     f5c:	b0 e0       	ldi	r27, 0x00	; 0
     f5e:	e8 e3       	ldi	r30, 0x38	; 56
     f60:	f0 e0       	ldi	r31, 0x00	; 0
     f62:	80 81       	ld	r24, Z
     f64:	48 2f       	mov	r20, r24
     f66:	8a 81       	ldd	r24, Y+2	; 0x02
     f68:	28 2f       	mov	r18, r24
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	02 2e       	mov	r0, r18
     f72:	02 c0       	rjmp	.+4      	; 0xf78 <DIO_SetPinValue+0xb6>
     f74:	88 0f       	add	r24, r24
     f76:	99 1f       	adc	r25, r25
     f78:	0a 94       	dec	r0
     f7a:	e2 f7       	brpl	.-8      	; 0xf74 <DIO_SetPinValue+0xb2>
     f7c:	84 2b       	or	r24, r20
     f7e:	8c 93       	st	X, r24
     f80:	9f c0       	rjmp	.+318    	; 0x10c0 <DIO_SetPinValue+0x1fe>
    		case PORTC : SET_BIt(PORTC_Reg, pin_ID) ; break;
     f82:	a5 e3       	ldi	r26, 0x35	; 53
     f84:	b0 e0       	ldi	r27, 0x00	; 0
     f86:	e5 e3       	ldi	r30, 0x35	; 53
     f88:	f0 e0       	ldi	r31, 0x00	; 0
     f8a:	80 81       	ld	r24, Z
     f8c:	48 2f       	mov	r20, r24
     f8e:	8a 81       	ldd	r24, Y+2	; 0x02
     f90:	28 2f       	mov	r18, r24
     f92:	30 e0       	ldi	r19, 0x00	; 0
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	02 2e       	mov	r0, r18
     f9a:	02 c0       	rjmp	.+4      	; 0xfa0 <DIO_SetPinValue+0xde>
     f9c:	88 0f       	add	r24, r24
     f9e:	99 1f       	adc	r25, r25
     fa0:	0a 94       	dec	r0
     fa2:	e2 f7       	brpl	.-8      	; 0xf9c <DIO_SetPinValue+0xda>
     fa4:	84 2b       	or	r24, r20
     fa6:	8c 93       	st	X, r24
     fa8:	8b c0       	rjmp	.+278    	; 0x10c0 <DIO_SetPinValue+0x1fe>
    		case PORTD : SET_BIt(PORTD_Reg, pin_ID) ; break;
     faa:	a2 e3       	ldi	r26, 0x32	; 50
     fac:	b0 e0       	ldi	r27, 0x00	; 0
     fae:	e2 e3       	ldi	r30, 0x32	; 50
     fb0:	f0 e0       	ldi	r31, 0x00	; 0
     fb2:	80 81       	ld	r24, Z
     fb4:	48 2f       	mov	r20, r24
     fb6:	8a 81       	ldd	r24, Y+2	; 0x02
     fb8:	28 2f       	mov	r18, r24
     fba:	30 e0       	ldi	r19, 0x00	; 0
     fbc:	81 e0       	ldi	r24, 0x01	; 1
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	02 2e       	mov	r0, r18
     fc2:	02 c0       	rjmp	.+4      	; 0xfc8 <DIO_SetPinValue+0x106>
     fc4:	88 0f       	add	r24, r24
     fc6:	99 1f       	adc	r25, r25
     fc8:	0a 94       	dec	r0
     fca:	e2 f7       	brpl	.-8      	; 0xfc4 <DIO_SetPinValue+0x102>
     fcc:	84 2b       	or	r24, r20
     fce:	8c 93       	st	X, r24
     fd0:	77 c0       	rjmp	.+238    	; 0x10c0 <DIO_SetPinValue+0x1fe>
    		}

    	}

    	else if (value == LOW)
     fd2:	8b 81       	ldd	r24, Y+3	; 0x03
     fd4:	88 23       	and	r24, r24
     fd6:	09 f0       	breq	.+2      	; 0xfda <DIO_SetPinValue+0x118>
     fd8:	73 c0       	rjmp	.+230    	; 0x10c0 <DIO_SetPinValue+0x1fe>
    	{
    	    switch (port_ID)
     fda:	89 81       	ldd	r24, Y+1	; 0x01
     fdc:	28 2f       	mov	r18, r24
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	3d 83       	std	Y+5, r19	; 0x05
     fe2:	2c 83       	std	Y+4, r18	; 0x04
     fe4:	8c 81       	ldd	r24, Y+4	; 0x04
     fe6:	9d 81       	ldd	r25, Y+5	; 0x05
     fe8:	81 30       	cpi	r24, 0x01	; 1
     fea:	91 05       	cpc	r25, r1
     fec:	59 f1       	breq	.+86     	; 0x1044 <DIO_SetPinValue+0x182>
     fee:	2c 81       	ldd	r18, Y+4	; 0x04
     ff0:	3d 81       	ldd	r19, Y+5	; 0x05
     ff2:	22 30       	cpi	r18, 0x02	; 2
     ff4:	31 05       	cpc	r19, r1
     ff6:	2c f4       	brge	.+10     	; 0x1002 <DIO_SetPinValue+0x140>
     ff8:	8c 81       	ldd	r24, Y+4	; 0x04
     ffa:	9d 81       	ldd	r25, Y+5	; 0x05
     ffc:	00 97       	sbiw	r24, 0x00	; 0
     ffe:	69 f0       	breq	.+26     	; 0x101a <DIO_SetPinValue+0x158>
    1000:	5f c0       	rjmp	.+190    	; 0x10c0 <DIO_SetPinValue+0x1fe>
    1002:	2c 81       	ldd	r18, Y+4	; 0x04
    1004:	3d 81       	ldd	r19, Y+5	; 0x05
    1006:	22 30       	cpi	r18, 0x02	; 2
    1008:	31 05       	cpc	r19, r1
    100a:	89 f1       	breq	.+98     	; 0x106e <DIO_SetPinValue+0x1ac>
    100c:	8c 81       	ldd	r24, Y+4	; 0x04
    100e:	9d 81       	ldd	r25, Y+5	; 0x05
    1010:	83 30       	cpi	r24, 0x03	; 3
    1012:	91 05       	cpc	r25, r1
    1014:	09 f4       	brne	.+2      	; 0x1018 <DIO_SetPinValue+0x156>
    1016:	40 c0       	rjmp	.+128    	; 0x1098 <DIO_SetPinValue+0x1d6>
    1018:	53 c0       	rjmp	.+166    	; 0x10c0 <DIO_SetPinValue+0x1fe>
    		{
    		case PORTA : CLEAR_BIt(PORTA_Reg, pin_ID) ; break;
    101a:	ab e3       	ldi	r26, 0x3B	; 59
    101c:	b0 e0       	ldi	r27, 0x00	; 0
    101e:	eb e3       	ldi	r30, 0x3B	; 59
    1020:	f0 e0       	ldi	r31, 0x00	; 0
    1022:	80 81       	ld	r24, Z
    1024:	48 2f       	mov	r20, r24
    1026:	8a 81       	ldd	r24, Y+2	; 0x02
    1028:	28 2f       	mov	r18, r24
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	81 e0       	ldi	r24, 0x01	; 1
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	02 2e       	mov	r0, r18
    1032:	02 c0       	rjmp	.+4      	; 0x1038 <DIO_SetPinValue+0x176>
    1034:	88 0f       	add	r24, r24
    1036:	99 1f       	adc	r25, r25
    1038:	0a 94       	dec	r0
    103a:	e2 f7       	brpl	.-8      	; 0x1034 <DIO_SetPinValue+0x172>
    103c:	80 95       	com	r24
    103e:	84 23       	and	r24, r20
    1040:	8c 93       	st	X, r24
    1042:	3e c0       	rjmp	.+124    	; 0x10c0 <DIO_SetPinValue+0x1fe>
    		case PORTB : CLEAR_BIt(PORTB_Reg, pin_ID) ; break;
    1044:	a8 e3       	ldi	r26, 0x38	; 56
    1046:	b0 e0       	ldi	r27, 0x00	; 0
    1048:	e8 e3       	ldi	r30, 0x38	; 56
    104a:	f0 e0       	ldi	r31, 0x00	; 0
    104c:	80 81       	ld	r24, Z
    104e:	48 2f       	mov	r20, r24
    1050:	8a 81       	ldd	r24, Y+2	; 0x02
    1052:	28 2f       	mov	r18, r24
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	02 2e       	mov	r0, r18
    105c:	02 c0       	rjmp	.+4      	; 0x1062 <DIO_SetPinValue+0x1a0>
    105e:	88 0f       	add	r24, r24
    1060:	99 1f       	adc	r25, r25
    1062:	0a 94       	dec	r0
    1064:	e2 f7       	brpl	.-8      	; 0x105e <DIO_SetPinValue+0x19c>
    1066:	80 95       	com	r24
    1068:	84 23       	and	r24, r20
    106a:	8c 93       	st	X, r24
    106c:	29 c0       	rjmp	.+82     	; 0x10c0 <DIO_SetPinValue+0x1fe>
    		case PORTC : CLEAR_BIt(PORTC_Reg, pin_ID) ; break;
    106e:	a5 e3       	ldi	r26, 0x35	; 53
    1070:	b0 e0       	ldi	r27, 0x00	; 0
    1072:	e5 e3       	ldi	r30, 0x35	; 53
    1074:	f0 e0       	ldi	r31, 0x00	; 0
    1076:	80 81       	ld	r24, Z
    1078:	48 2f       	mov	r20, r24
    107a:	8a 81       	ldd	r24, Y+2	; 0x02
    107c:	28 2f       	mov	r18, r24
    107e:	30 e0       	ldi	r19, 0x00	; 0
    1080:	81 e0       	ldi	r24, 0x01	; 1
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	02 2e       	mov	r0, r18
    1086:	02 c0       	rjmp	.+4      	; 0x108c <DIO_SetPinValue+0x1ca>
    1088:	88 0f       	add	r24, r24
    108a:	99 1f       	adc	r25, r25
    108c:	0a 94       	dec	r0
    108e:	e2 f7       	brpl	.-8      	; 0x1088 <DIO_SetPinValue+0x1c6>
    1090:	80 95       	com	r24
    1092:	84 23       	and	r24, r20
    1094:	8c 93       	st	X, r24
    1096:	14 c0       	rjmp	.+40     	; 0x10c0 <DIO_SetPinValue+0x1fe>
    		case PORTD : CLEAR_BIt(PORTD_Reg, pin_ID) ; break;
    1098:	a2 e3       	ldi	r26, 0x32	; 50
    109a:	b0 e0       	ldi	r27, 0x00	; 0
    109c:	e2 e3       	ldi	r30, 0x32	; 50
    109e:	f0 e0       	ldi	r31, 0x00	; 0
    10a0:	80 81       	ld	r24, Z
    10a2:	48 2f       	mov	r20, r24
    10a4:	8a 81       	ldd	r24, Y+2	; 0x02
    10a6:	28 2f       	mov	r18, r24
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	81 e0       	ldi	r24, 0x01	; 1
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	02 2e       	mov	r0, r18
    10b0:	02 c0       	rjmp	.+4      	; 0x10b6 <DIO_SetPinValue+0x1f4>
    10b2:	88 0f       	add	r24, r24
    10b4:	99 1f       	adc	r25, r25
    10b6:	0a 94       	dec	r0
    10b8:	e2 f7       	brpl	.-8      	; 0x10b2 <DIO_SetPinValue+0x1f0>
    10ba:	80 95       	com	r24
    10bc:	84 23       	and	r24, r20
    10be:	8c 93       	st	X, r24
    		}

    	}
    }

}
    10c0:	27 96       	adiw	r28, 0x07	; 7
    10c2:	0f b6       	in	r0, 0x3f	; 63
    10c4:	f8 94       	cli
    10c6:	de bf       	out	0x3e, r29	; 62
    10c8:	0f be       	out	0x3f, r0	; 63
    10ca:	cd bf       	out	0x3d, r28	; 61
    10cc:	cf 91       	pop	r28
    10ce:	df 91       	pop	r29
    10d0:	08 95       	ret

000010d2 <DIO_GetpinValue>:

STD_level_Type DIO_GetpinValue(DIO_PORT_ID port_ID , DIO_PIN_ID pin_ID)
{
    10d2:	df 93       	push	r29
    10d4:	cf 93       	push	r28
    10d6:	00 d0       	rcall	.+0      	; 0x10d8 <DIO_GetpinValue+0x6>
    10d8:	00 d0       	rcall	.+0      	; 0x10da <DIO_GetpinValue+0x8>
    10da:	0f 92       	push	r0
    10dc:	cd b7       	in	r28, 0x3d	; 61
    10de:	de b7       	in	r29, 0x3e	; 62
    10e0:	8a 83       	std	Y+2, r24	; 0x02
    10e2:	6b 83       	std	Y+3, r22	; 0x03
	STD_level_Type PinValue;
	if (port_ID <= PORTD && pin_ID <= pin7)
    10e4:	8a 81       	ldd	r24, Y+2	; 0x02
    10e6:	84 30       	cpi	r24, 0x04	; 4
    10e8:	08 f0       	brcs	.+2      	; 0x10ec <DIO_GetpinValue+0x1a>
    10ea:	6b c0       	rjmp	.+214    	; 0x11c2 <DIO_GetpinValue+0xf0>
    10ec:	8b 81       	ldd	r24, Y+3	; 0x03
    10ee:	88 30       	cpi	r24, 0x08	; 8
    10f0:	08 f0       	brcs	.+2      	; 0x10f4 <DIO_GetpinValue+0x22>
    10f2:	67 c0       	rjmp	.+206    	; 0x11c2 <DIO_GetpinValue+0xf0>
	    {
		      switch (port_ID)
    10f4:	8a 81       	ldd	r24, Y+2	; 0x02
    10f6:	28 2f       	mov	r18, r24
    10f8:	30 e0       	ldi	r19, 0x00	; 0
    10fa:	3d 83       	std	Y+5, r19	; 0x05
    10fc:	2c 83       	std	Y+4, r18	; 0x04
    10fe:	4c 81       	ldd	r20, Y+4	; 0x04
    1100:	5d 81       	ldd	r21, Y+5	; 0x05
    1102:	41 30       	cpi	r20, 0x01	; 1
    1104:	51 05       	cpc	r21, r1
    1106:	41 f1       	breq	.+80     	; 0x1158 <DIO_GetpinValue+0x86>
    1108:	8c 81       	ldd	r24, Y+4	; 0x04
    110a:	9d 81       	ldd	r25, Y+5	; 0x05
    110c:	82 30       	cpi	r24, 0x02	; 2
    110e:	91 05       	cpc	r25, r1
    1110:	34 f4       	brge	.+12     	; 0x111e <DIO_GetpinValue+0x4c>
    1112:	2c 81       	ldd	r18, Y+4	; 0x04
    1114:	3d 81       	ldd	r19, Y+5	; 0x05
    1116:	21 15       	cp	r18, r1
    1118:	31 05       	cpc	r19, r1
    111a:	61 f0       	breq	.+24     	; 0x1134 <DIO_GetpinValue+0x62>
    111c:	52 c0       	rjmp	.+164    	; 0x11c2 <DIO_GetpinValue+0xf0>
    111e:	4c 81       	ldd	r20, Y+4	; 0x04
    1120:	5d 81       	ldd	r21, Y+5	; 0x05
    1122:	42 30       	cpi	r20, 0x02	; 2
    1124:	51 05       	cpc	r21, r1
    1126:	51 f1       	breq	.+84     	; 0x117c <DIO_GetpinValue+0xaa>
    1128:	8c 81       	ldd	r24, Y+4	; 0x04
    112a:	9d 81       	ldd	r25, Y+5	; 0x05
    112c:	83 30       	cpi	r24, 0x03	; 3
    112e:	91 05       	cpc	r25, r1
    1130:	b9 f1       	breq	.+110    	; 0x11a0 <DIO_GetpinValue+0xce>
    1132:	47 c0       	rjmp	.+142    	; 0x11c2 <DIO_GetpinValue+0xf0>
		       {
		            case PORTA : PinValue = GET_BIt(PINA_Reg, pin_ID) ; break;
    1134:	e9 e3       	ldi	r30, 0x39	; 57
    1136:	f0 e0       	ldi	r31, 0x00	; 0
    1138:	80 81       	ld	r24, Z
    113a:	28 2f       	mov	r18, r24
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	8b 81       	ldd	r24, Y+3	; 0x03
    1140:	88 2f       	mov	r24, r24
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	a9 01       	movw	r20, r18
    1146:	02 c0       	rjmp	.+4      	; 0x114c <DIO_GetpinValue+0x7a>
    1148:	55 95       	asr	r21
    114a:	47 95       	ror	r20
    114c:	8a 95       	dec	r24
    114e:	e2 f7       	brpl	.-8      	; 0x1148 <DIO_GetpinValue+0x76>
    1150:	ca 01       	movw	r24, r20
    1152:	81 70       	andi	r24, 0x01	; 1
    1154:	89 83       	std	Y+1, r24	; 0x01
    1156:	35 c0       	rjmp	.+106    	; 0x11c2 <DIO_GetpinValue+0xf0>
		       		case PORTB : PinValue = GET_BIt(PINB_Reg, pin_ID) ; break;
    1158:	e6 e3       	ldi	r30, 0x36	; 54
    115a:	f0 e0       	ldi	r31, 0x00	; 0
    115c:	80 81       	ld	r24, Z
    115e:	28 2f       	mov	r18, r24
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	8b 81       	ldd	r24, Y+3	; 0x03
    1164:	88 2f       	mov	r24, r24
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	a9 01       	movw	r20, r18
    116a:	02 c0       	rjmp	.+4      	; 0x1170 <DIO_GetpinValue+0x9e>
    116c:	55 95       	asr	r21
    116e:	47 95       	ror	r20
    1170:	8a 95       	dec	r24
    1172:	e2 f7       	brpl	.-8      	; 0x116c <DIO_GetpinValue+0x9a>
    1174:	ca 01       	movw	r24, r20
    1176:	81 70       	andi	r24, 0x01	; 1
    1178:	89 83       	std	Y+1, r24	; 0x01
    117a:	23 c0       	rjmp	.+70     	; 0x11c2 <DIO_GetpinValue+0xf0>
		       		case PORTC : PinValue = GET_BIt(PINC_Reg, pin_ID) ; break;
    117c:	e3 e3       	ldi	r30, 0x33	; 51
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	80 81       	ld	r24, Z
    1182:	28 2f       	mov	r18, r24
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	8b 81       	ldd	r24, Y+3	; 0x03
    1188:	88 2f       	mov	r24, r24
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	a9 01       	movw	r20, r18
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <DIO_GetpinValue+0xc2>
    1190:	55 95       	asr	r21
    1192:	47 95       	ror	r20
    1194:	8a 95       	dec	r24
    1196:	e2 f7       	brpl	.-8      	; 0x1190 <DIO_GetpinValue+0xbe>
    1198:	ca 01       	movw	r24, r20
    119a:	81 70       	andi	r24, 0x01	; 1
    119c:	89 83       	std	Y+1, r24	; 0x01
    119e:	11 c0       	rjmp	.+34     	; 0x11c2 <DIO_GetpinValue+0xf0>
		       		case PORTD : PinValue = GET_BIt(PIND_Reg, pin_ID) ; break;
    11a0:	e0 e3       	ldi	r30, 0x30	; 48
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	80 81       	ld	r24, Z
    11a6:	28 2f       	mov	r18, r24
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	8b 81       	ldd	r24, Y+3	; 0x03
    11ac:	88 2f       	mov	r24, r24
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	a9 01       	movw	r20, r18
    11b2:	02 c0       	rjmp	.+4      	; 0x11b8 <DIO_GetpinValue+0xe6>
    11b4:	55 95       	asr	r21
    11b6:	47 95       	ror	r20
    11b8:	8a 95       	dec	r24
    11ba:	e2 f7       	brpl	.-8      	; 0x11b4 <DIO_GetpinValue+0xe2>
    11bc:	ca 01       	movw	r24, r20
    11be:	81 70       	andi	r24, 0x01	; 1
    11c0:	89 83       	std	Y+1, r24	; 0x01
		       }

	    }
return PinValue;
    11c2:	89 81       	ldd	r24, Y+1	; 0x01
}
    11c4:	0f 90       	pop	r0
    11c6:	0f 90       	pop	r0
    11c8:	0f 90       	pop	r0
    11ca:	0f 90       	pop	r0
    11cc:	0f 90       	pop	r0
    11ce:	cf 91       	pop	r28
    11d0:	df 91       	pop	r29
    11d2:	08 95       	ret

000011d4 <Seven_Segment_Initialization>:
#include "../../MCAL/DIO/DIO_types.h"
#include "../../MCAL/DIO/DIO.h"


void Seven_Segment_Initialization()
{
    11d4:	df 93       	push	r29
    11d6:	cf 93       	push	r28
    11d8:	cd b7       	in	r28, 0x3d	; 61
    11da:	de b7       	in	r29, 0x3e	; 62
DIO_SetPinDirection(PORTA , pin0 , OUTPUT); //A
    11dc:	80 e0       	ldi	r24, 0x00	; 0
    11de:	60 e0       	ldi	r22, 0x00	; 0
    11e0:	41 e0       	ldi	r20, 0x01	; 1
    11e2:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
DIO_SetPinDirection(PORTA , pin1 , OUTPUT); //B
    11e6:	80 e0       	ldi	r24, 0x00	; 0
    11e8:	61 e0       	ldi	r22, 0x01	; 1
    11ea:	41 e0       	ldi	r20, 0x01	; 1
    11ec:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
DIO_SetPinDirection(PORTA , pin2 , OUTPUT); //C
    11f0:	80 e0       	ldi	r24, 0x00	; 0
    11f2:	62 e0       	ldi	r22, 0x02	; 2
    11f4:	41 e0       	ldi	r20, 0x01	; 1
    11f6:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
DIO_SetPinDirection(PORTA , pin3 , OUTPUT); //D
    11fa:	80 e0       	ldi	r24, 0x00	; 0
    11fc:	63 e0       	ldi	r22, 0x03	; 3
    11fe:	41 e0       	ldi	r20, 0x01	; 1
    1200:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>

DIO_SetPinDirection(PORTB , pin2 , OUTPUT); //EN1
    1204:	81 e0       	ldi	r24, 0x01	; 1
    1206:	62 e0       	ldi	r22, 0x02	; 2
    1208:	41 e0       	ldi	r20, 0x01	; 1
    120a:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
DIO_SetPinDirection(PORTB , pin1 , OUTPUT); //EN2
    120e:	81 e0       	ldi	r24, 0x01	; 1
    1210:	61 e0       	ldi	r22, 0x01	; 1
    1212:	41 e0       	ldi	r20, 0x01	; 1
    1214:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
}
    1218:	cf 91       	pop	r28
    121a:	df 91       	pop	r29
    121c:	08 95       	ret

0000121e <Seven_Segment_Enable1>:

void Seven_Segment_Enable1()
{
    121e:	df 93       	push	r29
    1220:	cf 93       	push	r28
    1222:	cd b7       	in	r28, 0x3d	; 61
    1224:	de b7       	in	r29, 0x3e	; 62
DIO_SetPinValue(PORTB , pin2 , HIGH);
    1226:	81 e0       	ldi	r24, 0x01	; 1
    1228:	62 e0       	ldi	r22, 0x02	; 2
    122a:	41 e0       	ldi	r20, 0x01	; 1
    122c:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
}
    1230:	cf 91       	pop	r28
    1232:	df 91       	pop	r29
    1234:	08 95       	ret

00001236 <Seven_Segment_Enable2>:

void Seven_Segment_Enable2()
{
    1236:	df 93       	push	r29
    1238:	cf 93       	push	r28
    123a:	cd b7       	in	r28, 0x3d	; 61
    123c:	de b7       	in	r29, 0x3e	; 62
DIO_SetPinValue(PORTB , pin1 , HIGH);
    123e:	81 e0       	ldi	r24, 0x01	; 1
    1240:	61 e0       	ldi	r22, 0x01	; 1
    1242:	41 e0       	ldi	r20, 0x01	; 1
    1244:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
}
    1248:	cf 91       	pop	r28
    124a:	df 91       	pop	r29
    124c:	08 95       	ret

0000124e <Seven_Segment_Disable1>:

void Seven_Segment_Disable1()
{
    124e:	df 93       	push	r29
    1250:	cf 93       	push	r28
    1252:	cd b7       	in	r28, 0x3d	; 61
    1254:	de b7       	in	r29, 0x3e	; 62
DIO_SetPinValue(PORTB , pin2 , LOW);
    1256:	81 e0       	ldi	r24, 0x01	; 1
    1258:	62 e0       	ldi	r22, 0x02	; 2
    125a:	40 e0       	ldi	r20, 0x00	; 0
    125c:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
}
    1260:	cf 91       	pop	r28
    1262:	df 91       	pop	r29
    1264:	08 95       	ret

00001266 <Seven_Segment_Disable2>:

void Seven_Segment_Disable2()
{
    1266:	df 93       	push	r29
    1268:	cf 93       	push	r28
    126a:	cd b7       	in	r28, 0x3d	; 61
    126c:	de b7       	in	r29, 0x3e	; 62
DIO_SetPinValue(PORTB , pin1 , LOW);
    126e:	81 e0       	ldi	r24, 0x01	; 1
    1270:	61 e0       	ldi	r22, 0x01	; 1
    1272:	40 e0       	ldi	r20, 0x00	; 0
    1274:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
}
    1278:	cf 91       	pop	r28
    127a:	df 91       	pop	r29
    127c:	08 95       	ret

0000127e <Seven_Segment_Write_Number>:

void Seven_Segment_Write_Number(unsigned char number)
{
    127e:	df 93       	push	r29
    1280:	cf 93       	push	r28
    1282:	0f 92       	push	r0
    1284:	cd b7       	in	r28, 0x3d	; 61
    1286:	de b7       	in	r29, 0x3e	; 62
    1288:	89 83       	std	Y+1, r24	; 0x01
  if(number < 10)
    128a:	89 81       	ldd	r24, Y+1	; 0x01
    128c:	8a 30       	cpi	r24, 0x0A	; 10
    128e:	30 f5       	brcc	.+76     	; 0x12dc <Seven_Segment_Write_Number+0x5e>
     {
	   // 3   0b0000 0011
	   //            ABCD
	 DIO_SetPinValue(PORTA , pin0 ,  GET_BIt(number , 0)); //A
    1290:	89 81       	ldd	r24, Y+1	; 0x01
    1292:	98 2f       	mov	r25, r24
    1294:	91 70       	andi	r25, 0x01	; 1
    1296:	80 e0       	ldi	r24, 0x00	; 0
    1298:	60 e0       	ldi	r22, 0x00	; 0
    129a:	49 2f       	mov	r20, r25
    129c:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
	 DIO_SetPinValue(PORTA , pin1 ,  GET_BIt(number , 1)); //B
    12a0:	89 81       	ldd	r24, Y+1	; 0x01
    12a2:	86 95       	lsr	r24
    12a4:	98 2f       	mov	r25, r24
    12a6:	91 70       	andi	r25, 0x01	; 1
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	61 e0       	ldi	r22, 0x01	; 1
    12ac:	49 2f       	mov	r20, r25
    12ae:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
     DIO_SetPinValue(PORTA , pin2 ,  GET_BIt(number , 2)); //C
    12b2:	89 81       	ldd	r24, Y+1	; 0x01
    12b4:	86 95       	lsr	r24
    12b6:	86 95       	lsr	r24
    12b8:	98 2f       	mov	r25, r24
    12ba:	91 70       	andi	r25, 0x01	; 1
    12bc:	80 e0       	ldi	r24, 0x00	; 0
    12be:	62 e0       	ldi	r22, 0x02	; 2
    12c0:	49 2f       	mov	r20, r25
    12c2:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
     DIO_SetPinValue(PORTA , pin3 ,  GET_BIt(number , 3)); //D
    12c6:	89 81       	ldd	r24, Y+1	; 0x01
    12c8:	86 95       	lsr	r24
    12ca:	86 95       	lsr	r24
    12cc:	86 95       	lsr	r24
    12ce:	98 2f       	mov	r25, r24
    12d0:	91 70       	andi	r25, 0x01	; 1
    12d2:	80 e0       	ldi	r24, 0x00	; 0
    12d4:	63 e0       	ldi	r22, 0x03	; 3
    12d6:	49 2f       	mov	r20, r25
    12d8:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
     }
}
    12dc:	0f 90       	pop	r0
    12de:	cf 91       	pop	r28
    12e0:	df 91       	pop	r29
    12e2:	08 95       	ret

000012e4 <LED>:
#include "../MCAL/DIO/DIO_types.h"
#include "../MCAL/DIO/DIO.h"
#include "avr/delay.h"

void LED()
{
    12e4:	df 93       	push	r29
    12e6:	cf 93       	push	r28
    12e8:	cd b7       	in	r28, 0x3d	; 61
    12ea:	de b7       	in	r29, 0x3e	; 62
    12ec:	6c 97       	sbiw	r28, 0x1c	; 28
    12ee:	0f b6       	in	r0, 0x3f	; 63
    12f0:	f8 94       	cli
    12f2:	de bf       	out	0x3e, r29	; 62
    12f4:	0f be       	out	0x3f, r0	; 63
    12f6:	cd bf       	out	0x3d, r28	; 61

  //DIO_SetPortDirection(PORTC , OUTPUT);
  //DIO_SetPortValue(PORTC ,0xFF);

    DIO_SetPinDirection(PORTC , pin1 , OUTPUT);
    12f8:	82 e0       	ldi	r24, 0x02	; 2
    12fa:	61 e0       	ldi	r22, 0x01	; 1
    12fc:	41 e0       	ldi	r20, 0x01	; 1
    12fe:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
while(1)
{
    DIO_SetPinValue(PORTC , pin1 , HIGH);
    1302:	82 e0       	ldi	r24, 0x02	; 2
    1304:	61 e0       	ldi	r22, 0x01	; 1
    1306:	41 e0       	ldi	r20, 0x01	; 1
    1308:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    130c:	80 e0       	ldi	r24, 0x00	; 0
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	a8 ec       	ldi	r26, 0xC8	; 200
    1312:	b2 e4       	ldi	r27, 0x42	; 66
    1314:	89 8f       	std	Y+25, r24	; 0x19
    1316:	9a 8f       	std	Y+26, r25	; 0x1a
    1318:	ab 8f       	std	Y+27, r26	; 0x1b
    131a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    131c:	69 8d       	ldd	r22, Y+25	; 0x19
    131e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1320:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1322:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1324:	20 e0       	ldi	r18, 0x00	; 0
    1326:	30 e0       	ldi	r19, 0x00	; 0
    1328:	4a ef       	ldi	r20, 0xFA	; 250
    132a:	54 e4       	ldi	r21, 0x44	; 68
    132c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1330:	dc 01       	movw	r26, r24
    1332:	cb 01       	movw	r24, r22
    1334:	8d 8b       	std	Y+21, r24	; 0x15
    1336:	9e 8b       	std	Y+22, r25	; 0x16
    1338:	af 8b       	std	Y+23, r26	; 0x17
    133a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    133c:	6d 89       	ldd	r22, Y+21	; 0x15
    133e:	7e 89       	ldd	r23, Y+22	; 0x16
    1340:	8f 89       	ldd	r24, Y+23	; 0x17
    1342:	98 8d       	ldd	r25, Y+24	; 0x18
    1344:	20 e0       	ldi	r18, 0x00	; 0
    1346:	30 e0       	ldi	r19, 0x00	; 0
    1348:	40 e8       	ldi	r20, 0x80	; 128
    134a:	5f e3       	ldi	r21, 0x3F	; 63
    134c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1350:	88 23       	and	r24, r24
    1352:	2c f4       	brge	.+10     	; 0x135e <LED+0x7a>
		__ticks = 1;
    1354:	81 e0       	ldi	r24, 0x01	; 1
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	9c 8b       	std	Y+20, r25	; 0x14
    135a:	8b 8b       	std	Y+19, r24	; 0x13
    135c:	3f c0       	rjmp	.+126    	; 0x13dc <LED+0xf8>
	else if (__tmp > 65535)
    135e:	6d 89       	ldd	r22, Y+21	; 0x15
    1360:	7e 89       	ldd	r23, Y+22	; 0x16
    1362:	8f 89       	ldd	r24, Y+23	; 0x17
    1364:	98 8d       	ldd	r25, Y+24	; 0x18
    1366:	20 e0       	ldi	r18, 0x00	; 0
    1368:	3f ef       	ldi	r19, 0xFF	; 255
    136a:	4f e7       	ldi	r20, 0x7F	; 127
    136c:	57 e4       	ldi	r21, 0x47	; 71
    136e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1372:	18 16       	cp	r1, r24
    1374:	4c f5       	brge	.+82     	; 0x13c8 <LED+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1376:	69 8d       	ldd	r22, Y+25	; 0x19
    1378:	7a 8d       	ldd	r23, Y+26	; 0x1a
    137a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    137c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    137e:	20 e0       	ldi	r18, 0x00	; 0
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	40 e2       	ldi	r20, 0x20	; 32
    1384:	51 e4       	ldi	r21, 0x41	; 65
    1386:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    138a:	dc 01       	movw	r26, r24
    138c:	cb 01       	movw	r24, r22
    138e:	bc 01       	movw	r22, r24
    1390:	cd 01       	movw	r24, r26
    1392:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1396:	dc 01       	movw	r26, r24
    1398:	cb 01       	movw	r24, r22
    139a:	9c 8b       	std	Y+20, r25	; 0x14
    139c:	8b 8b       	std	Y+19, r24	; 0x13
    139e:	0f c0       	rjmp	.+30     	; 0x13be <LED+0xda>
    13a0:	88 ec       	ldi	r24, 0xC8	; 200
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	9a 8b       	std	Y+18, r25	; 0x12
    13a6:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    13a8:	89 89       	ldd	r24, Y+17	; 0x11
    13aa:	9a 89       	ldd	r25, Y+18	; 0x12
    13ac:	01 97       	sbiw	r24, 0x01	; 1
    13ae:	f1 f7       	brne	.-4      	; 0x13ac <LED+0xc8>
    13b0:	9a 8b       	std	Y+18, r25	; 0x12
    13b2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13b4:	8b 89       	ldd	r24, Y+19	; 0x13
    13b6:	9c 89       	ldd	r25, Y+20	; 0x14
    13b8:	01 97       	sbiw	r24, 0x01	; 1
    13ba:	9c 8b       	std	Y+20, r25	; 0x14
    13bc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13be:	8b 89       	ldd	r24, Y+19	; 0x13
    13c0:	9c 89       	ldd	r25, Y+20	; 0x14
    13c2:	00 97       	sbiw	r24, 0x00	; 0
    13c4:	69 f7       	brne	.-38     	; 0x13a0 <LED+0xbc>
    13c6:	14 c0       	rjmp	.+40     	; 0x13f0 <LED+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13c8:	6d 89       	ldd	r22, Y+21	; 0x15
    13ca:	7e 89       	ldd	r23, Y+22	; 0x16
    13cc:	8f 89       	ldd	r24, Y+23	; 0x17
    13ce:	98 8d       	ldd	r25, Y+24	; 0x18
    13d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13d4:	dc 01       	movw	r26, r24
    13d6:	cb 01       	movw	r24, r22
    13d8:	9c 8b       	std	Y+20, r25	; 0x14
    13da:	8b 8b       	std	Y+19, r24	; 0x13
    13dc:	8b 89       	ldd	r24, Y+19	; 0x13
    13de:	9c 89       	ldd	r25, Y+20	; 0x14
    13e0:	98 8b       	std	Y+16, r25	; 0x10
    13e2:	8f 87       	std	Y+15, r24	; 0x0f
    13e4:	8f 85       	ldd	r24, Y+15	; 0x0f
    13e6:	98 89       	ldd	r25, Y+16	; 0x10
    13e8:	01 97       	sbiw	r24, 0x01	; 1
    13ea:	f1 f7       	brne	.-4      	; 0x13e8 <LED+0x104>
    13ec:	98 8b       	std	Y+16, r25	; 0x10
    13ee:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(100);
    DIO_SetPinValue(PORTC , pin1 , LOW);
    13f0:	82 e0       	ldi	r24, 0x02	; 2
    13f2:	61 e0       	ldi	r22, 0x01	; 1
    13f4:	40 e0       	ldi	r20, 0x00	; 0
    13f6:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    13fa:	80 e0       	ldi	r24, 0x00	; 0
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	a8 ec       	ldi	r26, 0xC8	; 200
    1400:	b2 e4       	ldi	r27, 0x42	; 66
    1402:	8b 87       	std	Y+11, r24	; 0x0b
    1404:	9c 87       	std	Y+12, r25	; 0x0c
    1406:	ad 87       	std	Y+13, r26	; 0x0d
    1408:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    140a:	6b 85       	ldd	r22, Y+11	; 0x0b
    140c:	7c 85       	ldd	r23, Y+12	; 0x0c
    140e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1410:	9e 85       	ldd	r25, Y+14	; 0x0e
    1412:	20 e0       	ldi	r18, 0x00	; 0
    1414:	30 e0       	ldi	r19, 0x00	; 0
    1416:	4a ef       	ldi	r20, 0xFA	; 250
    1418:	54 e4       	ldi	r21, 0x44	; 68
    141a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    141e:	dc 01       	movw	r26, r24
    1420:	cb 01       	movw	r24, r22
    1422:	8f 83       	std	Y+7, r24	; 0x07
    1424:	98 87       	std	Y+8, r25	; 0x08
    1426:	a9 87       	std	Y+9, r26	; 0x09
    1428:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    142a:	6f 81       	ldd	r22, Y+7	; 0x07
    142c:	78 85       	ldd	r23, Y+8	; 0x08
    142e:	89 85       	ldd	r24, Y+9	; 0x09
    1430:	9a 85       	ldd	r25, Y+10	; 0x0a
    1432:	20 e0       	ldi	r18, 0x00	; 0
    1434:	30 e0       	ldi	r19, 0x00	; 0
    1436:	40 e8       	ldi	r20, 0x80	; 128
    1438:	5f e3       	ldi	r21, 0x3F	; 63
    143a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    143e:	88 23       	and	r24, r24
    1440:	2c f4       	brge	.+10     	; 0x144c <LED+0x168>
		__ticks = 1;
    1442:	81 e0       	ldi	r24, 0x01	; 1
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	9e 83       	std	Y+6, r25	; 0x06
    1448:	8d 83       	std	Y+5, r24	; 0x05
    144a:	3f c0       	rjmp	.+126    	; 0x14ca <LED+0x1e6>
	else if (__tmp > 65535)
    144c:	6f 81       	ldd	r22, Y+7	; 0x07
    144e:	78 85       	ldd	r23, Y+8	; 0x08
    1450:	89 85       	ldd	r24, Y+9	; 0x09
    1452:	9a 85       	ldd	r25, Y+10	; 0x0a
    1454:	20 e0       	ldi	r18, 0x00	; 0
    1456:	3f ef       	ldi	r19, 0xFF	; 255
    1458:	4f e7       	ldi	r20, 0x7F	; 127
    145a:	57 e4       	ldi	r21, 0x47	; 71
    145c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1460:	18 16       	cp	r1, r24
    1462:	4c f5       	brge	.+82     	; 0x14b6 <LED+0x1d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1464:	6b 85       	ldd	r22, Y+11	; 0x0b
    1466:	7c 85       	ldd	r23, Y+12	; 0x0c
    1468:	8d 85       	ldd	r24, Y+13	; 0x0d
    146a:	9e 85       	ldd	r25, Y+14	; 0x0e
    146c:	20 e0       	ldi	r18, 0x00	; 0
    146e:	30 e0       	ldi	r19, 0x00	; 0
    1470:	40 e2       	ldi	r20, 0x20	; 32
    1472:	51 e4       	ldi	r21, 0x41	; 65
    1474:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1478:	dc 01       	movw	r26, r24
    147a:	cb 01       	movw	r24, r22
    147c:	bc 01       	movw	r22, r24
    147e:	cd 01       	movw	r24, r26
    1480:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1484:	dc 01       	movw	r26, r24
    1486:	cb 01       	movw	r24, r22
    1488:	9e 83       	std	Y+6, r25	; 0x06
    148a:	8d 83       	std	Y+5, r24	; 0x05
    148c:	0f c0       	rjmp	.+30     	; 0x14ac <LED+0x1c8>
    148e:	88 ec       	ldi	r24, 0xC8	; 200
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	9c 83       	std	Y+4, r25	; 0x04
    1494:	8b 83       	std	Y+3, r24	; 0x03
    1496:	8b 81       	ldd	r24, Y+3	; 0x03
    1498:	9c 81       	ldd	r25, Y+4	; 0x04
    149a:	01 97       	sbiw	r24, 0x01	; 1
    149c:	f1 f7       	brne	.-4      	; 0x149a <LED+0x1b6>
    149e:	9c 83       	std	Y+4, r25	; 0x04
    14a0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14a2:	8d 81       	ldd	r24, Y+5	; 0x05
    14a4:	9e 81       	ldd	r25, Y+6	; 0x06
    14a6:	01 97       	sbiw	r24, 0x01	; 1
    14a8:	9e 83       	std	Y+6, r25	; 0x06
    14aa:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14ac:	8d 81       	ldd	r24, Y+5	; 0x05
    14ae:	9e 81       	ldd	r25, Y+6	; 0x06
    14b0:	00 97       	sbiw	r24, 0x00	; 0
    14b2:	69 f7       	brne	.-38     	; 0x148e <LED+0x1aa>
    14b4:	26 cf       	rjmp	.-436    	; 0x1302 <LED+0x1e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14b6:	6f 81       	ldd	r22, Y+7	; 0x07
    14b8:	78 85       	ldd	r23, Y+8	; 0x08
    14ba:	89 85       	ldd	r24, Y+9	; 0x09
    14bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    14be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14c2:	dc 01       	movw	r26, r24
    14c4:	cb 01       	movw	r24, r22
    14c6:	9e 83       	std	Y+6, r25	; 0x06
    14c8:	8d 83       	std	Y+5, r24	; 0x05
    14ca:	8d 81       	ldd	r24, Y+5	; 0x05
    14cc:	9e 81       	ldd	r25, Y+6	; 0x06
    14ce:	9a 83       	std	Y+2, r25	; 0x02
    14d0:	89 83       	std	Y+1, r24	; 0x01
    14d2:	89 81       	ldd	r24, Y+1	; 0x01
    14d4:	9a 81       	ldd	r25, Y+2	; 0x02
    14d6:	01 97       	sbiw	r24, 0x01	; 1
    14d8:	f1 f7       	brne	.-4      	; 0x14d6 <LED+0x1f2>
    14da:	9a 83       	std	Y+2, r25	; 0x02
    14dc:	89 83       	std	Y+1, r24	; 0x01
    14de:	11 cf       	rjmp	.-478    	; 0x1302 <LED+0x1e>

000014e0 <PUCH_BUTTON_1>:
#include "../MCAL/DIO/DIO_types.h"
#include "../MCAL/DIO/DIO.h"


void PUCH_BUTTON_1()
{
    14e0:	df 93       	push	r29
    14e2:	cf 93       	push	r28
    14e4:	0f 92       	push	r0
    14e6:	cd b7       	in	r28, 0x3d	; 61
    14e8:	de b7       	in	r29, 0x3e	; 62
	DIO_SetPinDirection(PORTA , pin0, INPUT);
    14ea:	80 e0       	ldi	r24, 0x00	; 0
    14ec:	60 e0       	ldi	r22, 0x00	; 0
    14ee:	40 e0       	ldi	r20, 0x00	; 0
    14f0:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORTA , pin1, OUTPUT);
    14f4:	80 e0       	ldi	r24, 0x00	; 0
    14f6:	61 e0       	ldi	r22, 0x01	; 1
    14f8:	41 e0       	ldi	r20, 0x01	; 1
    14fa:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>

while(1)
{
	STD_level_Type Pin_Value = DIO_GetpinValue(PORTA , pin0);
    14fe:	80 e0       	ldi	r24, 0x00	; 0
    1500:	60 e0       	ldi	r22, 0x00	; 0
    1502:	0e 94 69 08 	call	0x10d2	; 0x10d2 <DIO_GetpinValue>
    1506:	89 83       	std	Y+1, r24	; 0x01

	if(/*DIO_GetpinValue(PORTA , pin0)*/Pin_Value ==HIGH)
    1508:	89 81       	ldd	r24, Y+1	; 0x01
    150a:	81 30       	cpi	r24, 0x01	; 1
    150c:	31 f4       	brne	.+12     	; 0x151a <PUCH_BUTTON_1+0x3a>
	{
	DIO_SetPinValue(PORTA , pin1, HIGH);
    150e:	80 e0       	ldi	r24, 0x00	; 0
    1510:	61 e0       	ldi	r22, 0x01	; 1
    1512:	41 e0       	ldi	r20, 0x01	; 1
    1514:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    1518:	f2 cf       	rjmp	.-28     	; 0x14fe <PUCH_BUTTON_1+0x1e>
	}

	else if (/*DIO_GetpinValue(PORTA , pin0)*/ Pin_Value ==LOW)
    151a:	89 81       	ldd	r24, Y+1	; 0x01
    151c:	88 23       	and	r24, r24
    151e:	79 f7       	brne	.-34     	; 0x14fe <PUCH_BUTTON_1+0x1e>
	{
		DIO_SetPinValue(PORTA , pin1, LOW);
    1520:	80 e0       	ldi	r24, 0x00	; 0
    1522:	61 e0       	ldi	r22, 0x01	; 1
    1524:	40 e0       	ldi	r20, 0x00	; 0
    1526:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    152a:	e9 cf       	rjmp	.-46     	; 0x14fe <PUCH_BUTTON_1+0x1e>

0000152c <PUCH_BUTTON_2>:
#include "../MCAL/DIO/DIO_types.h"
#include "../MCAL/DIO/DIO.h"


void PUCH_BUTTON_2()
{
    152c:	0f 93       	push	r16
    152e:	1f 93       	push	r17
    1530:	df 93       	push	r29
    1532:	cf 93       	push	r28
    1534:	cd b7       	in	r28, 0x3d	; 61
    1536:	de b7       	in	r29, 0x3e	; 62
    1538:	cf 58       	subi	r28, 0x8F	; 143
    153a:	d0 40       	sbci	r29, 0x00	; 0
    153c:	0f b6       	in	r0, 0x3f	; 63
    153e:	f8 94       	cli
    1540:	de bf       	out	0x3e, r29	; 62
    1542:	0f be       	out	0x3f, r0	; 63
    1544:	cd bf       	out	0x3d, r28	; 61
DIO_SetPinDirection(PORTA , pin0 , INPUT);
    1546:	80 e0       	ldi	r24, 0x00	; 0
    1548:	60 e0       	ldi	r22, 0x00	; 0
    154a:	40 e0       	ldi	r20, 0x00	; 0
    154c:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
DIO_SetPinDirection(PORTA , pin1 , INPUT);
    1550:	80 e0       	ldi	r24, 0x00	; 0
    1552:	61 e0       	ldi	r22, 0x01	; 1
    1554:	40 e0       	ldi	r20, 0x00	; 0
    1556:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
DIO_SetPinDirection(PORTA , pin2 , INPUT);
    155a:	80 e0       	ldi	r24, 0x00	; 0
    155c:	62 e0       	ldi	r22, 0x02	; 2
    155e:	40 e0       	ldi	r20, 0x00	; 0
    1560:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>

DIO_SetPinDirection(PORTA , pin3 , OUTPUT);
    1564:	80 e0       	ldi	r24, 0x00	; 0
    1566:	63 e0       	ldi	r22, 0x03	; 3
    1568:	41 e0       	ldi	r20, 0x01	; 1
    156a:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
DIO_SetPinDirection(PORTA , pin4 , OUTPUT);
    156e:	80 e0       	ldi	r24, 0x00	; 0
    1570:	64 e0       	ldi	r22, 0x04	; 4
    1572:	41 e0       	ldi	r20, 0x01	; 1
    1574:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>
DIO_SetPinDirection(PORTA , pin5 , OUTPUT);
    1578:	80 e0       	ldi	r24, 0x00	; 0
    157a:	65 e0       	ldi	r22, 0x05	; 5
    157c:	41 e0       	ldi	r20, 0x01	; 1
    157e:	0e 94 59 06 	call	0xcb2	; 0xcb2 <DIO_SetPinDirection>

while(1)
{

STD_level_Type Button0_Value = DIO_GetpinValue(PORTA , pin0);
    1582:	80 e0       	ldi	r24, 0x00	; 0
    1584:	60 e0       	ldi	r22, 0x00	; 0
    1586:	0e 94 69 08 	call	0x10d2	; 0x10d2 <DIO_GetpinValue>
    158a:	fe 01       	movw	r30, r28
    158c:	e1 57       	subi	r30, 0x71	; 113
    158e:	ff 4f       	sbci	r31, 0xFF	; 255
    1590:	80 83       	st	Z, r24
STD_level_Type Button1_Value = DIO_GetpinValue(PORTA , pin1);
    1592:	80 e0       	ldi	r24, 0x00	; 0
    1594:	61 e0       	ldi	r22, 0x01	; 1
    1596:	0e 94 69 08 	call	0x10d2	; 0x10d2 <DIO_GetpinValue>
    159a:	fe 01       	movw	r30, r28
    159c:	e2 57       	subi	r30, 0x72	; 114
    159e:	ff 4f       	sbci	r31, 0xFF	; 255
    15a0:	80 83       	st	Z, r24
STD_level_Type Button2_Value = DIO_GetpinValue(PORTA , pin2);
    15a2:	80 e0       	ldi	r24, 0x00	; 0
    15a4:	62 e0       	ldi	r22, 0x02	; 2
    15a6:	0e 94 69 08 	call	0x10d2	; 0x10d2 <DIO_GetpinValue>
    15aa:	fe 01       	movw	r30, r28
    15ac:	e3 57       	subi	r30, 0x73	; 115
    15ae:	ff 4f       	sbci	r31, 0xFF	; 255
    15b0:	80 83       	st	Z, r24


if(Button0_Value == HIGH && Button1_Value == LOW && Button2_Value == LOW)
    15b2:	fe 01       	movw	r30, r28
    15b4:	e1 57       	subi	r30, 0x71	; 113
    15b6:	ff 4f       	sbci	r31, 0xFF	; 255
    15b8:	80 81       	ld	r24, Z
    15ba:	81 30       	cpi	r24, 0x01	; 1
    15bc:	e1 f4       	brne	.+56     	; 0x15f6 <PUCH_BUTTON_2+0xca>
    15be:	fe 01       	movw	r30, r28
    15c0:	e2 57       	subi	r30, 0x72	; 114
    15c2:	ff 4f       	sbci	r31, 0xFF	; 255
    15c4:	80 81       	ld	r24, Z
    15c6:	88 23       	and	r24, r24
    15c8:	b1 f4       	brne	.+44     	; 0x15f6 <PUCH_BUTTON_2+0xca>
    15ca:	fe 01       	movw	r30, r28
    15cc:	e3 57       	subi	r30, 0x73	; 115
    15ce:	ff 4f       	sbci	r31, 0xFF	; 255
    15d0:	80 81       	ld	r24, Z
    15d2:	88 23       	and	r24, r24
    15d4:	81 f4       	brne	.+32     	; 0x15f6 <PUCH_BUTTON_2+0xca>
{
DIO_SetPinValue(PORTA , pin3 , HIGH);
    15d6:	80 e0       	ldi	r24, 0x00	; 0
    15d8:	63 e0       	ldi	r22, 0x03	; 3
    15da:	41 e0       	ldi	r20, 0x01	; 1
    15dc:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA , pin4 , HIGH);
    15e0:	80 e0       	ldi	r24, 0x00	; 0
    15e2:	64 e0       	ldi	r22, 0x04	; 4
    15e4:	41 e0       	ldi	r20, 0x01	; 1
    15e6:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA , pin5 , HIGH);
    15ea:	80 e0       	ldi	r24, 0x00	; 0
    15ec:	65 e0       	ldi	r22, 0x05	; 5
    15ee:	41 e0       	ldi	r20, 0x01	; 1
    15f0:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    15f4:	c6 cf       	rjmp	.-116    	; 0x1582 <PUCH_BUTTON_2+0x56>

}
else if (Button0_Value == LOW && Button1_Value == LOW && Button2_Value == LOW)
    15f6:	fe 01       	movw	r30, r28
    15f8:	e1 57       	subi	r30, 0x71	; 113
    15fa:	ff 4f       	sbci	r31, 0xFF	; 255
    15fc:	80 81       	ld	r24, Z
    15fe:	88 23       	and	r24, r24
    1600:	09 f0       	breq	.+2      	; 0x1604 <PUCH_BUTTON_2+0xd8>
    1602:	56 c2       	rjmp	.+1196   	; 0x1ab0 <PUCH_BUTTON_2+0x584>
    1604:	fe 01       	movw	r30, r28
    1606:	e2 57       	subi	r30, 0x72	; 114
    1608:	ff 4f       	sbci	r31, 0xFF	; 255
    160a:	80 81       	ld	r24, Z
    160c:	88 23       	and	r24, r24
    160e:	09 f0       	breq	.+2      	; 0x1612 <PUCH_BUTTON_2+0xe6>
    1610:	4f c2       	rjmp	.+1182   	; 0x1ab0 <PUCH_BUTTON_2+0x584>
    1612:	fe 01       	movw	r30, r28
    1614:	e3 57       	subi	r30, 0x73	; 115
    1616:	ff 4f       	sbci	r31, 0xFF	; 255
    1618:	80 81       	ld	r24, Z
    161a:	88 23       	and	r24, r24
    161c:	09 f0       	breq	.+2      	; 0x1620 <PUCH_BUTTON_2+0xf4>
    161e:	48 c2       	rjmp	.+1168   	; 0x1ab0 <PUCH_BUTTON_2+0x584>
{
DIO_SetPinValue(PORTA, pin3 , HIGH);
    1620:	80 e0       	ldi	r24, 0x00	; 0
    1622:	63 e0       	ldi	r22, 0x03	; 3
    1624:	41 e0       	ldi	r20, 0x01	; 1
    1626:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin4 , LOW);
    162a:	80 e0       	ldi	r24, 0x00	; 0
    162c:	64 e0       	ldi	r22, 0x04	; 4
    162e:	40 e0       	ldi	r20, 0x00	; 0
    1630:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin5 , LOW);
    1634:	80 e0       	ldi	r24, 0x00	; 0
    1636:	65 e0       	ldi	r22, 0x05	; 5
    1638:	40 e0       	ldi	r20, 0x00	; 0
    163a:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    163e:	fe 01       	movw	r30, r28
    1640:	e7 57       	subi	r30, 0x77	; 119
    1642:	ff 4f       	sbci	r31, 0xFF	; 255
    1644:	80 e0       	ldi	r24, 0x00	; 0
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	a6 e9       	ldi	r26, 0x96	; 150
    164a:	b3 e4       	ldi	r27, 0x43	; 67
    164c:	80 83       	st	Z, r24
    164e:	91 83       	std	Z+1, r25	; 0x01
    1650:	a2 83       	std	Z+2, r26	; 0x02
    1652:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1654:	8e 01       	movw	r16, r28
    1656:	0b 57       	subi	r16, 0x7B	; 123
    1658:	1f 4f       	sbci	r17, 0xFF	; 255
    165a:	fe 01       	movw	r30, r28
    165c:	e7 57       	subi	r30, 0x77	; 119
    165e:	ff 4f       	sbci	r31, 0xFF	; 255
    1660:	60 81       	ld	r22, Z
    1662:	71 81       	ldd	r23, Z+1	; 0x01
    1664:	82 81       	ldd	r24, Z+2	; 0x02
    1666:	93 81       	ldd	r25, Z+3	; 0x03
    1668:	20 e0       	ldi	r18, 0x00	; 0
    166a:	30 e0       	ldi	r19, 0x00	; 0
    166c:	4a ef       	ldi	r20, 0xFA	; 250
    166e:	54 e4       	ldi	r21, 0x44	; 68
    1670:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1674:	dc 01       	movw	r26, r24
    1676:	cb 01       	movw	r24, r22
    1678:	f8 01       	movw	r30, r16
    167a:	80 83       	st	Z, r24
    167c:	91 83       	std	Z+1, r25	; 0x01
    167e:	a2 83       	std	Z+2, r26	; 0x02
    1680:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1682:	fe 01       	movw	r30, r28
    1684:	eb 57       	subi	r30, 0x7B	; 123
    1686:	ff 4f       	sbci	r31, 0xFF	; 255
    1688:	60 81       	ld	r22, Z
    168a:	71 81       	ldd	r23, Z+1	; 0x01
    168c:	82 81       	ldd	r24, Z+2	; 0x02
    168e:	93 81       	ldd	r25, Z+3	; 0x03
    1690:	20 e0       	ldi	r18, 0x00	; 0
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	40 e8       	ldi	r20, 0x80	; 128
    1696:	5f e3       	ldi	r21, 0x3F	; 63
    1698:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    169c:	88 23       	and	r24, r24
    169e:	44 f4       	brge	.+16     	; 0x16b0 <PUCH_BUTTON_2+0x184>
		__ticks = 1;
    16a0:	fe 01       	movw	r30, r28
    16a2:	ed 57       	subi	r30, 0x7D	; 125
    16a4:	ff 4f       	sbci	r31, 0xFF	; 255
    16a6:	81 e0       	ldi	r24, 0x01	; 1
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	91 83       	std	Z+1, r25	; 0x01
    16ac:	80 83       	st	Z, r24
    16ae:	64 c0       	rjmp	.+200    	; 0x1778 <PUCH_BUTTON_2+0x24c>
	else if (__tmp > 65535)
    16b0:	fe 01       	movw	r30, r28
    16b2:	eb 57       	subi	r30, 0x7B	; 123
    16b4:	ff 4f       	sbci	r31, 0xFF	; 255
    16b6:	60 81       	ld	r22, Z
    16b8:	71 81       	ldd	r23, Z+1	; 0x01
    16ba:	82 81       	ldd	r24, Z+2	; 0x02
    16bc:	93 81       	ldd	r25, Z+3	; 0x03
    16be:	20 e0       	ldi	r18, 0x00	; 0
    16c0:	3f ef       	ldi	r19, 0xFF	; 255
    16c2:	4f e7       	ldi	r20, 0x7F	; 127
    16c4:	57 e4       	ldi	r21, 0x47	; 71
    16c6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16ca:	18 16       	cp	r1, r24
    16cc:	0c f0       	brlt	.+2      	; 0x16d0 <PUCH_BUTTON_2+0x1a4>
    16ce:	43 c0       	rjmp	.+134    	; 0x1756 <PUCH_BUTTON_2+0x22a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16d0:	fe 01       	movw	r30, r28
    16d2:	e7 57       	subi	r30, 0x77	; 119
    16d4:	ff 4f       	sbci	r31, 0xFF	; 255
    16d6:	60 81       	ld	r22, Z
    16d8:	71 81       	ldd	r23, Z+1	; 0x01
    16da:	82 81       	ldd	r24, Z+2	; 0x02
    16dc:	93 81       	ldd	r25, Z+3	; 0x03
    16de:	20 e0       	ldi	r18, 0x00	; 0
    16e0:	30 e0       	ldi	r19, 0x00	; 0
    16e2:	40 e2       	ldi	r20, 0x20	; 32
    16e4:	51 e4       	ldi	r21, 0x41	; 65
    16e6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16ea:	dc 01       	movw	r26, r24
    16ec:	cb 01       	movw	r24, r22
    16ee:	8e 01       	movw	r16, r28
    16f0:	0d 57       	subi	r16, 0x7D	; 125
    16f2:	1f 4f       	sbci	r17, 0xFF	; 255
    16f4:	bc 01       	movw	r22, r24
    16f6:	cd 01       	movw	r24, r26
    16f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16fc:	dc 01       	movw	r26, r24
    16fe:	cb 01       	movw	r24, r22
    1700:	f8 01       	movw	r30, r16
    1702:	91 83       	std	Z+1, r25	; 0x01
    1704:	80 83       	st	Z, r24
    1706:	1f c0       	rjmp	.+62     	; 0x1746 <PUCH_BUTTON_2+0x21a>
    1708:	fe 01       	movw	r30, r28
    170a:	ef 57       	subi	r30, 0x7F	; 127
    170c:	ff 4f       	sbci	r31, 0xFF	; 255
    170e:	88 ec       	ldi	r24, 0xC8	; 200
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	91 83       	std	Z+1, r25	; 0x01
    1714:	80 83       	st	Z, r24
    1716:	fe 01       	movw	r30, r28
    1718:	ef 57       	subi	r30, 0x7F	; 127
    171a:	ff 4f       	sbci	r31, 0xFF	; 255
    171c:	80 81       	ld	r24, Z
    171e:	91 81       	ldd	r25, Z+1	; 0x01
    1720:	01 97       	sbiw	r24, 0x01	; 1
    1722:	f1 f7       	brne	.-4      	; 0x1720 <PUCH_BUTTON_2+0x1f4>
    1724:	fe 01       	movw	r30, r28
    1726:	ef 57       	subi	r30, 0x7F	; 127
    1728:	ff 4f       	sbci	r31, 0xFF	; 255
    172a:	91 83       	std	Z+1, r25	; 0x01
    172c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    172e:	de 01       	movw	r26, r28
    1730:	ad 57       	subi	r26, 0x7D	; 125
    1732:	bf 4f       	sbci	r27, 0xFF	; 255
    1734:	fe 01       	movw	r30, r28
    1736:	ed 57       	subi	r30, 0x7D	; 125
    1738:	ff 4f       	sbci	r31, 0xFF	; 255
    173a:	80 81       	ld	r24, Z
    173c:	91 81       	ldd	r25, Z+1	; 0x01
    173e:	01 97       	sbiw	r24, 0x01	; 1
    1740:	11 96       	adiw	r26, 0x01	; 1
    1742:	9c 93       	st	X, r25
    1744:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1746:	fe 01       	movw	r30, r28
    1748:	ed 57       	subi	r30, 0x7D	; 125
    174a:	ff 4f       	sbci	r31, 0xFF	; 255
    174c:	80 81       	ld	r24, Z
    174e:	91 81       	ldd	r25, Z+1	; 0x01
    1750:	00 97       	sbiw	r24, 0x00	; 0
    1752:	d1 f6       	brne	.-76     	; 0x1708 <PUCH_BUTTON_2+0x1dc>
    1754:	27 c0       	rjmp	.+78     	; 0x17a4 <PUCH_BUTTON_2+0x278>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1756:	8e 01       	movw	r16, r28
    1758:	0d 57       	subi	r16, 0x7D	; 125
    175a:	1f 4f       	sbci	r17, 0xFF	; 255
    175c:	fe 01       	movw	r30, r28
    175e:	eb 57       	subi	r30, 0x7B	; 123
    1760:	ff 4f       	sbci	r31, 0xFF	; 255
    1762:	60 81       	ld	r22, Z
    1764:	71 81       	ldd	r23, Z+1	; 0x01
    1766:	82 81       	ldd	r24, Z+2	; 0x02
    1768:	93 81       	ldd	r25, Z+3	; 0x03
    176a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    176e:	dc 01       	movw	r26, r24
    1770:	cb 01       	movw	r24, r22
    1772:	f8 01       	movw	r30, r16
    1774:	91 83       	std	Z+1, r25	; 0x01
    1776:	80 83       	st	Z, r24
    1778:	de 01       	movw	r26, r28
    177a:	a1 58       	subi	r26, 0x81	; 129
    177c:	bf 4f       	sbci	r27, 0xFF	; 255
    177e:	fe 01       	movw	r30, r28
    1780:	ed 57       	subi	r30, 0x7D	; 125
    1782:	ff 4f       	sbci	r31, 0xFF	; 255
    1784:	80 81       	ld	r24, Z
    1786:	91 81       	ldd	r25, Z+1	; 0x01
    1788:	8d 93       	st	X+, r24
    178a:	9c 93       	st	X, r25
    178c:	fe 01       	movw	r30, r28
    178e:	e1 58       	subi	r30, 0x81	; 129
    1790:	ff 4f       	sbci	r31, 0xFF	; 255
    1792:	80 81       	ld	r24, Z
    1794:	91 81       	ldd	r25, Z+1	; 0x01
    1796:	01 97       	sbiw	r24, 0x01	; 1
    1798:	f1 f7       	brne	.-4      	; 0x1796 <PUCH_BUTTON_2+0x26a>
    179a:	fe 01       	movw	r30, r28
    179c:	e1 58       	subi	r30, 0x81	; 129
    179e:	ff 4f       	sbci	r31, 0xFF	; 255
    17a0:	91 83       	std	Z+1, r25	; 0x01
    17a2:	80 83       	st	Z, r24
_delay_ms(300);

DIO_SetPinValue(PORTA, pin3 , LOW);
    17a4:	80 e0       	ldi	r24, 0x00	; 0
    17a6:	63 e0       	ldi	r22, 0x03	; 3
    17a8:	40 e0       	ldi	r20, 0x00	; 0
    17aa:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin4 , HIGH);
    17ae:	80 e0       	ldi	r24, 0x00	; 0
    17b0:	64 e0       	ldi	r22, 0x04	; 4
    17b2:	41 e0       	ldi	r20, 0x01	; 1
    17b4:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin5 , LOW);
    17b8:	80 e0       	ldi	r24, 0x00	; 0
    17ba:	65 e0       	ldi	r22, 0x05	; 5
    17bc:	40 e0       	ldi	r20, 0x00	; 0
    17be:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    17c2:	fe 01       	movw	r30, r28
    17c4:	e5 58       	subi	r30, 0x85	; 133
    17c6:	ff 4f       	sbci	r31, 0xFF	; 255
    17c8:	80 e0       	ldi	r24, 0x00	; 0
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	a6 e9       	ldi	r26, 0x96	; 150
    17ce:	b3 e4       	ldi	r27, 0x43	; 67
    17d0:	80 83       	st	Z, r24
    17d2:	91 83       	std	Z+1, r25	; 0x01
    17d4:	a2 83       	std	Z+2, r26	; 0x02
    17d6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17d8:	8e 01       	movw	r16, r28
    17da:	09 58       	subi	r16, 0x89	; 137
    17dc:	1f 4f       	sbci	r17, 0xFF	; 255
    17de:	fe 01       	movw	r30, r28
    17e0:	e5 58       	subi	r30, 0x85	; 133
    17e2:	ff 4f       	sbci	r31, 0xFF	; 255
    17e4:	60 81       	ld	r22, Z
    17e6:	71 81       	ldd	r23, Z+1	; 0x01
    17e8:	82 81       	ldd	r24, Z+2	; 0x02
    17ea:	93 81       	ldd	r25, Z+3	; 0x03
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	4a ef       	ldi	r20, 0xFA	; 250
    17f2:	54 e4       	ldi	r21, 0x44	; 68
    17f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17f8:	dc 01       	movw	r26, r24
    17fa:	cb 01       	movw	r24, r22
    17fc:	f8 01       	movw	r30, r16
    17fe:	80 83       	st	Z, r24
    1800:	91 83       	std	Z+1, r25	; 0x01
    1802:	a2 83       	std	Z+2, r26	; 0x02
    1804:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1806:	fe 01       	movw	r30, r28
    1808:	e9 58       	subi	r30, 0x89	; 137
    180a:	ff 4f       	sbci	r31, 0xFF	; 255
    180c:	60 81       	ld	r22, Z
    180e:	71 81       	ldd	r23, Z+1	; 0x01
    1810:	82 81       	ldd	r24, Z+2	; 0x02
    1812:	93 81       	ldd	r25, Z+3	; 0x03
    1814:	20 e0       	ldi	r18, 0x00	; 0
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	40 e8       	ldi	r20, 0x80	; 128
    181a:	5f e3       	ldi	r21, 0x3F	; 63
    181c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1820:	88 23       	and	r24, r24
    1822:	44 f4       	brge	.+16     	; 0x1834 <PUCH_BUTTON_2+0x308>
		__ticks = 1;
    1824:	fe 01       	movw	r30, r28
    1826:	eb 58       	subi	r30, 0x8B	; 139
    1828:	ff 4f       	sbci	r31, 0xFF	; 255
    182a:	81 e0       	ldi	r24, 0x01	; 1
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	91 83       	std	Z+1, r25	; 0x01
    1830:	80 83       	st	Z, r24
    1832:	64 c0       	rjmp	.+200    	; 0x18fc <PUCH_BUTTON_2+0x3d0>
	else if (__tmp > 65535)
    1834:	fe 01       	movw	r30, r28
    1836:	e9 58       	subi	r30, 0x89	; 137
    1838:	ff 4f       	sbci	r31, 0xFF	; 255
    183a:	60 81       	ld	r22, Z
    183c:	71 81       	ldd	r23, Z+1	; 0x01
    183e:	82 81       	ldd	r24, Z+2	; 0x02
    1840:	93 81       	ldd	r25, Z+3	; 0x03
    1842:	20 e0       	ldi	r18, 0x00	; 0
    1844:	3f ef       	ldi	r19, 0xFF	; 255
    1846:	4f e7       	ldi	r20, 0x7F	; 127
    1848:	57 e4       	ldi	r21, 0x47	; 71
    184a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    184e:	18 16       	cp	r1, r24
    1850:	0c f0       	brlt	.+2      	; 0x1854 <PUCH_BUTTON_2+0x328>
    1852:	43 c0       	rjmp	.+134    	; 0x18da <PUCH_BUTTON_2+0x3ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1854:	fe 01       	movw	r30, r28
    1856:	e5 58       	subi	r30, 0x85	; 133
    1858:	ff 4f       	sbci	r31, 0xFF	; 255
    185a:	60 81       	ld	r22, Z
    185c:	71 81       	ldd	r23, Z+1	; 0x01
    185e:	82 81       	ldd	r24, Z+2	; 0x02
    1860:	93 81       	ldd	r25, Z+3	; 0x03
    1862:	20 e0       	ldi	r18, 0x00	; 0
    1864:	30 e0       	ldi	r19, 0x00	; 0
    1866:	40 e2       	ldi	r20, 0x20	; 32
    1868:	51 e4       	ldi	r21, 0x41	; 65
    186a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    186e:	dc 01       	movw	r26, r24
    1870:	cb 01       	movw	r24, r22
    1872:	8e 01       	movw	r16, r28
    1874:	0b 58       	subi	r16, 0x8B	; 139
    1876:	1f 4f       	sbci	r17, 0xFF	; 255
    1878:	bc 01       	movw	r22, r24
    187a:	cd 01       	movw	r24, r26
    187c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1880:	dc 01       	movw	r26, r24
    1882:	cb 01       	movw	r24, r22
    1884:	f8 01       	movw	r30, r16
    1886:	91 83       	std	Z+1, r25	; 0x01
    1888:	80 83       	st	Z, r24
    188a:	1f c0       	rjmp	.+62     	; 0x18ca <PUCH_BUTTON_2+0x39e>
    188c:	fe 01       	movw	r30, r28
    188e:	ed 58       	subi	r30, 0x8D	; 141
    1890:	ff 4f       	sbci	r31, 0xFF	; 255
    1892:	88 ec       	ldi	r24, 0xC8	; 200
    1894:	90 e0       	ldi	r25, 0x00	; 0
    1896:	91 83       	std	Z+1, r25	; 0x01
    1898:	80 83       	st	Z, r24
    189a:	fe 01       	movw	r30, r28
    189c:	ed 58       	subi	r30, 0x8D	; 141
    189e:	ff 4f       	sbci	r31, 0xFF	; 255
    18a0:	80 81       	ld	r24, Z
    18a2:	91 81       	ldd	r25, Z+1	; 0x01
    18a4:	01 97       	sbiw	r24, 0x01	; 1
    18a6:	f1 f7       	brne	.-4      	; 0x18a4 <PUCH_BUTTON_2+0x378>
    18a8:	fe 01       	movw	r30, r28
    18aa:	ed 58       	subi	r30, 0x8D	; 141
    18ac:	ff 4f       	sbci	r31, 0xFF	; 255
    18ae:	91 83       	std	Z+1, r25	; 0x01
    18b0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18b2:	de 01       	movw	r26, r28
    18b4:	ab 58       	subi	r26, 0x8B	; 139
    18b6:	bf 4f       	sbci	r27, 0xFF	; 255
    18b8:	fe 01       	movw	r30, r28
    18ba:	eb 58       	subi	r30, 0x8B	; 139
    18bc:	ff 4f       	sbci	r31, 0xFF	; 255
    18be:	80 81       	ld	r24, Z
    18c0:	91 81       	ldd	r25, Z+1	; 0x01
    18c2:	01 97       	sbiw	r24, 0x01	; 1
    18c4:	11 96       	adiw	r26, 0x01	; 1
    18c6:	9c 93       	st	X, r25
    18c8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18ca:	fe 01       	movw	r30, r28
    18cc:	eb 58       	subi	r30, 0x8B	; 139
    18ce:	ff 4f       	sbci	r31, 0xFF	; 255
    18d0:	80 81       	ld	r24, Z
    18d2:	91 81       	ldd	r25, Z+1	; 0x01
    18d4:	00 97       	sbiw	r24, 0x00	; 0
    18d6:	d1 f6       	brne	.-76     	; 0x188c <PUCH_BUTTON_2+0x360>
    18d8:	27 c0       	rjmp	.+78     	; 0x1928 <PUCH_BUTTON_2+0x3fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18da:	8e 01       	movw	r16, r28
    18dc:	0b 58       	subi	r16, 0x8B	; 139
    18de:	1f 4f       	sbci	r17, 0xFF	; 255
    18e0:	fe 01       	movw	r30, r28
    18e2:	e9 58       	subi	r30, 0x89	; 137
    18e4:	ff 4f       	sbci	r31, 0xFF	; 255
    18e6:	60 81       	ld	r22, Z
    18e8:	71 81       	ldd	r23, Z+1	; 0x01
    18ea:	82 81       	ldd	r24, Z+2	; 0x02
    18ec:	93 81       	ldd	r25, Z+3	; 0x03
    18ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18f2:	dc 01       	movw	r26, r24
    18f4:	cb 01       	movw	r24, r22
    18f6:	f8 01       	movw	r30, r16
    18f8:	91 83       	std	Z+1, r25	; 0x01
    18fa:	80 83       	st	Z, r24
    18fc:	de 01       	movw	r26, r28
    18fe:	af 58       	subi	r26, 0x8F	; 143
    1900:	bf 4f       	sbci	r27, 0xFF	; 255
    1902:	fe 01       	movw	r30, r28
    1904:	eb 58       	subi	r30, 0x8B	; 139
    1906:	ff 4f       	sbci	r31, 0xFF	; 255
    1908:	80 81       	ld	r24, Z
    190a:	91 81       	ldd	r25, Z+1	; 0x01
    190c:	8d 93       	st	X+, r24
    190e:	9c 93       	st	X, r25
    1910:	fe 01       	movw	r30, r28
    1912:	ef 58       	subi	r30, 0x8F	; 143
    1914:	ff 4f       	sbci	r31, 0xFF	; 255
    1916:	80 81       	ld	r24, Z
    1918:	91 81       	ldd	r25, Z+1	; 0x01
    191a:	01 97       	sbiw	r24, 0x01	; 1
    191c:	f1 f7       	brne	.-4      	; 0x191a <PUCH_BUTTON_2+0x3ee>
    191e:	fe 01       	movw	r30, r28
    1920:	ef 58       	subi	r30, 0x8F	; 143
    1922:	ff 4f       	sbci	r31, 0xFF	; 255
    1924:	91 83       	std	Z+1, r25	; 0x01
    1926:	80 83       	st	Z, r24
_delay_ms(300);

DIO_SetPinValue(PORTA, pin3 , LOW);
    1928:	80 e0       	ldi	r24, 0x00	; 0
    192a:	63 e0       	ldi	r22, 0x03	; 3
    192c:	40 e0       	ldi	r20, 0x00	; 0
    192e:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin4 , LOW);
    1932:	80 e0       	ldi	r24, 0x00	; 0
    1934:	64 e0       	ldi	r22, 0x04	; 4
    1936:	40 e0       	ldi	r20, 0x00	; 0
    1938:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin5 , HIGH);
    193c:	80 e0       	ldi	r24, 0x00	; 0
    193e:	65 e0       	ldi	r22, 0x05	; 5
    1940:	41 e0       	ldi	r20, 0x01	; 1
    1942:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    1946:	fe 01       	movw	r30, r28
    1948:	e3 59       	subi	r30, 0x93	; 147
    194a:	ff 4f       	sbci	r31, 0xFF	; 255
    194c:	80 e0       	ldi	r24, 0x00	; 0
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	a6 e9       	ldi	r26, 0x96	; 150
    1952:	b3 e4       	ldi	r27, 0x43	; 67
    1954:	80 83       	st	Z, r24
    1956:	91 83       	std	Z+1, r25	; 0x01
    1958:	a2 83       	std	Z+2, r26	; 0x02
    195a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    195c:	8e 01       	movw	r16, r28
    195e:	07 59       	subi	r16, 0x97	; 151
    1960:	1f 4f       	sbci	r17, 0xFF	; 255
    1962:	fe 01       	movw	r30, r28
    1964:	e3 59       	subi	r30, 0x93	; 147
    1966:	ff 4f       	sbci	r31, 0xFF	; 255
    1968:	60 81       	ld	r22, Z
    196a:	71 81       	ldd	r23, Z+1	; 0x01
    196c:	82 81       	ldd	r24, Z+2	; 0x02
    196e:	93 81       	ldd	r25, Z+3	; 0x03
    1970:	20 e0       	ldi	r18, 0x00	; 0
    1972:	30 e0       	ldi	r19, 0x00	; 0
    1974:	4a ef       	ldi	r20, 0xFA	; 250
    1976:	54 e4       	ldi	r21, 0x44	; 68
    1978:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    197c:	dc 01       	movw	r26, r24
    197e:	cb 01       	movw	r24, r22
    1980:	f8 01       	movw	r30, r16
    1982:	80 83       	st	Z, r24
    1984:	91 83       	std	Z+1, r25	; 0x01
    1986:	a2 83       	std	Z+2, r26	; 0x02
    1988:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    198a:	fe 01       	movw	r30, r28
    198c:	e7 59       	subi	r30, 0x97	; 151
    198e:	ff 4f       	sbci	r31, 0xFF	; 255
    1990:	60 81       	ld	r22, Z
    1992:	71 81       	ldd	r23, Z+1	; 0x01
    1994:	82 81       	ldd	r24, Z+2	; 0x02
    1996:	93 81       	ldd	r25, Z+3	; 0x03
    1998:	20 e0       	ldi	r18, 0x00	; 0
    199a:	30 e0       	ldi	r19, 0x00	; 0
    199c:	40 e8       	ldi	r20, 0x80	; 128
    199e:	5f e3       	ldi	r21, 0x3F	; 63
    19a0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    19a4:	88 23       	and	r24, r24
    19a6:	44 f4       	brge	.+16     	; 0x19b8 <PUCH_BUTTON_2+0x48c>
		__ticks = 1;
    19a8:	fe 01       	movw	r30, r28
    19aa:	e9 59       	subi	r30, 0x99	; 153
    19ac:	ff 4f       	sbci	r31, 0xFF	; 255
    19ae:	81 e0       	ldi	r24, 0x01	; 1
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	91 83       	std	Z+1, r25	; 0x01
    19b4:	80 83       	st	Z, r24
    19b6:	64 c0       	rjmp	.+200    	; 0x1a80 <PUCH_BUTTON_2+0x554>
	else if (__tmp > 65535)
    19b8:	fe 01       	movw	r30, r28
    19ba:	e7 59       	subi	r30, 0x97	; 151
    19bc:	ff 4f       	sbci	r31, 0xFF	; 255
    19be:	60 81       	ld	r22, Z
    19c0:	71 81       	ldd	r23, Z+1	; 0x01
    19c2:	82 81       	ldd	r24, Z+2	; 0x02
    19c4:	93 81       	ldd	r25, Z+3	; 0x03
    19c6:	20 e0       	ldi	r18, 0x00	; 0
    19c8:	3f ef       	ldi	r19, 0xFF	; 255
    19ca:	4f e7       	ldi	r20, 0x7F	; 127
    19cc:	57 e4       	ldi	r21, 0x47	; 71
    19ce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19d2:	18 16       	cp	r1, r24
    19d4:	0c f0       	brlt	.+2      	; 0x19d8 <PUCH_BUTTON_2+0x4ac>
    19d6:	43 c0       	rjmp	.+134    	; 0x1a5e <PUCH_BUTTON_2+0x532>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19d8:	fe 01       	movw	r30, r28
    19da:	e3 59       	subi	r30, 0x93	; 147
    19dc:	ff 4f       	sbci	r31, 0xFF	; 255
    19de:	60 81       	ld	r22, Z
    19e0:	71 81       	ldd	r23, Z+1	; 0x01
    19e2:	82 81       	ldd	r24, Z+2	; 0x02
    19e4:	93 81       	ldd	r25, Z+3	; 0x03
    19e6:	20 e0       	ldi	r18, 0x00	; 0
    19e8:	30 e0       	ldi	r19, 0x00	; 0
    19ea:	40 e2       	ldi	r20, 0x20	; 32
    19ec:	51 e4       	ldi	r21, 0x41	; 65
    19ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19f2:	dc 01       	movw	r26, r24
    19f4:	cb 01       	movw	r24, r22
    19f6:	8e 01       	movw	r16, r28
    19f8:	09 59       	subi	r16, 0x99	; 153
    19fa:	1f 4f       	sbci	r17, 0xFF	; 255
    19fc:	bc 01       	movw	r22, r24
    19fe:	cd 01       	movw	r24, r26
    1a00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a04:	dc 01       	movw	r26, r24
    1a06:	cb 01       	movw	r24, r22
    1a08:	f8 01       	movw	r30, r16
    1a0a:	91 83       	std	Z+1, r25	; 0x01
    1a0c:	80 83       	st	Z, r24
    1a0e:	1f c0       	rjmp	.+62     	; 0x1a4e <PUCH_BUTTON_2+0x522>
    1a10:	fe 01       	movw	r30, r28
    1a12:	eb 59       	subi	r30, 0x9B	; 155
    1a14:	ff 4f       	sbci	r31, 0xFF	; 255
    1a16:	88 ec       	ldi	r24, 0xC8	; 200
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	91 83       	std	Z+1, r25	; 0x01
    1a1c:	80 83       	st	Z, r24
    1a1e:	fe 01       	movw	r30, r28
    1a20:	eb 59       	subi	r30, 0x9B	; 155
    1a22:	ff 4f       	sbci	r31, 0xFF	; 255
    1a24:	80 81       	ld	r24, Z
    1a26:	91 81       	ldd	r25, Z+1	; 0x01
    1a28:	01 97       	sbiw	r24, 0x01	; 1
    1a2a:	f1 f7       	brne	.-4      	; 0x1a28 <PUCH_BUTTON_2+0x4fc>
    1a2c:	fe 01       	movw	r30, r28
    1a2e:	eb 59       	subi	r30, 0x9B	; 155
    1a30:	ff 4f       	sbci	r31, 0xFF	; 255
    1a32:	91 83       	std	Z+1, r25	; 0x01
    1a34:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a36:	de 01       	movw	r26, r28
    1a38:	a9 59       	subi	r26, 0x99	; 153
    1a3a:	bf 4f       	sbci	r27, 0xFF	; 255
    1a3c:	fe 01       	movw	r30, r28
    1a3e:	e9 59       	subi	r30, 0x99	; 153
    1a40:	ff 4f       	sbci	r31, 0xFF	; 255
    1a42:	80 81       	ld	r24, Z
    1a44:	91 81       	ldd	r25, Z+1	; 0x01
    1a46:	01 97       	sbiw	r24, 0x01	; 1
    1a48:	11 96       	adiw	r26, 0x01	; 1
    1a4a:	9c 93       	st	X, r25
    1a4c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a4e:	fe 01       	movw	r30, r28
    1a50:	e9 59       	subi	r30, 0x99	; 153
    1a52:	ff 4f       	sbci	r31, 0xFF	; 255
    1a54:	80 81       	ld	r24, Z
    1a56:	91 81       	ldd	r25, Z+1	; 0x01
    1a58:	00 97       	sbiw	r24, 0x00	; 0
    1a5a:	d1 f6       	brne	.-76     	; 0x1a10 <PUCH_BUTTON_2+0x4e4>
    1a5c:	92 cd       	rjmp	.-1244   	; 0x1582 <PUCH_BUTTON_2+0x56>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a5e:	8e 01       	movw	r16, r28
    1a60:	09 59       	subi	r16, 0x99	; 153
    1a62:	1f 4f       	sbci	r17, 0xFF	; 255
    1a64:	fe 01       	movw	r30, r28
    1a66:	e7 59       	subi	r30, 0x97	; 151
    1a68:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6a:	60 81       	ld	r22, Z
    1a6c:	71 81       	ldd	r23, Z+1	; 0x01
    1a6e:	82 81       	ldd	r24, Z+2	; 0x02
    1a70:	93 81       	ldd	r25, Z+3	; 0x03
    1a72:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a76:	dc 01       	movw	r26, r24
    1a78:	cb 01       	movw	r24, r22
    1a7a:	f8 01       	movw	r30, r16
    1a7c:	91 83       	std	Z+1, r25	; 0x01
    1a7e:	80 83       	st	Z, r24
    1a80:	de 01       	movw	r26, r28
    1a82:	ad 59       	subi	r26, 0x9D	; 157
    1a84:	bf 4f       	sbci	r27, 0xFF	; 255
    1a86:	fe 01       	movw	r30, r28
    1a88:	e9 59       	subi	r30, 0x99	; 153
    1a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8c:	80 81       	ld	r24, Z
    1a8e:	91 81       	ldd	r25, Z+1	; 0x01
    1a90:	11 96       	adiw	r26, 0x01	; 1
    1a92:	9c 93       	st	X, r25
    1a94:	8e 93       	st	-X, r24
    1a96:	fe 01       	movw	r30, r28
    1a98:	ed 59       	subi	r30, 0x9D	; 157
    1a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a9c:	80 81       	ld	r24, Z
    1a9e:	91 81       	ldd	r25, Z+1	; 0x01
    1aa0:	01 97       	sbiw	r24, 0x01	; 1
    1aa2:	f1 f7       	brne	.-4      	; 0x1aa0 <PUCH_BUTTON_2+0x574>
    1aa4:	fe 01       	movw	r30, r28
    1aa6:	ed 59       	subi	r30, 0x9D	; 157
    1aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aaa:	91 83       	std	Z+1, r25	; 0x01
    1aac:	80 83       	st	Z, r24
    1aae:	69 cd       	rjmp	.-1326   	; 0x1582 <PUCH_BUTTON_2+0x56>
_delay_ms(300);

}

else if (Button0_Value == LOW && Button1_Value == HIGH && Button2_Value == LOW)
    1ab0:	fe 01       	movw	r30, r28
    1ab2:	e1 57       	subi	r30, 0x71	; 113
    1ab4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab6:	80 81       	ld	r24, Z
    1ab8:	88 23       	and	r24, r24
    1aba:	09 f0       	breq	.+2      	; 0x1abe <PUCH_BUTTON_2+0x592>
    1abc:	2b c4       	rjmp	.+2134   	; 0x2314 <PUCH_BUTTON_2+0xde8>
    1abe:	fe 01       	movw	r30, r28
    1ac0:	e2 57       	subi	r30, 0x72	; 114
    1ac2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac4:	80 81       	ld	r24, Z
    1ac6:	81 30       	cpi	r24, 0x01	; 1
    1ac8:	09 f0       	breq	.+2      	; 0x1acc <PUCH_BUTTON_2+0x5a0>
    1aca:	24 c4       	rjmp	.+2120   	; 0x2314 <PUCH_BUTTON_2+0xde8>
    1acc:	fe 01       	movw	r30, r28
    1ace:	e3 57       	subi	r30, 0x73	; 115
    1ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad2:	80 81       	ld	r24, Z
    1ad4:	88 23       	and	r24, r24
    1ad6:	09 f0       	breq	.+2      	; 0x1ada <PUCH_BUTTON_2+0x5ae>
    1ad8:	1d c4       	rjmp	.+2106   	; 0x2314 <PUCH_BUTTON_2+0xde8>
{
DIO_SetPinValue(PORTA, pin3 , LOW);
    1ada:	80 e0       	ldi	r24, 0x00	; 0
    1adc:	63 e0       	ldi	r22, 0x03	; 3
    1ade:	40 e0       	ldi	r20, 0x00	; 0
    1ae0:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin4 , LOW);
    1ae4:	80 e0       	ldi	r24, 0x00	; 0
    1ae6:	64 e0       	ldi	r22, 0x04	; 4
    1ae8:	40 e0       	ldi	r20, 0x00	; 0
    1aea:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin5 , LOW);
    1aee:	80 e0       	ldi	r24, 0x00	; 0
    1af0:	65 e0       	ldi	r22, 0x05	; 5
    1af2:	40 e0       	ldi	r20, 0x00	; 0
    1af4:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    1af8:	fe 01       	movw	r30, r28
    1afa:	e1 5a       	subi	r30, 0xA1	; 161
    1afc:	ff 4f       	sbci	r31, 0xFF	; 255
    1afe:	80 e0       	ldi	r24, 0x00	; 0
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	a6 e9       	ldi	r26, 0x96	; 150
    1b04:	b3 e4       	ldi	r27, 0x43	; 67
    1b06:	80 83       	st	Z, r24
    1b08:	91 83       	std	Z+1, r25	; 0x01
    1b0a:	a2 83       	std	Z+2, r26	; 0x02
    1b0c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b0e:	8e 01       	movw	r16, r28
    1b10:	05 5a       	subi	r16, 0xA5	; 165
    1b12:	1f 4f       	sbci	r17, 0xFF	; 255
    1b14:	fe 01       	movw	r30, r28
    1b16:	e1 5a       	subi	r30, 0xA1	; 161
    1b18:	ff 4f       	sbci	r31, 0xFF	; 255
    1b1a:	60 81       	ld	r22, Z
    1b1c:	71 81       	ldd	r23, Z+1	; 0x01
    1b1e:	82 81       	ldd	r24, Z+2	; 0x02
    1b20:	93 81       	ldd	r25, Z+3	; 0x03
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	30 e0       	ldi	r19, 0x00	; 0
    1b26:	4a ef       	ldi	r20, 0xFA	; 250
    1b28:	54 e4       	ldi	r21, 0x44	; 68
    1b2a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b2e:	dc 01       	movw	r26, r24
    1b30:	cb 01       	movw	r24, r22
    1b32:	f8 01       	movw	r30, r16
    1b34:	80 83       	st	Z, r24
    1b36:	91 83       	std	Z+1, r25	; 0x01
    1b38:	a2 83       	std	Z+2, r26	; 0x02
    1b3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b3c:	fe 01       	movw	r30, r28
    1b3e:	e5 5a       	subi	r30, 0xA5	; 165
    1b40:	ff 4f       	sbci	r31, 0xFF	; 255
    1b42:	60 81       	ld	r22, Z
    1b44:	71 81       	ldd	r23, Z+1	; 0x01
    1b46:	82 81       	ldd	r24, Z+2	; 0x02
    1b48:	93 81       	ldd	r25, Z+3	; 0x03
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	40 e8       	ldi	r20, 0x80	; 128
    1b50:	5f e3       	ldi	r21, 0x3F	; 63
    1b52:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b56:	88 23       	and	r24, r24
    1b58:	44 f4       	brge	.+16     	; 0x1b6a <PUCH_BUTTON_2+0x63e>
		__ticks = 1;
    1b5a:	fe 01       	movw	r30, r28
    1b5c:	e7 5a       	subi	r30, 0xA7	; 167
    1b5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b60:	81 e0       	ldi	r24, 0x01	; 1
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	91 83       	std	Z+1, r25	; 0x01
    1b66:	80 83       	st	Z, r24
    1b68:	64 c0       	rjmp	.+200    	; 0x1c32 <PUCH_BUTTON_2+0x706>
	else if (__tmp > 65535)
    1b6a:	fe 01       	movw	r30, r28
    1b6c:	e5 5a       	subi	r30, 0xA5	; 165
    1b6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b70:	60 81       	ld	r22, Z
    1b72:	71 81       	ldd	r23, Z+1	; 0x01
    1b74:	82 81       	ldd	r24, Z+2	; 0x02
    1b76:	93 81       	ldd	r25, Z+3	; 0x03
    1b78:	20 e0       	ldi	r18, 0x00	; 0
    1b7a:	3f ef       	ldi	r19, 0xFF	; 255
    1b7c:	4f e7       	ldi	r20, 0x7F	; 127
    1b7e:	57 e4       	ldi	r21, 0x47	; 71
    1b80:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b84:	18 16       	cp	r1, r24
    1b86:	0c f0       	brlt	.+2      	; 0x1b8a <PUCH_BUTTON_2+0x65e>
    1b88:	43 c0       	rjmp	.+134    	; 0x1c10 <PUCH_BUTTON_2+0x6e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b8a:	fe 01       	movw	r30, r28
    1b8c:	e1 5a       	subi	r30, 0xA1	; 161
    1b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b90:	60 81       	ld	r22, Z
    1b92:	71 81       	ldd	r23, Z+1	; 0x01
    1b94:	82 81       	ldd	r24, Z+2	; 0x02
    1b96:	93 81       	ldd	r25, Z+3	; 0x03
    1b98:	20 e0       	ldi	r18, 0x00	; 0
    1b9a:	30 e0       	ldi	r19, 0x00	; 0
    1b9c:	40 e2       	ldi	r20, 0x20	; 32
    1b9e:	51 e4       	ldi	r21, 0x41	; 65
    1ba0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ba4:	dc 01       	movw	r26, r24
    1ba6:	cb 01       	movw	r24, r22
    1ba8:	8e 01       	movw	r16, r28
    1baa:	07 5a       	subi	r16, 0xA7	; 167
    1bac:	1f 4f       	sbci	r17, 0xFF	; 255
    1bae:	bc 01       	movw	r22, r24
    1bb0:	cd 01       	movw	r24, r26
    1bb2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bb6:	dc 01       	movw	r26, r24
    1bb8:	cb 01       	movw	r24, r22
    1bba:	f8 01       	movw	r30, r16
    1bbc:	91 83       	std	Z+1, r25	; 0x01
    1bbe:	80 83       	st	Z, r24
    1bc0:	1f c0       	rjmp	.+62     	; 0x1c00 <PUCH_BUTTON_2+0x6d4>
    1bc2:	fe 01       	movw	r30, r28
    1bc4:	e9 5a       	subi	r30, 0xA9	; 169
    1bc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc8:	88 ec       	ldi	r24, 0xC8	; 200
    1bca:	90 e0       	ldi	r25, 0x00	; 0
    1bcc:	91 83       	std	Z+1, r25	; 0x01
    1bce:	80 83       	st	Z, r24
    1bd0:	fe 01       	movw	r30, r28
    1bd2:	e9 5a       	subi	r30, 0xA9	; 169
    1bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd6:	80 81       	ld	r24, Z
    1bd8:	91 81       	ldd	r25, Z+1	; 0x01
    1bda:	01 97       	sbiw	r24, 0x01	; 1
    1bdc:	f1 f7       	brne	.-4      	; 0x1bda <PUCH_BUTTON_2+0x6ae>
    1bde:	fe 01       	movw	r30, r28
    1be0:	e9 5a       	subi	r30, 0xA9	; 169
    1be2:	ff 4f       	sbci	r31, 0xFF	; 255
    1be4:	91 83       	std	Z+1, r25	; 0x01
    1be6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1be8:	de 01       	movw	r26, r28
    1bea:	a7 5a       	subi	r26, 0xA7	; 167
    1bec:	bf 4f       	sbci	r27, 0xFF	; 255
    1bee:	fe 01       	movw	r30, r28
    1bf0:	e7 5a       	subi	r30, 0xA7	; 167
    1bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf4:	80 81       	ld	r24, Z
    1bf6:	91 81       	ldd	r25, Z+1	; 0x01
    1bf8:	01 97       	sbiw	r24, 0x01	; 1
    1bfa:	11 96       	adiw	r26, 0x01	; 1
    1bfc:	9c 93       	st	X, r25
    1bfe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c00:	fe 01       	movw	r30, r28
    1c02:	e7 5a       	subi	r30, 0xA7	; 167
    1c04:	ff 4f       	sbci	r31, 0xFF	; 255
    1c06:	80 81       	ld	r24, Z
    1c08:	91 81       	ldd	r25, Z+1	; 0x01
    1c0a:	00 97       	sbiw	r24, 0x00	; 0
    1c0c:	d1 f6       	brne	.-76     	; 0x1bc2 <PUCH_BUTTON_2+0x696>
    1c0e:	27 c0       	rjmp	.+78     	; 0x1c5e <PUCH_BUTTON_2+0x732>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c10:	8e 01       	movw	r16, r28
    1c12:	07 5a       	subi	r16, 0xA7	; 167
    1c14:	1f 4f       	sbci	r17, 0xFF	; 255
    1c16:	fe 01       	movw	r30, r28
    1c18:	e5 5a       	subi	r30, 0xA5	; 165
    1c1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1c:	60 81       	ld	r22, Z
    1c1e:	71 81       	ldd	r23, Z+1	; 0x01
    1c20:	82 81       	ldd	r24, Z+2	; 0x02
    1c22:	93 81       	ldd	r25, Z+3	; 0x03
    1c24:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c28:	dc 01       	movw	r26, r24
    1c2a:	cb 01       	movw	r24, r22
    1c2c:	f8 01       	movw	r30, r16
    1c2e:	91 83       	std	Z+1, r25	; 0x01
    1c30:	80 83       	st	Z, r24
    1c32:	de 01       	movw	r26, r28
    1c34:	ab 5a       	subi	r26, 0xAB	; 171
    1c36:	bf 4f       	sbci	r27, 0xFF	; 255
    1c38:	fe 01       	movw	r30, r28
    1c3a:	e7 5a       	subi	r30, 0xA7	; 167
    1c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3e:	80 81       	ld	r24, Z
    1c40:	91 81       	ldd	r25, Z+1	; 0x01
    1c42:	8d 93       	st	X+, r24
    1c44:	9c 93       	st	X, r25
    1c46:	fe 01       	movw	r30, r28
    1c48:	eb 5a       	subi	r30, 0xAB	; 171
    1c4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4c:	80 81       	ld	r24, Z
    1c4e:	91 81       	ldd	r25, Z+1	; 0x01
    1c50:	01 97       	sbiw	r24, 0x01	; 1
    1c52:	f1 f7       	brne	.-4      	; 0x1c50 <PUCH_BUTTON_2+0x724>
    1c54:	fe 01       	movw	r30, r28
    1c56:	eb 5a       	subi	r30, 0xAB	; 171
    1c58:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5a:	91 83       	std	Z+1, r25	; 0x01
    1c5c:	80 83       	st	Z, r24
_delay_ms(300);                          // 000

DIO_SetPinValue(PORTA, pin3 , HIGH);
    1c5e:	80 e0       	ldi	r24, 0x00	; 0
    1c60:	63 e0       	ldi	r22, 0x03	; 3
    1c62:	41 e0       	ldi	r20, 0x01	; 1
    1c64:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin4 , LOW);
    1c68:	80 e0       	ldi	r24, 0x00	; 0
    1c6a:	64 e0       	ldi	r22, 0x04	; 4
    1c6c:	40 e0       	ldi	r20, 0x00	; 0
    1c6e:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin5 , LOW);
    1c72:	80 e0       	ldi	r24, 0x00	; 0
    1c74:	65 e0       	ldi	r22, 0x05	; 5
    1c76:	40 e0       	ldi	r20, 0x00	; 0
    1c78:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    1c7c:	fe 01       	movw	r30, r28
    1c7e:	ef 5a       	subi	r30, 0xAF	; 175
    1c80:	ff 4f       	sbci	r31, 0xFF	; 255
    1c82:	80 e0       	ldi	r24, 0x00	; 0
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	a6 e9       	ldi	r26, 0x96	; 150
    1c88:	b3 e4       	ldi	r27, 0x43	; 67
    1c8a:	80 83       	st	Z, r24
    1c8c:	91 83       	std	Z+1, r25	; 0x01
    1c8e:	a2 83       	std	Z+2, r26	; 0x02
    1c90:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c92:	8e 01       	movw	r16, r28
    1c94:	03 5b       	subi	r16, 0xB3	; 179
    1c96:	1f 4f       	sbci	r17, 0xFF	; 255
    1c98:	fe 01       	movw	r30, r28
    1c9a:	ef 5a       	subi	r30, 0xAF	; 175
    1c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c9e:	60 81       	ld	r22, Z
    1ca0:	71 81       	ldd	r23, Z+1	; 0x01
    1ca2:	82 81       	ldd	r24, Z+2	; 0x02
    1ca4:	93 81       	ldd	r25, Z+3	; 0x03
    1ca6:	20 e0       	ldi	r18, 0x00	; 0
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	4a ef       	ldi	r20, 0xFA	; 250
    1cac:	54 e4       	ldi	r21, 0x44	; 68
    1cae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cb2:	dc 01       	movw	r26, r24
    1cb4:	cb 01       	movw	r24, r22
    1cb6:	f8 01       	movw	r30, r16
    1cb8:	80 83       	st	Z, r24
    1cba:	91 83       	std	Z+1, r25	; 0x01
    1cbc:	a2 83       	std	Z+2, r26	; 0x02
    1cbe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cc0:	fe 01       	movw	r30, r28
    1cc2:	e3 5b       	subi	r30, 0xB3	; 179
    1cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc6:	60 81       	ld	r22, Z
    1cc8:	71 81       	ldd	r23, Z+1	; 0x01
    1cca:	82 81       	ldd	r24, Z+2	; 0x02
    1ccc:	93 81       	ldd	r25, Z+3	; 0x03
    1cce:	20 e0       	ldi	r18, 0x00	; 0
    1cd0:	30 e0       	ldi	r19, 0x00	; 0
    1cd2:	40 e8       	ldi	r20, 0x80	; 128
    1cd4:	5f e3       	ldi	r21, 0x3F	; 63
    1cd6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1cda:	88 23       	and	r24, r24
    1cdc:	44 f4       	brge	.+16     	; 0x1cee <PUCH_BUTTON_2+0x7c2>
		__ticks = 1;
    1cde:	fe 01       	movw	r30, r28
    1ce0:	e5 5b       	subi	r30, 0xB5	; 181
    1ce2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce4:	81 e0       	ldi	r24, 0x01	; 1
    1ce6:	90 e0       	ldi	r25, 0x00	; 0
    1ce8:	91 83       	std	Z+1, r25	; 0x01
    1cea:	80 83       	st	Z, r24
    1cec:	64 c0       	rjmp	.+200    	; 0x1db6 <PUCH_BUTTON_2+0x88a>
	else if (__tmp > 65535)
    1cee:	fe 01       	movw	r30, r28
    1cf0:	e3 5b       	subi	r30, 0xB3	; 179
    1cf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf4:	60 81       	ld	r22, Z
    1cf6:	71 81       	ldd	r23, Z+1	; 0x01
    1cf8:	82 81       	ldd	r24, Z+2	; 0x02
    1cfa:	93 81       	ldd	r25, Z+3	; 0x03
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	3f ef       	ldi	r19, 0xFF	; 255
    1d00:	4f e7       	ldi	r20, 0x7F	; 127
    1d02:	57 e4       	ldi	r21, 0x47	; 71
    1d04:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d08:	18 16       	cp	r1, r24
    1d0a:	0c f0       	brlt	.+2      	; 0x1d0e <PUCH_BUTTON_2+0x7e2>
    1d0c:	43 c0       	rjmp	.+134    	; 0x1d94 <PUCH_BUTTON_2+0x868>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d0e:	fe 01       	movw	r30, r28
    1d10:	ef 5a       	subi	r30, 0xAF	; 175
    1d12:	ff 4f       	sbci	r31, 0xFF	; 255
    1d14:	60 81       	ld	r22, Z
    1d16:	71 81       	ldd	r23, Z+1	; 0x01
    1d18:	82 81       	ldd	r24, Z+2	; 0x02
    1d1a:	93 81       	ldd	r25, Z+3	; 0x03
    1d1c:	20 e0       	ldi	r18, 0x00	; 0
    1d1e:	30 e0       	ldi	r19, 0x00	; 0
    1d20:	40 e2       	ldi	r20, 0x20	; 32
    1d22:	51 e4       	ldi	r21, 0x41	; 65
    1d24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d28:	dc 01       	movw	r26, r24
    1d2a:	cb 01       	movw	r24, r22
    1d2c:	8e 01       	movw	r16, r28
    1d2e:	05 5b       	subi	r16, 0xB5	; 181
    1d30:	1f 4f       	sbci	r17, 0xFF	; 255
    1d32:	bc 01       	movw	r22, r24
    1d34:	cd 01       	movw	r24, r26
    1d36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d3a:	dc 01       	movw	r26, r24
    1d3c:	cb 01       	movw	r24, r22
    1d3e:	f8 01       	movw	r30, r16
    1d40:	91 83       	std	Z+1, r25	; 0x01
    1d42:	80 83       	st	Z, r24
    1d44:	1f c0       	rjmp	.+62     	; 0x1d84 <PUCH_BUTTON_2+0x858>
    1d46:	fe 01       	movw	r30, r28
    1d48:	e7 5b       	subi	r30, 0xB7	; 183
    1d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4c:	88 ec       	ldi	r24, 0xC8	; 200
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	91 83       	std	Z+1, r25	; 0x01
    1d52:	80 83       	st	Z, r24
    1d54:	fe 01       	movw	r30, r28
    1d56:	e7 5b       	subi	r30, 0xB7	; 183
    1d58:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5a:	80 81       	ld	r24, Z
    1d5c:	91 81       	ldd	r25, Z+1	; 0x01
    1d5e:	01 97       	sbiw	r24, 0x01	; 1
    1d60:	f1 f7       	brne	.-4      	; 0x1d5e <PUCH_BUTTON_2+0x832>
    1d62:	fe 01       	movw	r30, r28
    1d64:	e7 5b       	subi	r30, 0xB7	; 183
    1d66:	ff 4f       	sbci	r31, 0xFF	; 255
    1d68:	91 83       	std	Z+1, r25	; 0x01
    1d6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d6c:	de 01       	movw	r26, r28
    1d6e:	a5 5b       	subi	r26, 0xB5	; 181
    1d70:	bf 4f       	sbci	r27, 0xFF	; 255
    1d72:	fe 01       	movw	r30, r28
    1d74:	e5 5b       	subi	r30, 0xB5	; 181
    1d76:	ff 4f       	sbci	r31, 0xFF	; 255
    1d78:	80 81       	ld	r24, Z
    1d7a:	91 81       	ldd	r25, Z+1	; 0x01
    1d7c:	01 97       	sbiw	r24, 0x01	; 1
    1d7e:	11 96       	adiw	r26, 0x01	; 1
    1d80:	9c 93       	st	X, r25
    1d82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d84:	fe 01       	movw	r30, r28
    1d86:	e5 5b       	subi	r30, 0xB5	; 181
    1d88:	ff 4f       	sbci	r31, 0xFF	; 255
    1d8a:	80 81       	ld	r24, Z
    1d8c:	91 81       	ldd	r25, Z+1	; 0x01
    1d8e:	00 97       	sbiw	r24, 0x00	; 0
    1d90:	d1 f6       	brne	.-76     	; 0x1d46 <PUCH_BUTTON_2+0x81a>
    1d92:	27 c0       	rjmp	.+78     	; 0x1de2 <PUCH_BUTTON_2+0x8b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d94:	8e 01       	movw	r16, r28
    1d96:	05 5b       	subi	r16, 0xB5	; 181
    1d98:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9a:	fe 01       	movw	r30, r28
    1d9c:	e3 5b       	subi	r30, 0xB3	; 179
    1d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1da0:	60 81       	ld	r22, Z
    1da2:	71 81       	ldd	r23, Z+1	; 0x01
    1da4:	82 81       	ldd	r24, Z+2	; 0x02
    1da6:	93 81       	ldd	r25, Z+3	; 0x03
    1da8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dac:	dc 01       	movw	r26, r24
    1dae:	cb 01       	movw	r24, r22
    1db0:	f8 01       	movw	r30, r16
    1db2:	91 83       	std	Z+1, r25	; 0x01
    1db4:	80 83       	st	Z, r24
    1db6:	de 01       	movw	r26, r28
    1db8:	a9 5b       	subi	r26, 0xB9	; 185
    1dba:	bf 4f       	sbci	r27, 0xFF	; 255
    1dbc:	fe 01       	movw	r30, r28
    1dbe:	e5 5b       	subi	r30, 0xB5	; 181
    1dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc2:	80 81       	ld	r24, Z
    1dc4:	91 81       	ldd	r25, Z+1	; 0x01
    1dc6:	8d 93       	st	X+, r24
    1dc8:	9c 93       	st	X, r25
    1dca:	fe 01       	movw	r30, r28
    1dcc:	e9 5b       	subi	r30, 0xB9	; 185
    1dce:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd0:	80 81       	ld	r24, Z
    1dd2:	91 81       	ldd	r25, Z+1	; 0x01
    1dd4:	01 97       	sbiw	r24, 0x01	; 1
    1dd6:	f1 f7       	brne	.-4      	; 0x1dd4 <PUCH_BUTTON_2+0x8a8>
    1dd8:	fe 01       	movw	r30, r28
    1dda:	e9 5b       	subi	r30, 0xB9	; 185
    1ddc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dde:	91 83       	std	Z+1, r25	; 0x01
    1de0:	80 83       	st	Z, r24
_delay_ms(300);                          // 010

DIO_SetPinValue(PORTA, pin3 , HIGH);
    1de2:	80 e0       	ldi	r24, 0x00	; 0
    1de4:	63 e0       	ldi	r22, 0x03	; 3
    1de6:	41 e0       	ldi	r20, 0x01	; 1
    1de8:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin4 , HIGH);
    1dec:	80 e0       	ldi	r24, 0x00	; 0
    1dee:	64 e0       	ldi	r22, 0x04	; 4
    1df0:	41 e0       	ldi	r20, 0x01	; 1
    1df2:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin5 , LOW);
    1df6:	80 e0       	ldi	r24, 0x00	; 0
    1df8:	65 e0       	ldi	r22, 0x05	; 5
    1dfa:	40 e0       	ldi	r20, 0x00	; 0
    1dfc:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    1e00:	fe 01       	movw	r30, r28
    1e02:	ed 5b       	subi	r30, 0xBD	; 189
    1e04:	ff 4f       	sbci	r31, 0xFF	; 255
    1e06:	80 e0       	ldi	r24, 0x00	; 0
    1e08:	90 e0       	ldi	r25, 0x00	; 0
    1e0a:	a6 e9       	ldi	r26, 0x96	; 150
    1e0c:	b3 e4       	ldi	r27, 0x43	; 67
    1e0e:	80 83       	st	Z, r24
    1e10:	91 83       	std	Z+1, r25	; 0x01
    1e12:	a2 83       	std	Z+2, r26	; 0x02
    1e14:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e16:	8e 01       	movw	r16, r28
    1e18:	01 5c       	subi	r16, 0xC1	; 193
    1e1a:	1f 4f       	sbci	r17, 0xFF	; 255
    1e1c:	fe 01       	movw	r30, r28
    1e1e:	ed 5b       	subi	r30, 0xBD	; 189
    1e20:	ff 4f       	sbci	r31, 0xFF	; 255
    1e22:	60 81       	ld	r22, Z
    1e24:	71 81       	ldd	r23, Z+1	; 0x01
    1e26:	82 81       	ldd	r24, Z+2	; 0x02
    1e28:	93 81       	ldd	r25, Z+3	; 0x03
    1e2a:	20 e0       	ldi	r18, 0x00	; 0
    1e2c:	30 e0       	ldi	r19, 0x00	; 0
    1e2e:	4a ef       	ldi	r20, 0xFA	; 250
    1e30:	54 e4       	ldi	r21, 0x44	; 68
    1e32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e36:	dc 01       	movw	r26, r24
    1e38:	cb 01       	movw	r24, r22
    1e3a:	f8 01       	movw	r30, r16
    1e3c:	80 83       	st	Z, r24
    1e3e:	91 83       	std	Z+1, r25	; 0x01
    1e40:	a2 83       	std	Z+2, r26	; 0x02
    1e42:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e44:	fe 01       	movw	r30, r28
    1e46:	ff 96       	adiw	r30, 0x3f	; 63
    1e48:	60 81       	ld	r22, Z
    1e4a:	71 81       	ldd	r23, Z+1	; 0x01
    1e4c:	82 81       	ldd	r24, Z+2	; 0x02
    1e4e:	93 81       	ldd	r25, Z+3	; 0x03
    1e50:	20 e0       	ldi	r18, 0x00	; 0
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	40 e8       	ldi	r20, 0x80	; 128
    1e56:	5f e3       	ldi	r21, 0x3F	; 63
    1e58:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e5c:	88 23       	and	r24, r24
    1e5e:	2c f4       	brge	.+10     	; 0x1e6a <PUCH_BUTTON_2+0x93e>
		__ticks = 1;
    1e60:	81 e0       	ldi	r24, 0x01	; 1
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	9e af       	std	Y+62, r25	; 0x3e
    1e66:	8d af       	std	Y+61, r24	; 0x3d
    1e68:	46 c0       	rjmp	.+140    	; 0x1ef6 <PUCH_BUTTON_2+0x9ca>
	else if (__tmp > 65535)
    1e6a:	fe 01       	movw	r30, r28
    1e6c:	ff 96       	adiw	r30, 0x3f	; 63
    1e6e:	60 81       	ld	r22, Z
    1e70:	71 81       	ldd	r23, Z+1	; 0x01
    1e72:	82 81       	ldd	r24, Z+2	; 0x02
    1e74:	93 81       	ldd	r25, Z+3	; 0x03
    1e76:	20 e0       	ldi	r18, 0x00	; 0
    1e78:	3f ef       	ldi	r19, 0xFF	; 255
    1e7a:	4f e7       	ldi	r20, 0x7F	; 127
    1e7c:	57 e4       	ldi	r21, 0x47	; 71
    1e7e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e82:	18 16       	cp	r1, r24
    1e84:	64 f5       	brge	.+88     	; 0x1ede <PUCH_BUTTON_2+0x9b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e86:	fe 01       	movw	r30, r28
    1e88:	ed 5b       	subi	r30, 0xBD	; 189
    1e8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8c:	60 81       	ld	r22, Z
    1e8e:	71 81       	ldd	r23, Z+1	; 0x01
    1e90:	82 81       	ldd	r24, Z+2	; 0x02
    1e92:	93 81       	ldd	r25, Z+3	; 0x03
    1e94:	20 e0       	ldi	r18, 0x00	; 0
    1e96:	30 e0       	ldi	r19, 0x00	; 0
    1e98:	40 e2       	ldi	r20, 0x20	; 32
    1e9a:	51 e4       	ldi	r21, 0x41	; 65
    1e9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ea0:	dc 01       	movw	r26, r24
    1ea2:	cb 01       	movw	r24, r22
    1ea4:	bc 01       	movw	r22, r24
    1ea6:	cd 01       	movw	r24, r26
    1ea8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1eac:	dc 01       	movw	r26, r24
    1eae:	cb 01       	movw	r24, r22
    1eb0:	9e af       	std	Y+62, r25	; 0x3e
    1eb2:	8d af       	std	Y+61, r24	; 0x3d
    1eb4:	0f c0       	rjmp	.+30     	; 0x1ed4 <PUCH_BUTTON_2+0x9a8>
    1eb6:	88 ec       	ldi	r24, 0xC8	; 200
    1eb8:	90 e0       	ldi	r25, 0x00	; 0
    1eba:	9c af       	std	Y+60, r25	; 0x3c
    1ebc:	8b af       	std	Y+59, r24	; 0x3b
    1ebe:	8b ad       	ldd	r24, Y+59	; 0x3b
    1ec0:	9c ad       	ldd	r25, Y+60	; 0x3c
    1ec2:	01 97       	sbiw	r24, 0x01	; 1
    1ec4:	f1 f7       	brne	.-4      	; 0x1ec2 <PUCH_BUTTON_2+0x996>
    1ec6:	9c af       	std	Y+60, r25	; 0x3c
    1ec8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1eca:	8d ad       	ldd	r24, Y+61	; 0x3d
    1ecc:	9e ad       	ldd	r25, Y+62	; 0x3e
    1ece:	01 97       	sbiw	r24, 0x01	; 1
    1ed0:	9e af       	std	Y+62, r25	; 0x3e
    1ed2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ed4:	8d ad       	ldd	r24, Y+61	; 0x3d
    1ed6:	9e ad       	ldd	r25, Y+62	; 0x3e
    1ed8:	00 97       	sbiw	r24, 0x00	; 0
    1eda:	69 f7       	brne	.-38     	; 0x1eb6 <PUCH_BUTTON_2+0x98a>
    1edc:	16 c0       	rjmp	.+44     	; 0x1f0a <PUCH_BUTTON_2+0x9de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ede:	fe 01       	movw	r30, r28
    1ee0:	ff 96       	adiw	r30, 0x3f	; 63
    1ee2:	60 81       	ld	r22, Z
    1ee4:	71 81       	ldd	r23, Z+1	; 0x01
    1ee6:	82 81       	ldd	r24, Z+2	; 0x02
    1ee8:	93 81       	ldd	r25, Z+3	; 0x03
    1eea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1eee:	dc 01       	movw	r26, r24
    1ef0:	cb 01       	movw	r24, r22
    1ef2:	9e af       	std	Y+62, r25	; 0x3e
    1ef4:	8d af       	std	Y+61, r24	; 0x3d
    1ef6:	8d ad       	ldd	r24, Y+61	; 0x3d
    1ef8:	9e ad       	ldd	r25, Y+62	; 0x3e
    1efa:	9a af       	std	Y+58, r25	; 0x3a
    1efc:	89 af       	std	Y+57, r24	; 0x39
    1efe:	89 ad       	ldd	r24, Y+57	; 0x39
    1f00:	9a ad       	ldd	r25, Y+58	; 0x3a
    1f02:	01 97       	sbiw	r24, 0x01	; 1
    1f04:	f1 f7       	brne	.-4      	; 0x1f02 <PUCH_BUTTON_2+0x9d6>
    1f06:	9a af       	std	Y+58, r25	; 0x3a
    1f08:	89 af       	std	Y+57, r24	; 0x39
_delay_ms(300);                          // 011

DIO_SetPinValue(PORTA, pin3 , LOW);
    1f0a:	80 e0       	ldi	r24, 0x00	; 0
    1f0c:	63 e0       	ldi	r22, 0x03	; 3
    1f0e:	40 e0       	ldi	r20, 0x00	; 0
    1f10:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin4 , LOW);
    1f14:	80 e0       	ldi	r24, 0x00	; 0
    1f16:	64 e0       	ldi	r22, 0x04	; 4
    1f18:	40 e0       	ldi	r20, 0x00	; 0
    1f1a:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin5 , HIGH);
    1f1e:	80 e0       	ldi	r24, 0x00	; 0
    1f20:	65 e0       	ldi	r22, 0x05	; 5
    1f22:	41 e0       	ldi	r20, 0x01	; 1
    1f24:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    1f28:	80 e0       	ldi	r24, 0x00	; 0
    1f2a:	90 e0       	ldi	r25, 0x00	; 0
    1f2c:	a6 e9       	ldi	r26, 0x96	; 150
    1f2e:	b3 e4       	ldi	r27, 0x43	; 67
    1f30:	8d ab       	std	Y+53, r24	; 0x35
    1f32:	9e ab       	std	Y+54, r25	; 0x36
    1f34:	af ab       	std	Y+55, r26	; 0x37
    1f36:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f38:	6d a9       	ldd	r22, Y+53	; 0x35
    1f3a:	7e a9       	ldd	r23, Y+54	; 0x36
    1f3c:	8f a9       	ldd	r24, Y+55	; 0x37
    1f3e:	98 ad       	ldd	r25, Y+56	; 0x38
    1f40:	20 e0       	ldi	r18, 0x00	; 0
    1f42:	30 e0       	ldi	r19, 0x00	; 0
    1f44:	4a ef       	ldi	r20, 0xFA	; 250
    1f46:	54 e4       	ldi	r21, 0x44	; 68
    1f48:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f4c:	dc 01       	movw	r26, r24
    1f4e:	cb 01       	movw	r24, r22
    1f50:	89 ab       	std	Y+49, r24	; 0x31
    1f52:	9a ab       	std	Y+50, r25	; 0x32
    1f54:	ab ab       	std	Y+51, r26	; 0x33
    1f56:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1f58:	69 a9       	ldd	r22, Y+49	; 0x31
    1f5a:	7a a9       	ldd	r23, Y+50	; 0x32
    1f5c:	8b a9       	ldd	r24, Y+51	; 0x33
    1f5e:	9c a9       	ldd	r25, Y+52	; 0x34
    1f60:	20 e0       	ldi	r18, 0x00	; 0
    1f62:	30 e0       	ldi	r19, 0x00	; 0
    1f64:	40 e8       	ldi	r20, 0x80	; 128
    1f66:	5f e3       	ldi	r21, 0x3F	; 63
    1f68:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f6c:	88 23       	and	r24, r24
    1f6e:	2c f4       	brge	.+10     	; 0x1f7a <PUCH_BUTTON_2+0xa4e>
		__ticks = 1;
    1f70:	81 e0       	ldi	r24, 0x01	; 1
    1f72:	90 e0       	ldi	r25, 0x00	; 0
    1f74:	98 ab       	std	Y+48, r25	; 0x30
    1f76:	8f a7       	std	Y+47, r24	; 0x2f
    1f78:	3f c0       	rjmp	.+126    	; 0x1ff8 <PUCH_BUTTON_2+0xacc>
	else if (__tmp > 65535)
    1f7a:	69 a9       	ldd	r22, Y+49	; 0x31
    1f7c:	7a a9       	ldd	r23, Y+50	; 0x32
    1f7e:	8b a9       	ldd	r24, Y+51	; 0x33
    1f80:	9c a9       	ldd	r25, Y+52	; 0x34
    1f82:	20 e0       	ldi	r18, 0x00	; 0
    1f84:	3f ef       	ldi	r19, 0xFF	; 255
    1f86:	4f e7       	ldi	r20, 0x7F	; 127
    1f88:	57 e4       	ldi	r21, 0x47	; 71
    1f8a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f8e:	18 16       	cp	r1, r24
    1f90:	4c f5       	brge	.+82     	; 0x1fe4 <PUCH_BUTTON_2+0xab8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f92:	6d a9       	ldd	r22, Y+53	; 0x35
    1f94:	7e a9       	ldd	r23, Y+54	; 0x36
    1f96:	8f a9       	ldd	r24, Y+55	; 0x37
    1f98:	98 ad       	ldd	r25, Y+56	; 0x38
    1f9a:	20 e0       	ldi	r18, 0x00	; 0
    1f9c:	30 e0       	ldi	r19, 0x00	; 0
    1f9e:	40 e2       	ldi	r20, 0x20	; 32
    1fa0:	51 e4       	ldi	r21, 0x41	; 65
    1fa2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fa6:	dc 01       	movw	r26, r24
    1fa8:	cb 01       	movw	r24, r22
    1faa:	bc 01       	movw	r22, r24
    1fac:	cd 01       	movw	r24, r26
    1fae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fb2:	dc 01       	movw	r26, r24
    1fb4:	cb 01       	movw	r24, r22
    1fb6:	98 ab       	std	Y+48, r25	; 0x30
    1fb8:	8f a7       	std	Y+47, r24	; 0x2f
    1fba:	0f c0       	rjmp	.+30     	; 0x1fda <PUCH_BUTTON_2+0xaae>
    1fbc:	88 ec       	ldi	r24, 0xC8	; 200
    1fbe:	90 e0       	ldi	r25, 0x00	; 0
    1fc0:	9e a7       	std	Y+46, r25	; 0x2e
    1fc2:	8d a7       	std	Y+45, r24	; 0x2d
    1fc4:	8d a5       	ldd	r24, Y+45	; 0x2d
    1fc6:	9e a5       	ldd	r25, Y+46	; 0x2e
    1fc8:	01 97       	sbiw	r24, 0x01	; 1
    1fca:	f1 f7       	brne	.-4      	; 0x1fc8 <PUCH_BUTTON_2+0xa9c>
    1fcc:	9e a7       	std	Y+46, r25	; 0x2e
    1fce:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fd0:	8f a5       	ldd	r24, Y+47	; 0x2f
    1fd2:	98 a9       	ldd	r25, Y+48	; 0x30
    1fd4:	01 97       	sbiw	r24, 0x01	; 1
    1fd6:	98 ab       	std	Y+48, r25	; 0x30
    1fd8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fda:	8f a5       	ldd	r24, Y+47	; 0x2f
    1fdc:	98 a9       	ldd	r25, Y+48	; 0x30
    1fde:	00 97       	sbiw	r24, 0x00	; 0
    1fe0:	69 f7       	brne	.-38     	; 0x1fbc <PUCH_BUTTON_2+0xa90>
    1fe2:	14 c0       	rjmp	.+40     	; 0x200c <PUCH_BUTTON_2+0xae0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fe4:	69 a9       	ldd	r22, Y+49	; 0x31
    1fe6:	7a a9       	ldd	r23, Y+50	; 0x32
    1fe8:	8b a9       	ldd	r24, Y+51	; 0x33
    1fea:	9c a9       	ldd	r25, Y+52	; 0x34
    1fec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ff0:	dc 01       	movw	r26, r24
    1ff2:	cb 01       	movw	r24, r22
    1ff4:	98 ab       	std	Y+48, r25	; 0x30
    1ff6:	8f a7       	std	Y+47, r24	; 0x2f
    1ff8:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ffa:	98 a9       	ldd	r25, Y+48	; 0x30
    1ffc:	9c a7       	std	Y+44, r25	; 0x2c
    1ffe:	8b a7       	std	Y+43, r24	; 0x2b
    2000:	8b a5       	ldd	r24, Y+43	; 0x2b
    2002:	9c a5       	ldd	r25, Y+44	; 0x2c
    2004:	01 97       	sbiw	r24, 0x01	; 1
    2006:	f1 f7       	brne	.-4      	; 0x2004 <PUCH_BUTTON_2+0xad8>
    2008:	9c a7       	std	Y+44, r25	; 0x2c
    200a:	8b a7       	std	Y+43, r24	; 0x2b
_delay_ms(300);                          // 100

DIO_SetPinValue(PORTA, pin3 , HIGH);
    200c:	80 e0       	ldi	r24, 0x00	; 0
    200e:	63 e0       	ldi	r22, 0x03	; 3
    2010:	41 e0       	ldi	r20, 0x01	; 1
    2012:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin4 , LOW);
    2016:	80 e0       	ldi	r24, 0x00	; 0
    2018:	64 e0       	ldi	r22, 0x04	; 4
    201a:	40 e0       	ldi	r20, 0x00	; 0
    201c:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin5 , HIGH);
    2020:	80 e0       	ldi	r24, 0x00	; 0
    2022:	65 e0       	ldi	r22, 0x05	; 5
    2024:	41 e0       	ldi	r20, 0x01	; 1
    2026:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    202a:	80 e0       	ldi	r24, 0x00	; 0
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	a6 e9       	ldi	r26, 0x96	; 150
    2030:	b3 e4       	ldi	r27, 0x43	; 67
    2032:	8f a3       	std	Y+39, r24	; 0x27
    2034:	98 a7       	std	Y+40, r25	; 0x28
    2036:	a9 a7       	std	Y+41, r26	; 0x29
    2038:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    203a:	6f a1       	ldd	r22, Y+39	; 0x27
    203c:	78 a5       	ldd	r23, Y+40	; 0x28
    203e:	89 a5       	ldd	r24, Y+41	; 0x29
    2040:	9a a5       	ldd	r25, Y+42	; 0x2a
    2042:	20 e0       	ldi	r18, 0x00	; 0
    2044:	30 e0       	ldi	r19, 0x00	; 0
    2046:	4a ef       	ldi	r20, 0xFA	; 250
    2048:	54 e4       	ldi	r21, 0x44	; 68
    204a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    204e:	dc 01       	movw	r26, r24
    2050:	cb 01       	movw	r24, r22
    2052:	8b a3       	std	Y+35, r24	; 0x23
    2054:	9c a3       	std	Y+36, r25	; 0x24
    2056:	ad a3       	std	Y+37, r26	; 0x25
    2058:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    205a:	6b a1       	ldd	r22, Y+35	; 0x23
    205c:	7c a1       	ldd	r23, Y+36	; 0x24
    205e:	8d a1       	ldd	r24, Y+37	; 0x25
    2060:	9e a1       	ldd	r25, Y+38	; 0x26
    2062:	20 e0       	ldi	r18, 0x00	; 0
    2064:	30 e0       	ldi	r19, 0x00	; 0
    2066:	40 e8       	ldi	r20, 0x80	; 128
    2068:	5f e3       	ldi	r21, 0x3F	; 63
    206a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    206e:	88 23       	and	r24, r24
    2070:	2c f4       	brge	.+10     	; 0x207c <PUCH_BUTTON_2+0xb50>
		__ticks = 1;
    2072:	81 e0       	ldi	r24, 0x01	; 1
    2074:	90 e0       	ldi	r25, 0x00	; 0
    2076:	9a a3       	std	Y+34, r25	; 0x22
    2078:	89 a3       	std	Y+33, r24	; 0x21
    207a:	3f c0       	rjmp	.+126    	; 0x20fa <PUCH_BUTTON_2+0xbce>
	else if (__tmp > 65535)
    207c:	6b a1       	ldd	r22, Y+35	; 0x23
    207e:	7c a1       	ldd	r23, Y+36	; 0x24
    2080:	8d a1       	ldd	r24, Y+37	; 0x25
    2082:	9e a1       	ldd	r25, Y+38	; 0x26
    2084:	20 e0       	ldi	r18, 0x00	; 0
    2086:	3f ef       	ldi	r19, 0xFF	; 255
    2088:	4f e7       	ldi	r20, 0x7F	; 127
    208a:	57 e4       	ldi	r21, 0x47	; 71
    208c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2090:	18 16       	cp	r1, r24
    2092:	4c f5       	brge	.+82     	; 0x20e6 <PUCH_BUTTON_2+0xbba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2094:	6f a1       	ldd	r22, Y+39	; 0x27
    2096:	78 a5       	ldd	r23, Y+40	; 0x28
    2098:	89 a5       	ldd	r24, Y+41	; 0x29
    209a:	9a a5       	ldd	r25, Y+42	; 0x2a
    209c:	20 e0       	ldi	r18, 0x00	; 0
    209e:	30 e0       	ldi	r19, 0x00	; 0
    20a0:	40 e2       	ldi	r20, 0x20	; 32
    20a2:	51 e4       	ldi	r21, 0x41	; 65
    20a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20a8:	dc 01       	movw	r26, r24
    20aa:	cb 01       	movw	r24, r22
    20ac:	bc 01       	movw	r22, r24
    20ae:	cd 01       	movw	r24, r26
    20b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20b4:	dc 01       	movw	r26, r24
    20b6:	cb 01       	movw	r24, r22
    20b8:	9a a3       	std	Y+34, r25	; 0x22
    20ba:	89 a3       	std	Y+33, r24	; 0x21
    20bc:	0f c0       	rjmp	.+30     	; 0x20dc <PUCH_BUTTON_2+0xbb0>
    20be:	88 ec       	ldi	r24, 0xC8	; 200
    20c0:	90 e0       	ldi	r25, 0x00	; 0
    20c2:	98 a3       	std	Y+32, r25	; 0x20
    20c4:	8f 8f       	std	Y+31, r24	; 0x1f
    20c6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    20c8:	98 a1       	ldd	r25, Y+32	; 0x20
    20ca:	01 97       	sbiw	r24, 0x01	; 1
    20cc:	f1 f7       	brne	.-4      	; 0x20ca <PUCH_BUTTON_2+0xb9e>
    20ce:	98 a3       	std	Y+32, r25	; 0x20
    20d0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20d2:	89 a1       	ldd	r24, Y+33	; 0x21
    20d4:	9a a1       	ldd	r25, Y+34	; 0x22
    20d6:	01 97       	sbiw	r24, 0x01	; 1
    20d8:	9a a3       	std	Y+34, r25	; 0x22
    20da:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20dc:	89 a1       	ldd	r24, Y+33	; 0x21
    20de:	9a a1       	ldd	r25, Y+34	; 0x22
    20e0:	00 97       	sbiw	r24, 0x00	; 0
    20e2:	69 f7       	brne	.-38     	; 0x20be <PUCH_BUTTON_2+0xb92>
    20e4:	14 c0       	rjmp	.+40     	; 0x210e <PUCH_BUTTON_2+0xbe2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20e6:	6b a1       	ldd	r22, Y+35	; 0x23
    20e8:	7c a1       	ldd	r23, Y+36	; 0x24
    20ea:	8d a1       	ldd	r24, Y+37	; 0x25
    20ec:	9e a1       	ldd	r25, Y+38	; 0x26
    20ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20f2:	dc 01       	movw	r26, r24
    20f4:	cb 01       	movw	r24, r22
    20f6:	9a a3       	std	Y+34, r25	; 0x22
    20f8:	89 a3       	std	Y+33, r24	; 0x21
    20fa:	89 a1       	ldd	r24, Y+33	; 0x21
    20fc:	9a a1       	ldd	r25, Y+34	; 0x22
    20fe:	9e 8f       	std	Y+30, r25	; 0x1e
    2100:	8d 8f       	std	Y+29, r24	; 0x1d
    2102:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2104:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2106:	01 97       	sbiw	r24, 0x01	; 1
    2108:	f1 f7       	brne	.-4      	; 0x2106 <PUCH_BUTTON_2+0xbda>
    210a:	9e 8f       	std	Y+30, r25	; 0x1e
    210c:	8d 8f       	std	Y+29, r24	; 0x1d
_delay_ms(300);                          // 101

DIO_SetPinValue(PORTA, pin3 , LOW);
    210e:	80 e0       	ldi	r24, 0x00	; 0
    2110:	63 e0       	ldi	r22, 0x03	; 3
    2112:	40 e0       	ldi	r20, 0x00	; 0
    2114:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin4 , HIGH);
    2118:	80 e0       	ldi	r24, 0x00	; 0
    211a:	64 e0       	ldi	r22, 0x04	; 4
    211c:	41 e0       	ldi	r20, 0x01	; 1
    211e:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin5 , HIGH);
    2122:	80 e0       	ldi	r24, 0x00	; 0
    2124:	65 e0       	ldi	r22, 0x05	; 5
    2126:	41 e0       	ldi	r20, 0x01	; 1
    2128:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    212c:	80 e0       	ldi	r24, 0x00	; 0
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	a6 e9       	ldi	r26, 0x96	; 150
    2132:	b3 e4       	ldi	r27, 0x43	; 67
    2134:	89 8f       	std	Y+25, r24	; 0x19
    2136:	9a 8f       	std	Y+26, r25	; 0x1a
    2138:	ab 8f       	std	Y+27, r26	; 0x1b
    213a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    213c:	69 8d       	ldd	r22, Y+25	; 0x19
    213e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2140:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2142:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2144:	20 e0       	ldi	r18, 0x00	; 0
    2146:	30 e0       	ldi	r19, 0x00	; 0
    2148:	4a ef       	ldi	r20, 0xFA	; 250
    214a:	54 e4       	ldi	r21, 0x44	; 68
    214c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2150:	dc 01       	movw	r26, r24
    2152:	cb 01       	movw	r24, r22
    2154:	8d 8b       	std	Y+21, r24	; 0x15
    2156:	9e 8b       	std	Y+22, r25	; 0x16
    2158:	af 8b       	std	Y+23, r26	; 0x17
    215a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    215c:	6d 89       	ldd	r22, Y+21	; 0x15
    215e:	7e 89       	ldd	r23, Y+22	; 0x16
    2160:	8f 89       	ldd	r24, Y+23	; 0x17
    2162:	98 8d       	ldd	r25, Y+24	; 0x18
    2164:	20 e0       	ldi	r18, 0x00	; 0
    2166:	30 e0       	ldi	r19, 0x00	; 0
    2168:	40 e8       	ldi	r20, 0x80	; 128
    216a:	5f e3       	ldi	r21, 0x3F	; 63
    216c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2170:	88 23       	and	r24, r24
    2172:	2c f4       	brge	.+10     	; 0x217e <PUCH_BUTTON_2+0xc52>
		__ticks = 1;
    2174:	81 e0       	ldi	r24, 0x01	; 1
    2176:	90 e0       	ldi	r25, 0x00	; 0
    2178:	9c 8b       	std	Y+20, r25	; 0x14
    217a:	8b 8b       	std	Y+19, r24	; 0x13
    217c:	3f c0       	rjmp	.+126    	; 0x21fc <PUCH_BUTTON_2+0xcd0>
	else if (__tmp > 65535)
    217e:	6d 89       	ldd	r22, Y+21	; 0x15
    2180:	7e 89       	ldd	r23, Y+22	; 0x16
    2182:	8f 89       	ldd	r24, Y+23	; 0x17
    2184:	98 8d       	ldd	r25, Y+24	; 0x18
    2186:	20 e0       	ldi	r18, 0x00	; 0
    2188:	3f ef       	ldi	r19, 0xFF	; 255
    218a:	4f e7       	ldi	r20, 0x7F	; 127
    218c:	57 e4       	ldi	r21, 0x47	; 71
    218e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2192:	18 16       	cp	r1, r24
    2194:	4c f5       	brge	.+82     	; 0x21e8 <PUCH_BUTTON_2+0xcbc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2196:	69 8d       	ldd	r22, Y+25	; 0x19
    2198:	7a 8d       	ldd	r23, Y+26	; 0x1a
    219a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    219c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    219e:	20 e0       	ldi	r18, 0x00	; 0
    21a0:	30 e0       	ldi	r19, 0x00	; 0
    21a2:	40 e2       	ldi	r20, 0x20	; 32
    21a4:	51 e4       	ldi	r21, 0x41	; 65
    21a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21aa:	dc 01       	movw	r26, r24
    21ac:	cb 01       	movw	r24, r22
    21ae:	bc 01       	movw	r22, r24
    21b0:	cd 01       	movw	r24, r26
    21b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21b6:	dc 01       	movw	r26, r24
    21b8:	cb 01       	movw	r24, r22
    21ba:	9c 8b       	std	Y+20, r25	; 0x14
    21bc:	8b 8b       	std	Y+19, r24	; 0x13
    21be:	0f c0       	rjmp	.+30     	; 0x21de <PUCH_BUTTON_2+0xcb2>
    21c0:	88 ec       	ldi	r24, 0xC8	; 200
    21c2:	90 e0       	ldi	r25, 0x00	; 0
    21c4:	9a 8b       	std	Y+18, r25	; 0x12
    21c6:	89 8b       	std	Y+17, r24	; 0x11
    21c8:	89 89       	ldd	r24, Y+17	; 0x11
    21ca:	9a 89       	ldd	r25, Y+18	; 0x12
    21cc:	01 97       	sbiw	r24, 0x01	; 1
    21ce:	f1 f7       	brne	.-4      	; 0x21cc <PUCH_BUTTON_2+0xca0>
    21d0:	9a 8b       	std	Y+18, r25	; 0x12
    21d2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21d4:	8b 89       	ldd	r24, Y+19	; 0x13
    21d6:	9c 89       	ldd	r25, Y+20	; 0x14
    21d8:	01 97       	sbiw	r24, 0x01	; 1
    21da:	9c 8b       	std	Y+20, r25	; 0x14
    21dc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21de:	8b 89       	ldd	r24, Y+19	; 0x13
    21e0:	9c 89       	ldd	r25, Y+20	; 0x14
    21e2:	00 97       	sbiw	r24, 0x00	; 0
    21e4:	69 f7       	brne	.-38     	; 0x21c0 <PUCH_BUTTON_2+0xc94>
    21e6:	14 c0       	rjmp	.+40     	; 0x2210 <PUCH_BUTTON_2+0xce4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21e8:	6d 89       	ldd	r22, Y+21	; 0x15
    21ea:	7e 89       	ldd	r23, Y+22	; 0x16
    21ec:	8f 89       	ldd	r24, Y+23	; 0x17
    21ee:	98 8d       	ldd	r25, Y+24	; 0x18
    21f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21f4:	dc 01       	movw	r26, r24
    21f6:	cb 01       	movw	r24, r22
    21f8:	9c 8b       	std	Y+20, r25	; 0x14
    21fa:	8b 8b       	std	Y+19, r24	; 0x13
    21fc:	8b 89       	ldd	r24, Y+19	; 0x13
    21fe:	9c 89       	ldd	r25, Y+20	; 0x14
    2200:	98 8b       	std	Y+16, r25	; 0x10
    2202:	8f 87       	std	Y+15, r24	; 0x0f
    2204:	8f 85       	ldd	r24, Y+15	; 0x0f
    2206:	98 89       	ldd	r25, Y+16	; 0x10
    2208:	01 97       	sbiw	r24, 0x01	; 1
    220a:	f1 f7       	brne	.-4      	; 0x2208 <PUCH_BUTTON_2+0xcdc>
    220c:	98 8b       	std	Y+16, r25	; 0x10
    220e:	8f 87       	std	Y+15, r24	; 0x0f
_delay_ms(300);                          // 110

DIO_SetPinValue(PORTA, pin3 , HIGH);
    2210:	80 e0       	ldi	r24, 0x00	; 0
    2212:	63 e0       	ldi	r22, 0x03	; 3
    2214:	41 e0       	ldi	r20, 0x01	; 1
    2216:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin4 , HIGH);
    221a:	80 e0       	ldi	r24, 0x00	; 0
    221c:	64 e0       	ldi	r22, 0x04	; 4
    221e:	41 e0       	ldi	r20, 0x01	; 1
    2220:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
DIO_SetPinValue(PORTA, pin5 , HIGH);
    2224:	80 e0       	ldi	r24, 0x00	; 0
    2226:	65 e0       	ldi	r22, 0x05	; 5
    2228:	41 e0       	ldi	r20, 0x01	; 1
    222a:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    222e:	80 e0       	ldi	r24, 0x00	; 0
    2230:	90 e0       	ldi	r25, 0x00	; 0
    2232:	a6 e9       	ldi	r26, 0x96	; 150
    2234:	b3 e4       	ldi	r27, 0x43	; 67
    2236:	8b 87       	std	Y+11, r24	; 0x0b
    2238:	9c 87       	std	Y+12, r25	; 0x0c
    223a:	ad 87       	std	Y+13, r26	; 0x0d
    223c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    223e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2240:	7c 85       	ldd	r23, Y+12	; 0x0c
    2242:	8d 85       	ldd	r24, Y+13	; 0x0d
    2244:	9e 85       	ldd	r25, Y+14	; 0x0e
    2246:	20 e0       	ldi	r18, 0x00	; 0
    2248:	30 e0       	ldi	r19, 0x00	; 0
    224a:	4a ef       	ldi	r20, 0xFA	; 250
    224c:	54 e4       	ldi	r21, 0x44	; 68
    224e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2252:	dc 01       	movw	r26, r24
    2254:	cb 01       	movw	r24, r22
    2256:	8f 83       	std	Y+7, r24	; 0x07
    2258:	98 87       	std	Y+8, r25	; 0x08
    225a:	a9 87       	std	Y+9, r26	; 0x09
    225c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    225e:	6f 81       	ldd	r22, Y+7	; 0x07
    2260:	78 85       	ldd	r23, Y+8	; 0x08
    2262:	89 85       	ldd	r24, Y+9	; 0x09
    2264:	9a 85       	ldd	r25, Y+10	; 0x0a
    2266:	20 e0       	ldi	r18, 0x00	; 0
    2268:	30 e0       	ldi	r19, 0x00	; 0
    226a:	40 e8       	ldi	r20, 0x80	; 128
    226c:	5f e3       	ldi	r21, 0x3F	; 63
    226e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2272:	88 23       	and	r24, r24
    2274:	2c f4       	brge	.+10     	; 0x2280 <PUCH_BUTTON_2+0xd54>
		__ticks = 1;
    2276:	81 e0       	ldi	r24, 0x01	; 1
    2278:	90 e0       	ldi	r25, 0x00	; 0
    227a:	9e 83       	std	Y+6, r25	; 0x06
    227c:	8d 83       	std	Y+5, r24	; 0x05
    227e:	3f c0       	rjmp	.+126    	; 0x22fe <PUCH_BUTTON_2+0xdd2>
	else if (__tmp > 65535)
    2280:	6f 81       	ldd	r22, Y+7	; 0x07
    2282:	78 85       	ldd	r23, Y+8	; 0x08
    2284:	89 85       	ldd	r24, Y+9	; 0x09
    2286:	9a 85       	ldd	r25, Y+10	; 0x0a
    2288:	20 e0       	ldi	r18, 0x00	; 0
    228a:	3f ef       	ldi	r19, 0xFF	; 255
    228c:	4f e7       	ldi	r20, 0x7F	; 127
    228e:	57 e4       	ldi	r21, 0x47	; 71
    2290:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2294:	18 16       	cp	r1, r24
    2296:	4c f5       	brge	.+82     	; 0x22ea <PUCH_BUTTON_2+0xdbe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2298:	6b 85       	ldd	r22, Y+11	; 0x0b
    229a:	7c 85       	ldd	r23, Y+12	; 0x0c
    229c:	8d 85       	ldd	r24, Y+13	; 0x0d
    229e:	9e 85       	ldd	r25, Y+14	; 0x0e
    22a0:	20 e0       	ldi	r18, 0x00	; 0
    22a2:	30 e0       	ldi	r19, 0x00	; 0
    22a4:	40 e2       	ldi	r20, 0x20	; 32
    22a6:	51 e4       	ldi	r21, 0x41	; 65
    22a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22ac:	dc 01       	movw	r26, r24
    22ae:	cb 01       	movw	r24, r22
    22b0:	bc 01       	movw	r22, r24
    22b2:	cd 01       	movw	r24, r26
    22b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22b8:	dc 01       	movw	r26, r24
    22ba:	cb 01       	movw	r24, r22
    22bc:	9e 83       	std	Y+6, r25	; 0x06
    22be:	8d 83       	std	Y+5, r24	; 0x05
    22c0:	0f c0       	rjmp	.+30     	; 0x22e0 <PUCH_BUTTON_2+0xdb4>
    22c2:	88 ec       	ldi	r24, 0xC8	; 200
    22c4:	90 e0       	ldi	r25, 0x00	; 0
    22c6:	9c 83       	std	Y+4, r25	; 0x04
    22c8:	8b 83       	std	Y+3, r24	; 0x03
    22ca:	8b 81       	ldd	r24, Y+3	; 0x03
    22cc:	9c 81       	ldd	r25, Y+4	; 0x04
    22ce:	01 97       	sbiw	r24, 0x01	; 1
    22d0:	f1 f7       	brne	.-4      	; 0x22ce <PUCH_BUTTON_2+0xda2>
    22d2:	9c 83       	std	Y+4, r25	; 0x04
    22d4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22d6:	8d 81       	ldd	r24, Y+5	; 0x05
    22d8:	9e 81       	ldd	r25, Y+6	; 0x06
    22da:	01 97       	sbiw	r24, 0x01	; 1
    22dc:	9e 83       	std	Y+6, r25	; 0x06
    22de:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22e0:	8d 81       	ldd	r24, Y+5	; 0x05
    22e2:	9e 81       	ldd	r25, Y+6	; 0x06
    22e4:	00 97       	sbiw	r24, 0x00	; 0
    22e6:	69 f7       	brne	.-38     	; 0x22c2 <PUCH_BUTTON_2+0xd96>
    22e8:	4c c9       	rjmp	.-3432   	; 0x1582 <PUCH_BUTTON_2+0x56>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22ea:	6f 81       	ldd	r22, Y+7	; 0x07
    22ec:	78 85       	ldd	r23, Y+8	; 0x08
    22ee:	89 85       	ldd	r24, Y+9	; 0x09
    22f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    22f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22f6:	dc 01       	movw	r26, r24
    22f8:	cb 01       	movw	r24, r22
    22fa:	9e 83       	std	Y+6, r25	; 0x06
    22fc:	8d 83       	std	Y+5, r24	; 0x05
    22fe:	8d 81       	ldd	r24, Y+5	; 0x05
    2300:	9e 81       	ldd	r25, Y+6	; 0x06
    2302:	9a 83       	std	Y+2, r25	; 0x02
    2304:	89 83       	std	Y+1, r24	; 0x01
    2306:	89 81       	ldd	r24, Y+1	; 0x01
    2308:	9a 81       	ldd	r25, Y+2	; 0x02
    230a:	01 97       	sbiw	r24, 0x01	; 1
    230c:	f1 f7       	brne	.-4      	; 0x230a <PUCH_BUTTON_2+0xdde>
    230e:	9a 83       	std	Y+2, r25	; 0x02
    2310:	89 83       	std	Y+1, r24	; 0x01
    2312:	37 c9       	rjmp	.-3474   	; 0x1582 <PUCH_BUTTON_2+0x56>
_delay_ms(300);                          // 111

}
else
{
	DIO_SetPinValue(PORTA, pin3 , LOW);
    2314:	80 e0       	ldi	r24, 0x00	; 0
    2316:	63 e0       	ldi	r22, 0x03	; 3
    2318:	40 e0       	ldi	r20, 0x00	; 0
    231a:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
	DIO_SetPinValue(PORTA, pin4 , LOW);
    231e:	80 e0       	ldi	r24, 0x00	; 0
    2320:	64 e0       	ldi	r22, 0x04	; 4
    2322:	40 e0       	ldi	r20, 0x00	; 0
    2324:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
	DIO_SetPinValue(PORTA, pin5 , LOW);
    2328:	80 e0       	ldi	r24, 0x00	; 0
    232a:	65 e0       	ldi	r22, 0x05	; 5
    232c:	40 e0       	ldi	r20, 0x00	; 0
    232e:	0e 94 61 07 	call	0xec2	; 0xec2 <DIO_SetPinValue>
    2332:	27 c9       	rjmp	.-3506   	; 0x1582 <PUCH_BUTTON_2+0x56>

00002334 <SEV_SEG>:
 *      Author: Pro
 */
#include <avr/delay.h>
#include "../LIB/STD_types.h"
void SEV_SEG(u8 number , float time_sec)
{
    2334:	df 93       	push	r29
    2336:	cf 93       	push	r28
    2338:	cd b7       	in	r28, 0x3d	; 61
    233a:	de b7       	in	r29, 0x3e	; 62
    233c:	a7 97       	sbiw	r28, 0x27	; 39
    233e:	0f b6       	in	r0, 0x3f	; 63
    2340:	f8 94       	cli
    2342:	de bf       	out	0x3e, r29	; 62
    2344:	0f be       	out	0x3f, r0	; 63
    2346:	cd bf       	out	0x3d, r28	; 61
    2348:	8b a3       	std	Y+35, r24	; 0x23
    234a:	4c a3       	std	Y+36, r20	; 0x24
    234c:	5d a3       	std	Y+37, r21	; 0x25
    234e:	6e a3       	std	Y+38, r22	; 0x26
    2350:	7f a3       	std	Y+39, r23	; 0x27
 Seven_Segment_Initialization();
    2352:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <Seven_Segment_Initialization>

 	 u16 time_ms = time_sec*1000;
    2356:	6c a1       	ldd	r22, Y+36	; 0x24
    2358:	7d a1       	ldd	r23, Y+37	; 0x25
    235a:	8e a1       	ldd	r24, Y+38	; 0x26
    235c:	9f a1       	ldd	r25, Y+39	; 0x27
    235e:	20 e0       	ldi	r18, 0x00	; 0
    2360:	30 e0       	ldi	r19, 0x00	; 0
    2362:	4a e7       	ldi	r20, 0x7A	; 122
    2364:	54 e4       	ldi	r21, 0x44	; 68
    2366:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    236a:	dc 01       	movw	r26, r24
    236c:	cb 01       	movw	r24, r22
    236e:	bc 01       	movw	r22, r24
    2370:	cd 01       	movw	r24, r26
    2372:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2376:	dc 01       	movw	r26, r24
    2378:	cb 01       	movw	r24, r22
    237a:	9a a3       	std	Y+34, r25	; 0x22
    237c:	89 a3       	std	Y+33, r24	; 0x21


			if(number < 100)
    237e:	8b a1       	ldd	r24, Y+35	; 0x23
    2380:	84 36       	cpi	r24, 0x64	; 100
    2382:	08 f0       	brcs	.+2      	; 0x2386 <SEV_SEG+0x52>
    2384:	1c c1       	rjmp	.+568    	; 0x25be <SEV_SEG+0x28a>
				{ //9 9  4 8
				u8 right = number % 10 ; //en2
    2386:	8b a1       	ldd	r24, Y+35	; 0x23
    2388:	9a e0       	ldi	r25, 0x0A	; 10
    238a:	69 2f       	mov	r22, r25
    238c:	0e 94 ff 12 	call	0x25fe	; 0x25fe <__udivmodqi4>
    2390:	89 2f       	mov	r24, r25
    2392:	88 a3       	std	Y+32, r24	; 0x20
				u8 lift = number / 10 ; //en1
    2394:	8b a1       	ldd	r24, Y+35	; 0x23
    2396:	9a e0       	ldi	r25, 0x0A	; 10
    2398:	69 2f       	mov	r22, r25
    239a:	0e 94 ff 12 	call	0x25fe	; 0x25fe <__udivmodqi4>
    239e:	8f 8f       	std	Y+31, r24	; 0x1f

				for(u16 i=0 ; i< time_ms/20
    23a0:	1e 8e       	std	Y+30, r1	; 0x1e
    23a2:	1d 8e       	std	Y+29, r1	; 0x1d
    23a4:	fd c0       	rjmp	.+506    	; 0x25a0 <SEV_SEG+0x26c>
				; i++)
				{
					Seven_Segment_Disable2();
    23a6:	0e 94 33 09 	call	0x1266	; 0x1266 <Seven_Segment_Disable2>
					Seven_Segment_Disable1();
    23aa:	0e 94 27 09 	call	0x124e	; 0x124e <Seven_Segment_Disable1>

					Seven_Segment_Write_Number(lift);
    23ae:	8f 8d       	ldd	r24, Y+31	; 0x1f
    23b0:	88 2f       	mov	r24, r24
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	0e 94 3f 09 	call	0x127e	; 0x127e <Seven_Segment_Write_Number>
					Seven_Segment_Enable1();
    23b8:	0e 94 0f 09 	call	0x121e	; 0x121e <Seven_Segment_Enable1>
    23bc:	80 e0       	ldi	r24, 0x00	; 0
    23be:	90 e0       	ldi	r25, 0x00	; 0
    23c0:	a0 e2       	ldi	r26, 0x20	; 32
    23c2:	b1 e4       	ldi	r27, 0x41	; 65
    23c4:	89 8f       	std	Y+25, r24	; 0x19
    23c6:	9a 8f       	std	Y+26, r25	; 0x1a
    23c8:	ab 8f       	std	Y+27, r26	; 0x1b
    23ca:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23cc:	69 8d       	ldd	r22, Y+25	; 0x19
    23ce:	7a 8d       	ldd	r23, Y+26	; 0x1a
    23d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    23d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    23d4:	20 e0       	ldi	r18, 0x00	; 0
    23d6:	30 e0       	ldi	r19, 0x00	; 0
    23d8:	4a ef       	ldi	r20, 0xFA	; 250
    23da:	54 e4       	ldi	r21, 0x44	; 68
    23dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23e0:	dc 01       	movw	r26, r24
    23e2:	cb 01       	movw	r24, r22
    23e4:	8d 8b       	std	Y+21, r24	; 0x15
    23e6:	9e 8b       	std	Y+22, r25	; 0x16
    23e8:	af 8b       	std	Y+23, r26	; 0x17
    23ea:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    23ec:	6d 89       	ldd	r22, Y+21	; 0x15
    23ee:	7e 89       	ldd	r23, Y+22	; 0x16
    23f0:	8f 89       	ldd	r24, Y+23	; 0x17
    23f2:	98 8d       	ldd	r25, Y+24	; 0x18
    23f4:	20 e0       	ldi	r18, 0x00	; 0
    23f6:	30 e0       	ldi	r19, 0x00	; 0
    23f8:	40 e8       	ldi	r20, 0x80	; 128
    23fa:	5f e3       	ldi	r21, 0x3F	; 63
    23fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2400:	88 23       	and	r24, r24
    2402:	2c f4       	brge	.+10     	; 0x240e <SEV_SEG+0xda>
		__ticks = 1;
    2404:	81 e0       	ldi	r24, 0x01	; 1
    2406:	90 e0       	ldi	r25, 0x00	; 0
    2408:	9c 8b       	std	Y+20, r25	; 0x14
    240a:	8b 8b       	std	Y+19, r24	; 0x13
    240c:	3f c0       	rjmp	.+126    	; 0x248c <SEV_SEG+0x158>
	else if (__tmp > 65535)
    240e:	6d 89       	ldd	r22, Y+21	; 0x15
    2410:	7e 89       	ldd	r23, Y+22	; 0x16
    2412:	8f 89       	ldd	r24, Y+23	; 0x17
    2414:	98 8d       	ldd	r25, Y+24	; 0x18
    2416:	20 e0       	ldi	r18, 0x00	; 0
    2418:	3f ef       	ldi	r19, 0xFF	; 255
    241a:	4f e7       	ldi	r20, 0x7F	; 127
    241c:	57 e4       	ldi	r21, 0x47	; 71
    241e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2422:	18 16       	cp	r1, r24
    2424:	4c f5       	brge	.+82     	; 0x2478 <SEV_SEG+0x144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2426:	69 8d       	ldd	r22, Y+25	; 0x19
    2428:	7a 8d       	ldd	r23, Y+26	; 0x1a
    242a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    242c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    242e:	20 e0       	ldi	r18, 0x00	; 0
    2430:	30 e0       	ldi	r19, 0x00	; 0
    2432:	40 e2       	ldi	r20, 0x20	; 32
    2434:	51 e4       	ldi	r21, 0x41	; 65
    2436:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    243a:	dc 01       	movw	r26, r24
    243c:	cb 01       	movw	r24, r22
    243e:	bc 01       	movw	r22, r24
    2440:	cd 01       	movw	r24, r26
    2442:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2446:	dc 01       	movw	r26, r24
    2448:	cb 01       	movw	r24, r22
    244a:	9c 8b       	std	Y+20, r25	; 0x14
    244c:	8b 8b       	std	Y+19, r24	; 0x13
    244e:	0f c0       	rjmp	.+30     	; 0x246e <SEV_SEG+0x13a>
    2450:	88 ec       	ldi	r24, 0xC8	; 200
    2452:	90 e0       	ldi	r25, 0x00	; 0
    2454:	9a 8b       	std	Y+18, r25	; 0x12
    2456:	89 8b       	std	Y+17, r24	; 0x11
    2458:	89 89       	ldd	r24, Y+17	; 0x11
    245a:	9a 89       	ldd	r25, Y+18	; 0x12
    245c:	01 97       	sbiw	r24, 0x01	; 1
    245e:	f1 f7       	brne	.-4      	; 0x245c <SEV_SEG+0x128>
    2460:	9a 8b       	std	Y+18, r25	; 0x12
    2462:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2464:	8b 89       	ldd	r24, Y+19	; 0x13
    2466:	9c 89       	ldd	r25, Y+20	; 0x14
    2468:	01 97       	sbiw	r24, 0x01	; 1
    246a:	9c 8b       	std	Y+20, r25	; 0x14
    246c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    246e:	8b 89       	ldd	r24, Y+19	; 0x13
    2470:	9c 89       	ldd	r25, Y+20	; 0x14
    2472:	00 97       	sbiw	r24, 0x00	; 0
    2474:	69 f7       	brne	.-38     	; 0x2450 <SEV_SEG+0x11c>
    2476:	14 c0       	rjmp	.+40     	; 0x24a0 <SEV_SEG+0x16c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2478:	6d 89       	ldd	r22, Y+21	; 0x15
    247a:	7e 89       	ldd	r23, Y+22	; 0x16
    247c:	8f 89       	ldd	r24, Y+23	; 0x17
    247e:	98 8d       	ldd	r25, Y+24	; 0x18
    2480:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2484:	dc 01       	movw	r26, r24
    2486:	cb 01       	movw	r24, r22
    2488:	9c 8b       	std	Y+20, r25	; 0x14
    248a:	8b 8b       	std	Y+19, r24	; 0x13
    248c:	8b 89       	ldd	r24, Y+19	; 0x13
    248e:	9c 89       	ldd	r25, Y+20	; 0x14
    2490:	98 8b       	std	Y+16, r25	; 0x10
    2492:	8f 87       	std	Y+15, r24	; 0x0f
    2494:	8f 85       	ldd	r24, Y+15	; 0x0f
    2496:	98 89       	ldd	r25, Y+16	; 0x10
    2498:	01 97       	sbiw	r24, 0x01	; 1
    249a:	f1 f7       	brne	.-4      	; 0x2498 <SEV_SEG+0x164>
    249c:	98 8b       	std	Y+16, r25	; 0x10
    249e:	8f 87       	std	Y+15, r24	; 0x0f
					   _delay_ms(10);
					Seven_Segment_Disable1();
    24a0:	0e 94 27 09 	call	0x124e	; 0x124e <Seven_Segment_Disable1>

					Seven_Segment_Write_Number(right);
    24a4:	88 a1       	ldd	r24, Y+32	; 0x20
    24a6:	88 2f       	mov	r24, r24
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	0e 94 3f 09 	call	0x127e	; 0x127e <Seven_Segment_Write_Number>
					Seven_Segment_Enable2();
    24ae:	0e 94 1b 09 	call	0x1236	; 0x1236 <Seven_Segment_Enable2>
    24b2:	80 e0       	ldi	r24, 0x00	; 0
    24b4:	90 e0       	ldi	r25, 0x00	; 0
    24b6:	a0 e2       	ldi	r26, 0x20	; 32
    24b8:	b1 e4       	ldi	r27, 0x41	; 65
    24ba:	8b 87       	std	Y+11, r24	; 0x0b
    24bc:	9c 87       	std	Y+12, r25	; 0x0c
    24be:	ad 87       	std	Y+13, r26	; 0x0d
    24c0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    24c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    24c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    24c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    24ca:	20 e0       	ldi	r18, 0x00	; 0
    24cc:	30 e0       	ldi	r19, 0x00	; 0
    24ce:	4a ef       	ldi	r20, 0xFA	; 250
    24d0:	54 e4       	ldi	r21, 0x44	; 68
    24d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24d6:	dc 01       	movw	r26, r24
    24d8:	cb 01       	movw	r24, r22
    24da:	8f 83       	std	Y+7, r24	; 0x07
    24dc:	98 87       	std	Y+8, r25	; 0x08
    24de:	a9 87       	std	Y+9, r26	; 0x09
    24e0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    24e2:	6f 81       	ldd	r22, Y+7	; 0x07
    24e4:	78 85       	ldd	r23, Y+8	; 0x08
    24e6:	89 85       	ldd	r24, Y+9	; 0x09
    24e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    24ea:	20 e0       	ldi	r18, 0x00	; 0
    24ec:	30 e0       	ldi	r19, 0x00	; 0
    24ee:	40 e8       	ldi	r20, 0x80	; 128
    24f0:	5f e3       	ldi	r21, 0x3F	; 63
    24f2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    24f6:	88 23       	and	r24, r24
    24f8:	2c f4       	brge	.+10     	; 0x2504 <SEV_SEG+0x1d0>
		__ticks = 1;
    24fa:	81 e0       	ldi	r24, 0x01	; 1
    24fc:	90 e0       	ldi	r25, 0x00	; 0
    24fe:	9e 83       	std	Y+6, r25	; 0x06
    2500:	8d 83       	std	Y+5, r24	; 0x05
    2502:	3f c0       	rjmp	.+126    	; 0x2582 <SEV_SEG+0x24e>
	else if (__tmp > 65535)
    2504:	6f 81       	ldd	r22, Y+7	; 0x07
    2506:	78 85       	ldd	r23, Y+8	; 0x08
    2508:	89 85       	ldd	r24, Y+9	; 0x09
    250a:	9a 85       	ldd	r25, Y+10	; 0x0a
    250c:	20 e0       	ldi	r18, 0x00	; 0
    250e:	3f ef       	ldi	r19, 0xFF	; 255
    2510:	4f e7       	ldi	r20, 0x7F	; 127
    2512:	57 e4       	ldi	r21, 0x47	; 71
    2514:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2518:	18 16       	cp	r1, r24
    251a:	4c f5       	brge	.+82     	; 0x256e <SEV_SEG+0x23a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    251c:	6b 85       	ldd	r22, Y+11	; 0x0b
    251e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2520:	8d 85       	ldd	r24, Y+13	; 0x0d
    2522:	9e 85       	ldd	r25, Y+14	; 0x0e
    2524:	20 e0       	ldi	r18, 0x00	; 0
    2526:	30 e0       	ldi	r19, 0x00	; 0
    2528:	40 e2       	ldi	r20, 0x20	; 32
    252a:	51 e4       	ldi	r21, 0x41	; 65
    252c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2530:	dc 01       	movw	r26, r24
    2532:	cb 01       	movw	r24, r22
    2534:	bc 01       	movw	r22, r24
    2536:	cd 01       	movw	r24, r26
    2538:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    253c:	dc 01       	movw	r26, r24
    253e:	cb 01       	movw	r24, r22
    2540:	9e 83       	std	Y+6, r25	; 0x06
    2542:	8d 83       	std	Y+5, r24	; 0x05
    2544:	0f c0       	rjmp	.+30     	; 0x2564 <SEV_SEG+0x230>
    2546:	88 ec       	ldi	r24, 0xC8	; 200
    2548:	90 e0       	ldi	r25, 0x00	; 0
    254a:	9c 83       	std	Y+4, r25	; 0x04
    254c:	8b 83       	std	Y+3, r24	; 0x03
    254e:	8b 81       	ldd	r24, Y+3	; 0x03
    2550:	9c 81       	ldd	r25, Y+4	; 0x04
    2552:	01 97       	sbiw	r24, 0x01	; 1
    2554:	f1 f7       	brne	.-4      	; 0x2552 <SEV_SEG+0x21e>
    2556:	9c 83       	std	Y+4, r25	; 0x04
    2558:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    255a:	8d 81       	ldd	r24, Y+5	; 0x05
    255c:	9e 81       	ldd	r25, Y+6	; 0x06
    255e:	01 97       	sbiw	r24, 0x01	; 1
    2560:	9e 83       	std	Y+6, r25	; 0x06
    2562:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2564:	8d 81       	ldd	r24, Y+5	; 0x05
    2566:	9e 81       	ldd	r25, Y+6	; 0x06
    2568:	00 97       	sbiw	r24, 0x00	; 0
    256a:	69 f7       	brne	.-38     	; 0x2546 <SEV_SEG+0x212>
    256c:	14 c0       	rjmp	.+40     	; 0x2596 <SEV_SEG+0x262>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    256e:	6f 81       	ldd	r22, Y+7	; 0x07
    2570:	78 85       	ldd	r23, Y+8	; 0x08
    2572:	89 85       	ldd	r24, Y+9	; 0x09
    2574:	9a 85       	ldd	r25, Y+10	; 0x0a
    2576:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    257a:	dc 01       	movw	r26, r24
    257c:	cb 01       	movw	r24, r22
    257e:	9e 83       	std	Y+6, r25	; 0x06
    2580:	8d 83       	std	Y+5, r24	; 0x05
    2582:	8d 81       	ldd	r24, Y+5	; 0x05
    2584:	9e 81       	ldd	r25, Y+6	; 0x06
    2586:	9a 83       	std	Y+2, r25	; 0x02
    2588:	89 83       	std	Y+1, r24	; 0x01
    258a:	89 81       	ldd	r24, Y+1	; 0x01
    258c:	9a 81       	ldd	r25, Y+2	; 0x02
    258e:	01 97       	sbiw	r24, 0x01	; 1
    2590:	f1 f7       	brne	.-4      	; 0x258e <SEV_SEG+0x25a>
    2592:	9a 83       	std	Y+2, r25	; 0x02
    2594:	89 83       	std	Y+1, r24	; 0x01
				{ //9 9  4 8
				u8 right = number % 10 ; //en2
				u8 lift = number / 10 ; //en1

				for(u16 i=0 ; i< time_ms/20
				; i++)
    2596:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2598:	9e 8d       	ldd	r25, Y+30	; 0x1e
    259a:	01 96       	adiw	r24, 0x01	; 1
    259c:	9e 8f       	std	Y+30, r25	; 0x1e
    259e:	8d 8f       	std	Y+29, r24	; 0x1d
			if(number < 100)
				{ //9 9  4 8
				u8 right = number % 10 ; //en2
				u8 lift = number / 10 ; //en1

				for(u16 i=0 ; i< time_ms/20
    25a0:	89 a1       	ldd	r24, Y+33	; 0x21
    25a2:	9a a1       	ldd	r25, Y+34	; 0x22
    25a4:	24 e1       	ldi	r18, 0x14	; 20
    25a6:	30 e0       	ldi	r19, 0x00	; 0
    25a8:	b9 01       	movw	r22, r18
    25aa:	0e 94 0b 13 	call	0x2616	; 0x2616 <__udivmodhi4>
    25ae:	cb 01       	movw	r24, r22
    25b0:	9c 01       	movw	r18, r24
    25b2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    25b4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    25b6:	82 17       	cp	r24, r18
    25b8:	93 07       	cpc	r25, r19
    25ba:	08 f4       	brcc	.+2      	; 0x25be <SEV_SEG+0x28a>
    25bc:	f4 ce       	rjmp	.-536    	; 0x23a6 <SEV_SEG+0x72>
					Seven_Segment_Enable2();
					   _delay_ms(10);
				}
				}

}
    25be:	a7 96       	adiw	r28, 0x27	; 39
    25c0:	0f b6       	in	r0, 0x3f	; 63
    25c2:	f8 94       	cli
    25c4:	de bf       	out	0x3e, r29	; 62
    25c6:	0f be       	out	0x3f, r0	; 63
    25c8:	cd bf       	out	0x3d, r28	; 61
    25ca:	cf 91       	pop	r28
    25cc:	df 91       	pop	r29
    25ce:	08 95       	ret

000025d0 <main>:
 *  Created on: Aug 31, 2023
 *      Author: Pro
 */

void main ()
{
    25d0:	df 93       	push	r29
    25d2:	cf 93       	push	r28
    25d4:	0f 92       	push	r0
    25d6:	cd b7       	in	r28, 0x3d	; 61
    25d8:	de b7       	in	r29, 0x3e	; 62
  // PUCH_BUTTON_1();
  // PUCH_BUTTON_2();

	while (1)
	{
		for(unsigned char i=0 ; i<=99 ; i++)
    25da:	19 82       	std	Y+1, r1	; 0x01
    25dc:	0c c0       	rjmp	.+24     	; 0x25f6 <main+0x26>
		{
			SEV_SEG(i , .5);
    25de:	89 81       	ldd	r24, Y+1	; 0x01
    25e0:	88 2f       	mov	r24, r24
    25e2:	90 e0       	ldi	r25, 0x00	; 0
    25e4:	40 e0       	ldi	r20, 0x00	; 0
    25e6:	50 e0       	ldi	r21, 0x00	; 0
    25e8:	60 e0       	ldi	r22, 0x00	; 0
    25ea:	7f e3       	ldi	r23, 0x3F	; 63
    25ec:	0e 94 9a 11 	call	0x2334	; 0x2334 <SEV_SEG>
  // PUCH_BUTTON_1();
  // PUCH_BUTTON_2();

	while (1)
	{
		for(unsigned char i=0 ; i<=99 ; i++)
    25f0:	89 81       	ldd	r24, Y+1	; 0x01
    25f2:	8f 5f       	subi	r24, 0xFF	; 255
    25f4:	89 83       	std	Y+1, r24	; 0x01
    25f6:	89 81       	ldd	r24, Y+1	; 0x01
    25f8:	84 36       	cpi	r24, 0x64	; 100
    25fa:	88 f3       	brcs	.-30     	; 0x25de <main+0xe>
    25fc:	ee cf       	rjmp	.-36     	; 0x25da <main+0xa>

000025fe <__udivmodqi4>:
    25fe:	99 1b       	sub	r25, r25
    2600:	79 e0       	ldi	r23, 0x09	; 9
    2602:	04 c0       	rjmp	.+8      	; 0x260c <__udivmodqi4_ep>

00002604 <__udivmodqi4_loop>:
    2604:	99 1f       	adc	r25, r25
    2606:	96 17       	cp	r25, r22
    2608:	08 f0       	brcs	.+2      	; 0x260c <__udivmodqi4_ep>
    260a:	96 1b       	sub	r25, r22

0000260c <__udivmodqi4_ep>:
    260c:	88 1f       	adc	r24, r24
    260e:	7a 95       	dec	r23
    2610:	c9 f7       	brne	.-14     	; 0x2604 <__udivmodqi4_loop>
    2612:	80 95       	com	r24
    2614:	08 95       	ret

00002616 <__udivmodhi4>:
    2616:	aa 1b       	sub	r26, r26
    2618:	bb 1b       	sub	r27, r27
    261a:	51 e1       	ldi	r21, 0x11	; 17
    261c:	07 c0       	rjmp	.+14     	; 0x262c <__udivmodhi4_ep>

0000261e <__udivmodhi4_loop>:
    261e:	aa 1f       	adc	r26, r26
    2620:	bb 1f       	adc	r27, r27
    2622:	a6 17       	cp	r26, r22
    2624:	b7 07       	cpc	r27, r23
    2626:	10 f0       	brcs	.+4      	; 0x262c <__udivmodhi4_ep>
    2628:	a6 1b       	sub	r26, r22
    262a:	b7 0b       	sbc	r27, r23

0000262c <__udivmodhi4_ep>:
    262c:	88 1f       	adc	r24, r24
    262e:	99 1f       	adc	r25, r25
    2630:	5a 95       	dec	r21
    2632:	a9 f7       	brne	.-22     	; 0x261e <__udivmodhi4_loop>
    2634:	80 95       	com	r24
    2636:	90 95       	com	r25
    2638:	bc 01       	movw	r22, r24
    263a:	cd 01       	movw	r24, r26
    263c:	08 95       	ret

0000263e <__prologue_saves__>:
    263e:	2f 92       	push	r2
    2640:	3f 92       	push	r3
    2642:	4f 92       	push	r4
    2644:	5f 92       	push	r5
    2646:	6f 92       	push	r6
    2648:	7f 92       	push	r7
    264a:	8f 92       	push	r8
    264c:	9f 92       	push	r9
    264e:	af 92       	push	r10
    2650:	bf 92       	push	r11
    2652:	cf 92       	push	r12
    2654:	df 92       	push	r13
    2656:	ef 92       	push	r14
    2658:	ff 92       	push	r15
    265a:	0f 93       	push	r16
    265c:	1f 93       	push	r17
    265e:	cf 93       	push	r28
    2660:	df 93       	push	r29
    2662:	cd b7       	in	r28, 0x3d	; 61
    2664:	de b7       	in	r29, 0x3e	; 62
    2666:	ca 1b       	sub	r28, r26
    2668:	db 0b       	sbc	r29, r27
    266a:	0f b6       	in	r0, 0x3f	; 63
    266c:	f8 94       	cli
    266e:	de bf       	out	0x3e, r29	; 62
    2670:	0f be       	out	0x3f, r0	; 63
    2672:	cd bf       	out	0x3d, r28	; 61
    2674:	09 94       	ijmp

00002676 <__epilogue_restores__>:
    2676:	2a 88       	ldd	r2, Y+18	; 0x12
    2678:	39 88       	ldd	r3, Y+17	; 0x11
    267a:	48 88       	ldd	r4, Y+16	; 0x10
    267c:	5f 84       	ldd	r5, Y+15	; 0x0f
    267e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2680:	7d 84       	ldd	r7, Y+13	; 0x0d
    2682:	8c 84       	ldd	r8, Y+12	; 0x0c
    2684:	9b 84       	ldd	r9, Y+11	; 0x0b
    2686:	aa 84       	ldd	r10, Y+10	; 0x0a
    2688:	b9 84       	ldd	r11, Y+9	; 0x09
    268a:	c8 84       	ldd	r12, Y+8	; 0x08
    268c:	df 80       	ldd	r13, Y+7	; 0x07
    268e:	ee 80       	ldd	r14, Y+6	; 0x06
    2690:	fd 80       	ldd	r15, Y+5	; 0x05
    2692:	0c 81       	ldd	r16, Y+4	; 0x04
    2694:	1b 81       	ldd	r17, Y+3	; 0x03
    2696:	aa 81       	ldd	r26, Y+2	; 0x02
    2698:	b9 81       	ldd	r27, Y+1	; 0x01
    269a:	ce 0f       	add	r28, r30
    269c:	d1 1d       	adc	r29, r1
    269e:	0f b6       	in	r0, 0x3f	; 63
    26a0:	f8 94       	cli
    26a2:	de bf       	out	0x3e, r29	; 62
    26a4:	0f be       	out	0x3f, r0	; 63
    26a6:	cd bf       	out	0x3d, r28	; 61
    26a8:	ed 01       	movw	r28, r26
    26aa:	08 95       	ret

000026ac <_exit>:
    26ac:	f8 94       	cli

000026ae <__stop_program>:
    26ae:	ff cf       	rjmp	.-2      	; 0x26ae <__stop_program>
